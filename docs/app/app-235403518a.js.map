{"version":3,"sources":["app/app.js","app/treeview/treeview.js","app/treeview/treeview.controller.js","app/treeview/tab-tags/tab-tags.directive.js","app/treeview/tab-params/tab-params.directive.js","app/treeview/tab-create/tab-create.directive.js","app/treeview/tab-actions/tab-actions.directive.js","app/treeview/filter-parser.factory.js","app/treeview/do-filter.filter.js","app/settings/settings.js","app/settings/settings.controller.js","app/navbar/navbar.controller.js","app/main/typedefs/typedefs.controller.js","app/main/main.js","app/main/main.controller.js","app/main/instance/network-modal.controller.js","app/main/instance/instance.controller.js","app/main/instance/group-modal.controller.js","app/main/editor/select-chan-modal.controller.js","app/main/editor/editor.controller.js","app/libraries/tdef-detail.component.js","app/libraries/libraries.js","app/libraries/libraries.controller.js","app/libraries/klist.component.js","app/libraries/dus-modal.controller.js","app/libraries/dus-installer.component.js","app/kevscript/kevscript.js","app/kevscript/kevscript.controller.js","app/components/util/util.factory.js","app/components/util/trust-html.filter.js","app/components/util/truncate.directive.js","app/components/util/save-file.factory.js","app/components/util/on-data.directive.js","app/components/util/naming-pattern.filter.js","app/components/util/kevoree/model-helper.factory.js","app/components/util/is-compatible.filter.js","app/components/util/hljs.directive.js","app/components/util/focus.directive.js","app/components/util/drop-target.directive.js","app/components/util/camelize.filter.js","app/components/util/alert.directive.js","app/components/services/storage.service.js","app/components/kevoree/ws.factory.js","app/components/kevoree/ui/ui-utils.factory.js","app/components/kevoree/ui/ui.factory.js","app/components/kevoree/ui/ui.constant.js","app/components/kevoree/ui/createNode.factory.js","app/components/kevoree/ui/createGroupWire.factory.js","app/components/kevoree/ui/createGroup.factory.js","app/components/kevoree/ui/createComponent.factory.js","app/components/kevoree/ui/createChannel.factory.js","app/components/kevoree/ui/createBinding.factory.js","app/components/kevoree/stringToNumber.directive.js","app/components/kevoree/registry.factory.js","app/components/kevoree/loading-overlay.directive.js","app/components/kevoree/kevscript.factory.js","app/components/kevoree/kevoree.factory.js","app/components/kevoree/instanceName.directive.js","app/components/kevoree/instance.factory.js","app/components/kevoree/editor.factory.js","app/components/dictionary/dictionary.component.js","app/components/deploy-unit/dus-list.component.js","app/app.constants.js","app/app.config.js"],"names":["angular","module","run","$rootScope","$stateParams","kEditor","kFactory","kRegistry","kWs","Notification","VERSION","dndLoad","filename","data","model","oldModel","getModel","loader","createJSONLoader","loadModelFromString","get","err","console","error","stack","title","message","setModel","delay","success","keys","obj","isObject","Object","jQuery","fadeOut","this","remove","host","port","path","url","config","$stateProvider","state","parent","views","content@","templateUrl","controller","onExit","removeModelUpdateListeners","$scope","$timeout","$filter","$uibModal","kModelHelper","kFilterParser","saveFile","hotkeys","transformComponentToTreeItem","instance","nbInstances","item","name","kevsName","eContainer","type","typeName","typeDefinition","version","tags","getTags","selected","isSelected","selectedItems","push","transformNodeToTreeItem","folded","isFolded","children","components","array","map","transformGroupToTreeItem","transformChannelToTreeItem","transformModelToTree","nodes","concat","groups","hubs","expandItemByPath","i","items","length","setFolded","findByPath","processModel","onKeyDown","evt","ctrlPressed","ctrlKey","onKeyUp","selectByType","clearSelected","forEach","setSelected","limit","showTags","filterExpr","filterComparator","treeReverse","query","unregister","addNewModelListener","document","addEventListener","loadMore","onClick","indexOf","splice","onExpand","collapse","expand","selectAll","child","selectNodes","selectGroups","selectChannels","selectComponents","selectByTag","clear","toggleTags","reverseSort","createItem","parentNode","clearFilter","filterError","filterTimeout","onFilterExprChanged","cancel","parseFilterExpr","parse","found","location","start","column","open","preventDefault","onFileLoaded","loading","warn","click","merge","compare","createModelCompare","applyOn","openFromNode","size","$uibModalInstance","storage","action","onHostChange","newVal","set","rendered","then","focus","confirm","closeError","close","mergeFromNode","save","serializer","createJSONSerializer","modelStr","serialize","JSON","stringify","deleteAll","deleteInstances","removeAllPackages","removeAllNodes","removeAllGroups","removeAllHubs","removeAllMBindings","removeAllRepositories","deleteSelection","selection","getSelection","warning","delete","toggleShortcutHelp","toggleCheatSheet","bindTo","add","combo","description","callback","connectSync","body","Math","floor","random","endsWith","str","suffix","substr","$on","removeEventListener","directive","restrict","scope","KWE_TAG","processTags","tag","removeTagFromStr","split","unwatchItems","$watchCollection","addTag","trim","tagMeta","findMetaDataByID","createValue","value","addMetaData","join","validate","removeTag","newTags","kInstance","util","link","convertType","process","prepend","append","min","max","each","toggleEachFlag","started","nets","first","types","getFqn","prev","curr","initDictionaries","dictionary","dictionaryType","select","attr","datatype","val","findValuesByID","newAttr","optional","isTruish","defaultValue","networkInformation","net","values","applyToAllInstances","content","randomString","randomNumber","randomBoolean","allRandom","toggleEach","createTdefItem","tdef","instanceTypes","node","getNodeTypes","group","getGroupTypes","channel","getChannelTypes","component","getComponentTypes","selectedType","selectedInstanceType","availableNodes","filter","selectedNode","instancesCount","verifyName","createInstances","instances","namePattern","index","metatype","createContainerNode","createGroup","createChannel","createComponentInstance","tagsMeta","findNodesByID","findGroupsByID","findHubsByID","j","findComponentsByID","create","addNodes","addGroups","addHubs","addComponents","onTypeChange","areInstanceTypesValid","isValid","processData","selectedGroup","processTag","tagsCount","modelHandler","unwatchTags","$watch","openGroupModal","resolve","factory","peg$subclass","ctor","constructor","prototype","peg$SyntaxError","expected","Error","captureStackTrace","peg$parse","input","text","substring","peg$savedPos","peg$currPos","peg$buildException","peg$computeLocation","peg$computePosDetails","pos","p","ch","details","peg$posDetailsCache","line","seenCR","charAt","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","cleanupExpected","sort","a","b","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","replace","expectedDesc","foundDesc","expectedDescs","Array","slice","peg$parseQuery","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseExpr","peg$FAILED","peg$parse_","peg$c0","peg$silentFails","peg$c1","peg$c2","peg$parseTerm","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$parseFilter","peg$parseIs","peg$parseVersion","peg$parseBound","peg$parseTag","peg$parseName","peg$c12","peg$c13","peg$parseIdentifierOrRegex","peg$c14","peg$c11","peg$c16","peg$c17","peg$parseIdentifier","peg$c18","peg$c15","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c19","peg$c32","peg$c33","peg$c34","peg$c31","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c35","peg$parseRegularExpressionLiteral","peg$c41","peg$c43","test","peg$c44","peg$c45","peg$c42","peg$c47","peg$c48","peg$parseRegularExpressionBody","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c46","peg$parseRegularExpressionFirstChar","peg$parseRegularExpressionChar","peg$c57","peg$c58","peg$parseRegularExpressionNonTerminator","peg$parseRegularExpressionBackslashSequence","peg$parseRegularExpressionClass","peg$c59","peg$c60","peg$c61","peg$c62","peg$parseLineTerminator","peg$parseSourceCharacter","peg$c63","peg$c64","peg$parseRegularExpressionClassChar","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c73","peg$c74","peg$c72","peg$result","options","arguments","peg$startRuleFunctions","Query","peg$startRuleFunction","head","tail","e","id","op","expr","operator","target","pattern","flags","RegExp","startRule","SyntaxError","actual","atomicName","match","some","atomicIs","is","atomicTag","atomicVers","vers","and","filtered","or","alreadyFiltered","notAddedItems","toAdd","kScript","registryUrl","getUrl","changeKevoreeRegistry","URL","setUrl","canChangeKevoreeRegistry","undefined","clearKevScriptCache","prefix","TinyConf","localStorage","key","startsWith","canClearKevScriptCache","find","$state","isCollapsed","ui","KWE_POSITION","packages","pkgsMap","pkg","genPkgName","tdefs","descMeta","descValue","getTypeDefinitionType","pkgPath","deployUnits","pkgName","collapsed","tdefName","dragDraggable","animate","placeholder","onStart","onDrag","onStop","dragOptions","revert","helper","addClasses","scroll","appendTo","containment","cursor","cursorAt","top","right","hasPackages","setDropTarget","hasClass","container","getElementById","left","offsetLeft","offsetTop","dataset","innerHTML","typeDef","findBestVersion","mousePos","x","clientX","y","clientY","clearTimeout","timeout","hoveredNode","removeClass","setTimeout","getHoveredNode","nodeBg","addClass","isCompatible","bind","addInstance","preProcess","selectedNodes","getSelectedNodes","nodeElem","parseInt","addHosts","addModelUpdateListener","unregister2","typedefs@main","editor@main","instance@main","controllerAs","editor","onModelHandler","drawModel","synced","syncWS","cloner","createModelCloner","currentModel","clone","$event","keyCode","disconnectSync","parentScope","WebSocket","clipboard","copy","getSelectedPaths","elem","paste","fixOverlapping","deletions","deleteSelected","addNewVal","addValues","addNetworkInformation","canSave","processTypeDefinition","vm","versions","selectedVersion","dus","dicAttrs","fragDicAttrs","processDictionary","dic","dicType","isFragment","fragmentDependant","processSelection","processing","css","preName","mainCollapsed","dicCollapsed","netCollapsed","descCollapsed","fragCollapsed","changeName","form","$valid","changeVersion","fragmentDictionary","fragDic","hasFragmentDictionary","hasNetworkInformation","manageNetwork","stopPropagation","addNetwork","createNetworkInfo","isReadOnly","isVirtual","groupModalHolder","selectedHost","selectedPort","selectedPath","modelHasErrors","hosts","127.0.0.1","ports","9000","paths","/","changeHost","changePort","changePath","subNodes","findFragmentDictionaryByID","closeModelHasErrorsWarning","closeSuccess","ws","pushModel","pull","startPort","endPort","orderByFilter","chan","isAlreadyBound","chanInstance","getRefInParent","uiUtils","KWE_FOLDED","moveInstance","axis","delta","posMeta","pt","init","dropDroppable","onDrop","dropOptions","accept","getDropTarget","getPointInEditor","m","f","element","draggable","transform","localMatrix","dropTarget","initFragmentDictionaries","foldMeta","TdefDetailController","$q","$onChanges","changes","currentValue","ctrl","disabled","onVersionChanged","addDusToModel","onAddDusToModel","baseUrl","bindings","$inject","updateTdefs","tdefDetail","tdefDetailVersions","activeNs","namespaces","ns","active","getTdefsByNamespace","getTdefVersions","getTdefDus","namespace","getLatestsByNamespace","getAllByNamespaceAndName","all","du","getReleases","getLatests","results","releases","transformDUS","latests","selectNs","nsClicked","selectTdef","tdefClicked","changeTdefVersion","currentDus","result","mergeDUSInModel","findPackagesByID","createPackage","withName","addPackages","addTypeDefinitions","addDeployUnits","KListController","isDefined","props","selectable","onSelect","elems","DusModalController","DusInstallerController","addToModel","onAddToModel","localModel","modelCompare","modelCloner","saveToFile","event","kevscript","finally","openFromFile","ctxVars","lintWarnings","linting","typing","editorState","editorOptions","mode","theme","lineWrapping","lineNumbers","styleActiveLine","extraKeys","Shift-Enter","Ctrl-Space","cm","showHint","hint","CodeMirror","completeSingle","alignWithWord","Ctrl-S","Ctrl-O","gutters","lint","getAnnotations","async","editorLoaded","_editor","on","warnings","signal","uploadKevscript","kevscriptUpload","reader","FileReader","onloadend","setValue","readAsBinaryString","files","trigger","closeMessage","isMergeable","clearCtxVars","addCtxVar","ctxVar","removeCtxVar","model2kevs","parseModel","possible","arrayUnique","$sce","trustAsHtml","TruncateController","expanded","isNumber","expandable","toggleText","reduce","modifiedContent","trustedHtml","toggle","template","ext","kevsAsBlob","Blob","downloadLink","createElement","download","navigator","userAgent","toLowerCase","href","createObjectURL","onclick","removeChild","style","display","appendChild","$parse","attrs","fn","onData","onload","onLoadEvt","$apply","$data","$name","readAsText","ignore","rInt","rStr","rIntMatch","exec","rIntVal","rStrMatch","rStrVal","KWE_SELECTED","genNewName","count","conflictInst","newName","walk","metaClassName","best","getPlatforms","platforms","platform","findFiltersByID","meta","getNodeTreeHeight","heights","height","getNodeTreeHeights","getCompDepth","comp","depth","getNbInstances","getNbNodes","getNbGroups","getNbChannels","getNbComponents","getHighestNode","nodePlatforms","bound","hub","attributes","findAttributesByID","isValueValid","virtual","isChannelDistributed","binding","isAttributeInType","attrName","fqnToPath","fqn","pop","last","pkgFqnToPath","initClone","instancePosMeta","instancePos","that","cloneDictionary","subNode","clonedNode","createDictionary","withGenerated_KMF_ID","nodeName","hljs","highlightBlock","show","Boolean","DND_CLASS","dropHandler","dataTransfer","originalEvent","file","overlay","hide","dragOverHandler","tid","dragLeaveHandler","off","_","c","$element","$attrs","loadEvent","fileread","$eval","onfileread","service","defaultVal","getItem","setItem","removeItem","len","cleanPath","answer","failed","onopen","send","onmessage","msg","onerror","onclose","sent","NODE_HEIGHT","NODE_WIDTH","COMP_HEIGHT","CHANNEL_RADIUS","GROUP_RADIUS","getNodeUIHeight","getCompUIHeight","provided","required","getHighestNodePath","getAbsoluteBBox","walkUp","parentBox","getBBox","bbox","isPointInsideElem","width","computeWireNodeAnchor","from","to","getHorizontalAlignment","getVerticalAlignment","alignment","computeBindingCoords","portElem","chanElem","chanM","compBox","portM","middle","updateSVGDefs","clipPath","defs","getElementsByTagName","createElementNS","grpCircle","setAttribute","chanCircle","nodeTreeHeights","nodeClip","nodeRect","compClip","compRect","uiCreateGroup","uiCreateGroupWire","uiCreateNode","uiCreateComponent","uiCreateBinding","uiCreateChannel","INVALID_RADIUS","overedInstancePath","draggedInstancePath","Snap","zpd","zoomThreshold","zoomScale","zpdEditor","mousedown","which","observer","MutationObserver","mutations","mutation","attributeName","matrix","observe","childList","characterData","dblclick","mina","ease","fill","textAnchor","createGroupWire","createNode","createComponent","createBinding","updateValidity","icon","circle","class","stroke","deleteInstance","highestNodePath","refreshNode","highestNode","redrawWire","redrawBindings","deleteGroupWire","groupPath","nodePath","deleteBinding","bindingPath","getSelected","readOnly","deleteChild","grp","removeGroups","removeSubNodes","removeUIElem","deleteNodes","deleteGroups","deleteChannels","deleteBindings","updateInstance","previousPath","data-path","relocate","compElem","fillOpacity","data-to","data-from","updatePosition","updateCompTypeDefinition","oldTypeDef","oldPortType","portType","findRequiredByID","portTypeRef","findProvidedByID","compUi","toggleFold","toggleChannel","uiChan","strokeDasharray","toggleBinding","uiBinding","togglePort","toggleComp","uiComp","toggleSubNodes","uiNode","treeHeight","computedWidth","clip-path","refreshComp","dy","asPX","PORT_X_PADDING","bg","getNodePathAtPoint","getEditorContainer","bannedPath","getHoveredChan","chans","isPointInsideBBox","getHoveredPort","hasErrors","order","plugin","Element","dragStart","insertBefore","nextSibling","handlers","handler","apply","local","dragMove","dx","dragStartX","dragStartY","changedTouches","firstDragMoveHandlers","dragEnd","args","removeData","drag","startPtDrag","endPtDrag","firstDragMove","cancelBubble","shiftKey","toggleClass","touchstart","constant","computedHeight","rect","strokeWidth","nameText","tdefText","removeHosts","redrawBinding","redrawChild","wire","updateWire","updateBindings","updateBindingCoords","computeData","grpElem","wireElem","grpMatrix","toBox","wireBg","toAnchor","d","getPointAtLength","cx","cy","strokeLineCap","strokeLineJoin","mouseover","mouseout","nodePlug","newTo","anchor","nTo","GROUP_PLUG_RADIUS","opacity","plug","r","plugPos","findSubNodesByID","grpM","nodeInstance","addSubNodes","output","hostHeight","providedDy","requiredDy","portPlug","portPos","portText","chanBg","createPort","addProvided","hoveredChan","createMBinding","addMBindings","hoveredPort","otherPortName","otherPortComp","otherPort","addRequired","binding2","data-name","removeComponents","mousemove","bindingElem","coords","path0","pt0","bindingBg","pt1","chanDx","chanDy","portDx","portDy","require","ngModel","$parsers","$formatters","parseFloat","KevoreeRegistryService","KEVOREE_REGISTRY_URL","protocol","hostname","cachedUrl","allNamespaces","when","KevoreeRegistryClient","getLatestTdefsByNamespace","transformTdef","getAllTdefsByNamespaceAndName","getDuReleases","transformDu","getDuLatests","inferType","getDescription","inferTypeFromJSON","getDescriptionFromJSON","desc","metaData","storedUrl","preSetModelHandler","postSetModelHandler","html","addPreSetModelHandler","addPostSetModelHandler","Logger","info","log","debug","KevoreeKevscript","resolver","Resolvers","tagResolverFactory","modelResolverFactory","registryResolverFactory","KevoreeLibrary","DefaultKevoreeFactory","instanceType","$setValidity","createFragmentDictionary","addFragmentDictionary","modelReactor","trace","processRefreshRecursively","invokeModelUpdateListeners","elementAttributeName","etype","modeling","api","ActionType","object","REMOVE","source","previous_value","hasBinding","REMOVE_ALL","ADD","updateChildNode","childNode","SET","processPort","KevoreeEditor","createContainerRoot","root","modelUpdateListenersEnabled","modelUpdateListeners","newModelListeners","modelListener","elementChanged","KevoreeValidator","addModelTreeListener","invokeNewModelListeners","noop","removeModelTreeListener","listener","strict","disableModelUpdateListeners","enableModelUpdateListeners","removeAllListeners","removeNewModelListeners","groupX","chanX","nodeX","mBindings","DictionaryController","fragment","DusListController","$urlRouterProvider","hotkeysProvider","hljsServiceProvider","NotificationProvider","otherwise","abstract","navbar@","setOptions","tabReplace","startTop","replaceMessage","ttl","$templateCache","put"],"mappings":"AAAA,YAUAA,SACAC,OAAA,aACA,YACA,UACA,YACA,eACA,gBACA,kBACA,cACA,aACA,OACA,oBAEAC,KAAA,aAAA,eAAA,UAAA,WAAA,YAAA,MAAA,eAAA,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAP,EAAAO,QAAAA,EAEAP,EAAAQ,QAAA,SAAAC,EAAAC,GACA,GAEAC,GAFAC,EAAAV,EAAAW,WACAC,EAAAX,EAAAY,kBAEA,KACAJ,EAAAG,EAAAE,oBAAAN,GAAAO,IAAA,GACA,MAAAC,GAQA,MAPAC,SAAAC,MAAA,4CACAD,QAAAC,MAAAF,EAAAG,OACAf,EAAAc,OACAE,MAAA,uBACAC,QAAA,uCAAAd,EAAA,kBAEAP,GAAAsB,SAAAZ,GAIAV,EAAAsB,SAAAb,EAAA,SAAAO,GACAA,EACAZ,EAAAc,OACAE,MAAA,uBACAC,QAAA,qCAAAd,EAAA,iBAAAS,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA,uBACAC,QAAA,6BAAAd,EAAA,iBAMAT,EAAA2B,KAAA,SAAAC,GACA,QAAA/B,QAAAgC,SAAAD,IACAE,OAAAH,KAAAC,IAMAG,OAAA,wBAAAC,QAAA,WACAC,KAAAC,SACAjC,EAAAkC,MACA9B,EAAAQ,SAAAZ,EAAAkC,KAAAlC,EAAAmC,MAAA,IAAAnC,EAAAoC,MAAA,GAAA,SAAAnB,EAAAP,EAAA2B,GACApB,EACAZ,EAAAc,OACAE,MAAA,iBACAC,QAAA,qCAAAe,EAAA,eAGApC,EAAAsB,SAAAb,GACAL,EAAAoB,SACAJ,MAAA,iBACAC,QAAA,6BAAAe,EAAA,sBC9EAzC,QAAAC,OAAA,aACAyC,QAAA,iBAAA,SAAAC,GACAA,EACAC,MAAA,YACAC,OAAA,MACAJ,IAAA,YACAK,OACAC,YACAC,YAAA,6BACAC,WAAA,iBAGAC,QAAA,UAAA,SAAA7C,GACAA,EAAA8C,2BAAA,mBCNAnD,QAAAC,OAAA,aAAAgD,WAAA,gBAAA,SAAA,WAAA,UAAA,YAAA,UAAA,eAAA,WAAA,MAAA,gBAAA,WAAA,UAAA,eAAA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAlD,EAAAmD,EAAAlD,EAAAE,EAAAiD,EAAAC,EAAAC,EAAAlD,GACA,QAAAmD,GAAAC,GACAT,EAAAU,aAAA,CACA,IAAAC,IACAC,KAAAH,EAAAG,KACAC,SAAAJ,EAAAK,aAAAF,KAAA,IAAAH,EAAAG,KACAG,KAAA,YACAC,SAAAP,EAAAQ,eAAAL,KACAM,QAAAT,EAAAQ,eAAAC,QACAC,KAAAf,EAAAgB,QAAAX,GACArB,KAAAqB,EAAArB,OACAiC,SAAAjB,EAAAkB,WAAAb,GAKA,OAHAE,GAAAU,UACArB,EAAAuB,cAAAC,KAAAb,GAEAA,EAGA,QAAAc,GAAAhB,GACAT,EAAAU,aAAA,CACA,IAAAC,IACAC,KAAAH,EAAAG,KACAG,KAAA,OACAC,SAAAP,EAAAQ,eAAAL,KACAM,QAAAT,EAAAQ,eAAAC,QACAC,KAAAf,EAAAgB,QAAAX,GACArB,KAAAqB,EAAArB,OACAsC,OAAAtB,EAAAuB,SAAAlB,GACAY,SAAAjB,EAAAkB,WAAAb,GACAmB,SAAAnB,EAAAoB,WAAAC,MAAAC,IAAAvB,GAKA,OAHAG,GAAAU,UACArB,EAAAuB,cAAAC,KAAAb,GAEAA,EAGA,QAAAqB,GAAAvB,GACAT,EAAAU,aAAA,CACA,IAAAC,IACAC,KAAAH,EAAAG,KACAG,KAAA,QACAC,SAAAP,EAAAQ,eAAAL,KACAM,QAAAT,EAAAQ,eAAAC,QACAC,KAAAf,EAAAgB,QAAAX,GACArB,KAAAqB,EAAArB,OACAiC,SAAAjB,EAAAkB,WAAAb,GAKA,OAHAE,GAAAU,UACArB,EAAAuB,cAAAC,KAAAb,GAEAA,EAGA,QAAAsB,GAAAxB,GACAT,EAAAU,aAAA,CACA,IAAAC,IACAC,KAAAH,EAAAG,KACAG,KAAA,UACAC,SAAAP,EAAAQ,eAAAL,KACAM,QAAAT,EAAAQ,eAAAC,QACAC,KAAAf,EAAAgB,QAAAX,GACArB,KAAAqB,EAAArB,OACAiC,SAAAjB,EAAAkB,WAAAb,GAKA,OAHAE,GAAAU,UACArB,EAAAuB,cAAAC,KAAAb,GAEAA,EAGA,QAAAuB,GAAAxE,GACA,MAAAA,GAAAyE,MAAAL,MAAAC,IAAAN,GAAAW,OAAA1E,EAAA2E,OAAAP,MAAAC,IAAAC,IAAAI,OAAA1E,EAAA4E,KAAAR,MAAAC,IAAAE,IAGA,QAAAM,GAAAnD,GACA,IAAA,GAAAoD,GAAA,EAAAA,EAAAxC,EAAAyC,MAAAC,OAAAF,IACA,GAAAxC,EAAAyC,MAAAD,GAAApD,OAAAA,EAKA,YAJAY,EAAAyC,MAAAD,GAAAd,SACA1B,EAAAyC,MAAAD,GAAAd,QAAA,EACAtB,EAAAuC,UAAA1F,EAAAW,WAAAgF,WAAA5C,EAAAyC,MAAAD,GAAApD,OAAA,KAOA,QAAAyD,KACA7C,EAAAU,YAAA,EACAV,EAAAuB,iBACAvB,EAAAyC,MAAAP,EAAAjF,EAAAW,YAiBA,QAAAkF,GAAAC,GACAC,EAAAD,EAAAE,QAGA,QAAAC,GAAAH,GACAC,EAAAD,EAAAE,QA2EA,QAAAE,GAAApC,GACAiC,GACAhD,EAAAoD,gBAGApD,EAAAyC,MAAAY,QAAA,SAAA1C,GACAA,EAAAI,OAAAA,IACAJ,EAAAU,UAAA,EACArB,EAAAuB,cAAAC,KAAAb,GACAP,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,MAvGAY,EAAAyC,SACAzC,EAAAuD,MAAA,GACAvD,EAAAU,YAAA,EACAV,EAAAwD,UAAA,EACAxD,EAAAuB,iBACAvB,EAAAyD,WAAA,GACAzD,EAAA0D,kBAAA,EACA1D,EAAA2D,aAAA,EACA3D,EAAA4D,MAAA,IAEA,IAAAC,GAAA5G,EAAA6G,oBAAA,WAAAjB,EACAA,IAEA,IAAAG,IAAA,CASAe,UAAAC,iBAAA,UAAAlB,GACAiB,SAAAC,iBAAA,QAAAd,GAEAlD,EAAAiE,SAAA,WACAjE,EAAAyC,MAAAC,OAAA1C,EAAAuD,QACAvD,EAAAuD,OAAA,KAIAvD,EAAAkE,QAAA,SAAAvD,GACA,GAAAU,GAAAV,EAAAU,QACA2B,KACA3B,GAAArB,EAAAuB,cAAAmB,OAAA,GAAA1C,EAAAuB,cAAA4C,QAAAxD,MAAA,IACAU,GAAAA,GAEArB,EAAAuB,cAAA8B,QAAA,SAAA1C,GACAP,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,GACAuB,EAAAU,UAAA,IAEArB,EAAAuB,cAAAmB,OAAA,GAEAtC,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAAiC,GACAV,EAAAU,UAAAA,EACAV,EAAAU,SACArB,EAAAuB,cAAAC,KAAAb,GAEAX,EAAAuB,cAAA6C,OAAApE,EAAAuB,cAAA4C,QAAAxD,GAAA,IAIAX,EAAAqE,SAAA,SAAA1D,GACAA,EAAAe,QAAAf,EAAAe,OACAtB,EAAAuC,UAAA1F,EAAAW,WAAAgF,WAAAjC,EAAAvB,MAAAuB,EAAAe,SAGA1B,EAAAsE,SAAA,WACAtE,EAAAyC,MAAAY,QAAA,SAAA1C,GACA,SAAAA,EAAAI,OACAJ,EAAAe,QAAA,EACAtB,EAAAuC,UAAA1F,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,OAKAY,EAAAuE,OAAA,WACAvE,EAAAyC,MAAAY,QAAA,SAAA1C,GACA,SAAAA,EAAAI,OACAJ,EAAAe,QAAA,EACAtB,EAAAuC,UAAA1F,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,OAKAY,EAAAwE,UAAA,WACAxE,EAAAuB,cAAAmB,OAAA,EACA1C,EAAAyC,MAAAY,QAAA,SAAA1C,GACAA,EAAAU,UAAA,CACA,IAAAZ,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,KACAgB,GAAAkD,YAAA7C,GAAA,GACAT,EAAAuB,cAAAC,KAAAb,GACAA,EAAAiB,UACAjB,EAAAiB,SAAAyB,QAAA,SAAAoB,GACAA,EAAApD,UAAA,EACAV,EAAAe,QAAA,EACAtB,EAAAuC,UAAAlC,GAAA,GACAL,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAA6B,EAAArF,OAAA,GACAY,EAAAuB,cAAAC,KAAAiD,QAoBAzE,EAAA0E,YAAA,WACAvB,EAAA,SAGAnD,EAAA2E,aAAA,WACAxB,EAAA,UAGAnD,EAAA4E,eAAA,WACAzB,EAAA,YAGAnD,EAAA6E,iBAAA,WACA7B,GACAhD,EAAAoD,gBAGApD,EAAAyC,MAAAY,QAAA,SAAA1C,GACA,SAAAA,EAAAI,MACAJ,EAAAiB,UACAjB,EAAAiB,SAAAyB,QAAA,SAAAoB,GACA9D,EAAAe,QAAA,EACA+C,EAAApD,UAAA,EACAjB,EAAAuC,UAAA1F,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,GACAgB,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAA6B,EAAArF,OAAA,GACAY,EAAAuB,cAAAC,KAAAiD,QAOAzE,EAAA8E,YAAA,SAAArC,GACAO,GACAhD,EAAAoD,gBAGAX,EAAAY,QAAA,SAAA1C,GACAA,EAAAU,UAAA,EACArB,EAAAuB,cAAAC,KAAAb,EACA,IAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,KACAgB,GAAAkD,YAAA7C,GAAA,GACA,cAAAE,EAAAI,MACAwB,EAAA9B,EAAAK,aAAA1B,WAKAY,EAAAoD,cAAA,WACApD,EAAAuB,cAAA8B,QAAA,QAAA0B,GAAApE,GACAA,EAAAU,UAAA,EACAjB,EAAAkD,YAAArG,EAAAW,WAAAgF,WAAAjC,EAAAvB,OAAA,GACAuB,EAAAiB,UACAjB,EAAAiB,SAAAyB,QAAA0B,KAGA/E,EAAAuB,cAAAmB,OAAA,GAGA1C,EAAAgF,WAAA,WACAhF,EAAAwD,UAAAxD,EAAAwD,UAGAxD,EAAAiF,YAAA,WACAjF,EAAA2D,aAAA3D,EAAA2D,aAGA3D,EAAAkF,WAAA,SAAAnE,EAAAN,EAAA0E,GACA,OAAApE,GACA,IAAA,OACAf,EAAAyC,MAAAjB,KAAAC,EAAAhB,GACA,MAEA,KAAA,QACAT,EAAAyC,MAAAjB,KAAAQ,EAAAvB,GACA,MAEA,KAAA,UACAT,EAAAyC,MAAAjB,KAAAS,EAAAxB,GACA,MAEA,KAAA,YACA,IAAA,GAAA+B,GAAA,EAAAA,EAAAxC,EAAAyC,MAAAC,OAAAF,IACA,GAAAxC,EAAAyC,MAAAD,GAAApD,OAAA+F,EAAA/F,OAAA,CACAY,EAAAyC,MAAAD,GAAAZ,SAAAJ,KAAAhB,EAAAC,GACA,UAOAT,EAAAoF,YAAA,WACApF,EAAA4D,MAAA,KACA5D,EAAAyD,WAAA,GACAzD,EAAAqF,YAAA,KAGA,IAAAC,EACAtF,GAAAuF,oBAAA,WACAtF,EAAAuF,OAAAF,GACAA,EAAArF,EAAA,WACAD,EAAAyF,mBACA,MAGAzF,EAAAyF,gBAAA,WACA,GAAA,IAAAzF,EAAAyD,WAAAf,OACA1C,EAAA4D,MAAA,KACA5D,EAAAqF,YAAA,SAEA,KACArF,EAAA4D,MAAAvD,EAAAqF,MAAA1F,EAAAyD,YACAzD,EAAAqF,YAAA,KACA,MAAApH,GACA+B,EAAA4D,MAAA,KACA5D,EAAAqF,YAAApH,EAAA2C,KAAA,MAAA3C,EAAA0H,MAAA,YAAA1H,EAAA2H,SAAAC,MAAAC,SAKA9F,EAAA+F,KAAA,SAAAhD,GACAA,EAAAiD,iBAEAhG,EAAAiG,aAAA,SAAAzI,EAAAC,GACAwC,EAAA,WACAD,EAAAkG,SAAA,EACAjG,EAAA,WACA,GAAAtC,GAAAV,EAAAW,UACA,KACA,GAAAC,GAAAX,EAAAY,mBACAJ,EAAAG,EAAAE,oBAAAN,GAAAO,IAAA,EACAf,GAAAsB,SAAAb,GACAL,EAAAoB,SACAJ,MAAA,iBACAC,QAAA,6BAAAd,EAAA,cAEA,MAAAS,GACAC,QAAAiI,KAAA,yDACAjI,QAAAC,MAAAF,EAAAG,OACAf,EAAAc,OACAE,MAAA,iBACAC,QAAA,uCAAAd,EAAA,cAEAP,EAAAsB,SAAAZ,WAEAqC,EAAAkG,SAAA,QAKApH,OAAA,cAAAsH,SAGApG,EAAAqG,MAAA,SAAAtD,GACAA,EAAAiD,iBACAhG,EAAAiG,aAAA,SAAAzI,EAAAC,GACAwC,EAAA,WACAD,EAAAkG,SAAA,EACAjG,EAAA,WACA,IACA,GAAApC,GAAAX,EAAAY,mBACAwI,EAAApJ,EAAAqJ,qBACA7I,EAAAG,EAAAE,oBAAAN,GAAAO,IAAA,EACAsI,GAAAD,MAAA3I,EAAAT,EAAAW,YAAA4I,QAAA9I,GACAT,EAAAsB,SAAAb,GACAL,EAAAoB,SACAJ,MAAA,kBACAC,QAAA,6BAAAd,EAAA,cAEA,MAAAS,GACAC,QAAAiI,KAAA,0DACAjI,QAAAC,MAAAF,EAAAG,OACAf,EAAAc,OACAE,MAAA,kBACAC,QAAA,0CAAAd,EAAA,sBAGAwC,EAAAkG,SAAA,QAKApH,OAAA,cAAAsH,SAGApG,EAAAyG,aAAA,SAAA1D,GACAA,EAAAiD,iBAEA7F,EAAA4F,MACAnG,YAAA,gDACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,UAAA,SAAAG,EAAA2G,EAAAC,GACA5G,EAAA3B,MAAA,iBACA2B,EAAA6G,OAAA,OACA7G,EAAAd,KAAA0H,EAAA5I,IAAA,gBAAA,aACAgC,EAAAb,KAAA,IACAa,EAAAZ,KAAA,IAEAY,EAAA8G,aAAA,SAAAC,GACAH,EAAAI,IAAA,gBAAAD,IAGAJ,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,SAAAqI,SACA,OAGAnH,EAAAoH,QAAA,WACApH,EAAAqH,aAEAjK,EAAAQ,SAAAoC,EAAAd,KAAAc,EAAAb,KAAAa,EAAAZ,KAAA,SAAAnB,EAAAP,EAAA2B,GACApB,EACAgC,EAAA,WACAD,EAAA7B,MAAAF,EAAAK,WAGArB,EAAAsB,SAAAb,GACAL,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6BAAAe,EAAA,cAEAsH,EAAAW,YAKAtH,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,WAMA6B,EAAAuH,cAAA,SAAAxE,GACAA,EAAAiD,iBAEA7F,EAAA4F,MACAnG,YAAA,gDACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,MAAA,UAAA,SAAAG,EAAA2G,EAAAvJ,EAAAwJ,GACA5G,EAAA3B,MAAA,kBACA2B,EAAA6G,OAAA,QACA7G,EAAAd,KAAA0H,EAAA5I,IAAA,gBAAA,aACAgC,EAAAb,KAAA,IACAa,EAAAZ,KAAA,IAEAY,EAAA8G,aAAA,SAAAC,GACAH,EAAAI,IAAA,gBAAAD,IAGAJ,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,SAAAqI,SACA,OAGAnH,EAAAoH,QAAA,WACApH,EAAAqH,aAEAjK,EAAAQ,SAAAoC,EAAAd,KAAAc,EAAAb,KAAAa,EAAAZ,KAAA,SAAAnB,EAAAP,EAAA2B,GACA,GAAApB,EACAgC,EAAA,WACAD,EAAA7B,MAAAF,EAAAK,cAEA,CACA,GAAAgI,GAAApJ,EAAAqJ,oBACAD,GAAAD,MAAA3I,EAAAT,EAAAW,YAAA4I,QAAA9I,GACAT,EAAAsB,SAAAb,GACAL,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6BAAAe,EAAA,cAEAsH,EAAAW,YAKAtH,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,WAMA6B,EAAAwH,KAAA,SAAAzE,EAAAvF,GACAuF,EAAAiD,gBACA,IAAAyB,GAAAvK,EAAAwK,sBAEA,KAEA,GAAAC,GAAAF,EAAAG,UAAA3K,EAAAW,WAEA+J,GAAAE,KAAAC,UAAAD,KAAAnC,MAAAiC,GAAA,KAAA,GAEArH,EAAAkH,KAAAG,EAAAnK,EAAA,QAAA,oBACA,MAAAS,GACAZ,EAAAc,OAAAE,MAAA,OAAAC,QAAA,wCAIA0B,EAAA+H,UAAA,SAAAhF,GACAA,EAAAiD,iBACAhG,EAAAgI,gBAAAjF,GACA9F,EAAAW,WAAAqK,qBAGAjI,EAAAgI,gBAAA,SAAAjF,GACAA,EAAAiD,gBACA,IAAAtI,GAAAT,EAAAW,UACAF,GAAAwK,iBACAxK,EAAAyK,kBACAzK,EAAA0K,gBACA1K,EAAA2K,qBACA3K,EAAA4K,wBACAzF,KAGA7C,EAAAuI,gBAAA,SAAAxF,GACAA,EAAAiD,gBACA,IAAAwC,GAAApI,EAAAqI,aAAAxL,EAAAW,WACA,KAAA4K,EAAA9F,OACArF,EAAAqL,SAAArK,MAAA,mBAAAC,QAAA,sBAEAkK,EAAAnF,QAAA,SAAA5C,GACAA,EAAAkI,WAEA9F,MAIA7C,EAAA4I,mBAAA,WACArI,EAAAsI,oBAGAtI,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,SAAAC,YAAA,2BAAAC,SAAAlJ,EAAA+F,OAEAxF,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,SAAAC,YAAA,yDAAAC,SAAAlJ,EAAAqG,QAEA9F,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,eAAAC,YAAA,2BAAAC,SAAAlJ,EAAAyG,eAEAlG,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,eAAAC,YAAA,yDAAAC,SAAAlJ,EAAAuH,gBAEAhH,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,eAAAC,YAAA,yDAAAC,SAAAlJ,EAAAmJ,cAEA5I,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,SACAC,YAAA,0CACAC,SAAA,SAAAnG,GACAA,EAAAiD,gBACA,IAAA1F,GAAAN,EAAAwH,IACArH,GAAA4F,MACAnG,YAAA,0CACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,SAAAG,EAAA2G,GACA3G,EAAA3B,MAAA,aACA2B,EAAAoJ,KAAA,uDACApJ,EAAAxC,SAAA,SAAA6L,KAAAC,MAAA,IAAAD,KAAAE,UAAA,KACA5C,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,aAAAqI,SACA,OAGAnH,EAAAwH,KAAA,WACA,QAAAgC,GAAAC,EAAAC,GACA,MAAAD,GAAAtF,QAAAuF,EAAAD,EAAA/G,OAAAgH,EAAAhH,WAAA,EAEA,GAAAgH,GAAA,OACAF,GAAAxJ,EAAAxC,SAAAkM,KACA1J,EAAAxC,SAAAwC,EAAAxC,SAAAmM,OAAA,EAAA3J,EAAAxC,SAAAkF,OAAAgH,EAAAhH,SAEApC,EAAAyC,EAAA/C,EAAAxC,UACAmJ,EAAAW,gBAOA/G,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,cAAAC,YAAA,yCAAAC,SAAAlJ,EAAA+H,YAEAxH,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,cAAAC,YAAA,wCAAAC,SAAAlJ,EAAAgI,kBAEAzH,EAAAuI,OAAA9I,GAAA+I,KAAAC,MAAA,MAAAC,YAAA,iDAAAC,SAAAlJ,EAAAuI,kBAEAhI,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,SACAC,YAAA,uBACAC,SAAA,SAAAnG,GACAA,EAAAiD,iBACAhG,EAAAwE,eAIAxE,EAAA4J,IAAA,WAAA,WACA/F,IACAE,SAAA8F,oBAAA,UAAA/G,GACAiB,SAAA8F,oBAAA,QAAA3G,GACAjD,EAAAuF,OAAAF,QCjmBA1I,QAAAC,OAAA,aACAiN,UAAA,UAAA,WACA,OACAC,SAAA,IACAC,OAAA,EACApK,YAAA,sCACAC,YAAA,SAAA,UAAA,WAAA,eAAA,UAAA,SAAAG,EAAA/C,EAAAC,EAAAkD,EAAA6J,GAIA,QAAAC,KACAlK,EAAAmB,QAEAnB,EAAAuB,cAAA8B,QAAA,SAAA1C,GACA,GAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,KACAgB,GAAAgB,QAAAX,GAAA4C,QAAA,SAAA8G,GACAnK,EAAAmB,KAAAgD,QAAAgG,MAAA,GACAnK,EAAAmB,KAAAK,KAAA2I,OASA,QAAAC,GAAAD,EAAAV,GACA,GAAAtI,GAAAsI,EAAAY,MAAA,KACA7H,EAAArB,EAAAgD,QAAAgG,EAIA,OAHA3H,MAAA,GACArB,EAAAiD,OAAA5B,EAAA,GAEArB,EAzBAnB,EAAAmK,IAAA,GACAnK,EAAAmB,QA2BA+I,GACA,IAAAI,GAAAtK,EAAAuK,iBAAA,gBAAAL,EACAlK,GAAA4J,IAAA,WAAAU,GAEAtK,EAAAwK,OAAA,WACAxK,EAAAmK,IAAAM,OAAA/H,OAAA,GAAA1C,EAAAmK,IAAAhG,QAAA,QAAA,IACAnE,EAAAmK,IAAAnK,EAAAmK,IAAAM,OACAzK,EAAAuB,cAAA8B,QAAA,SAAA1C,GACA,GAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,MACAsL,EAAAjK,EAAAkK,iBAAAV,EACAS,KACAA,EAAAxN,EAAA0N,cACAF,EAAA9J,KAAAqJ,EACAS,EAAAG,MAAA,GACApK,EAAAqK,YAAAJ,GAEA,IAAAvJ,GAAAf,EAAAgB,QAAAX,EACAU,GAAAgD,QAAAnE,EAAAmK,QAAA,IAEAhJ,EAAAK,KAAAxB,EAAAmK,KAEAxJ,EAAAQ,KAAAK,KAAAxB,EAAAmK,MAEAnK,EAAAmB,KAAAgD,QAAAnE,EAAAmK,QAAA,GAEAnK,EAAAmB,KAAAK,KAAAxB,EAAAmK,KAEAO,EAAAG,MAAA1J,EAAA4J,KAAA,OAEA/K,EAAAmK,IAAA,KAIAnK,EAAAgL,SAAA,WACAhL,EAAAmK,IAAAhG,QAAA,QAAA,EACAnE,EAAA7B,MAAA,wCAEA6B,EAAA7B,MAAA,MAIA6B,EAAAiL,UAAA,SAAAd,GACAnK,EAAAmB,KAAAiD,OAAApE,EAAAmB,KAAAgD,QAAAgG,GAAA,GACAnK,EAAAuB,cAAA8B,QAAA,SAAA1C,GACA,GAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,MACAsL,EAAAjK,EAAAkK,iBAAAV,EACA,IAAAS,EAAA,CACA,GAAAQ,GAAAd,EAAAD,EAAAO,EAAAG,MACAH,GAAAG,MAAAK,EAAAH,KAAA,KACApK,EAAAQ,KAAA+J,WCpFAtO,QAAAC,OAAA,aAAAiN,UAAA,aAAA,WAAA,UAAA,eAAA,YAAA,OAAA,SAAA7J,EAAAhD,EAAAmD,EAAA+K,EAAAC,GACA,OACArB,SAAA,IACAC,OAAA,EACApK,YAAA,0CACAyL,KAAA,SAAArL,GACA,QAAAsL,GAAAvK,GACA,OAAAA,GACA,IAAA,OACA,IAAA,SACA,IAAA,QACA,IAAA,QACA,IAAA,MACA,MAAA,QAEA,KAAA,UACA,MAAA,SAEA,SACA,MAAA,QAIA,QAAAwK,KACAvL,EAAA1B,QAAA,KACA0B,EAAA7B,OAAA,EACA6B,EAAA0C,UACA1C,EAAAwL,WACAxL,EAAAyL,UACAzL,EAAA0L,OACA1L,EAAA2L,OACA3L,EAAA4L,QACA5L,EAAA6L,gBAAA,EACA7L,EAAAR,OACAsM,QAAA,MAEA9L,EAAA+L,OAEA,IAAArO,GAAAT,EAAAW,UACA,IAAAoC,EAAAuB,cAAAmB,OAAA,EAAA,CACA,GAAAsJ,GAAAtO,EAAAkF,WAAA5C,EAAAuB,cAAA,GAAAnC,KACAY,GAAAiM,OAAAD,EAAApL,KAAA,KAAAR,EAAA8L,OAAAF,EAAA/K,gBACA,KAAA,GAAAuB,GAAA,EAAAA,EAAAxC,EAAAuB,cAAAmB,OAAAF,IAAA,CACA,GAAA2J,GAAAzO,EAAAkF,WAAA5C,EAAAuB,cAAAiB,EAAA,GAAApD,MACAgN,EAAA1O,EAAAkF,WAAA5C,EAAAuB,cAAAiB,GAAApD,KACA,IAAAgB,EAAA8L,OAAAC,EAAAlL,kBAAAb,EAAA8L,OAAAE,EAAAnL,gBAGA,MAFAjB,GAAAiM,MAAAzK,KAAA4K,EAAAxL,KAAA,KAAAR,EAAA8L,OAAAE,EAAAnL,sBACAjB,EAAA7B,OAAA,IAMA6B,EAAAuB,cAAA8B,QAAA,SAAA1C,GACA,GAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,KACA+L,GAAAkB,iBAAA5L,KAGAT,EAAAoL,KAAAA,EACApL,EAAAS,SAAA/C,EAAAkF,WAAA5C,EAAAuB,cAAA,GAAAnC,MACA,IAAAY,EAAAuB,cAAAmB,OACA1C,EAAAR,MAAAsM,QAAA9L,EAAAS,SAAAqL,QAEA9L,EAAAR,MAAAsM,QAAA,KAEA9L,EAAAe,KAAAf,EAAAS,SAAAQ,eACAjB,EAAAgB,SAAAZ,EAAA8L,OAAAlM,EAAAe,MACAf,EAAAsM,cACAtM,EAAAe,KAAAwL,iBACAvM,EAAAsM,WAAAtM,EAAAe,KAAAwL,eAAAC,OAAA,uCAAA1K,MAAAC,IAAA,SAAA0K,GACA,GACA5B,GADA9J,EAAAuK,EAAAmB,EAAAC,SAAA9L,OAEA,IAAA,IAAAZ,EAAAuB,cAAAmB,QAAA1C,EAAAS,SAAA6L,WAAA,CACA,GAAAK,GAAA3M,EAAAS,SAAA6L,WAAAM,eAAAH,EAAA7L,KACA,IAAA+L,EACA,OAAA5L,GACA,IAAA,SACA8J,GAAA8B,EAAA9B,KACA,MACA,SACAA,EAAA8B,EAAA9B,OAKA,GAAAgC,IACAjM,KAAA6L,EAAA7L,KACAkM,SAAA1M,EAAA2M,SAAAN,EAAAK,UACAE,aAAAP,EAAAO,aACAjM,KAAAA,EACA8J,MAAAA,EAEA,OAAAgC,MAIA7M,EAAAS,SAAAwM,oBACAjN,EAAAS,SAAAwM,mBAAAnL,MAAAuB,QAAA,SAAA6J,GACAlN,EAAA+L,KAAAvK,MACAZ,KAAAsM,EAAAtM,KACAuM,OAAAD,EAAAC,OAAArL,MAAAC,IAAA,SAAA4K,GACA,OAAA/L,KAAA+L,EAAA/L,KAAAiK,MAAA8B,EAAA9B,aAOAU,GACA,IAAAjB,GAAAtK,EAAAuK,iBAAA,gBAAAgB,EACAvL,GAAA4J,IAAA,WAAAU,GAEAtK,EAAAoN,oBAAA,WACA,IACApN,EAAAuB,cAAA8B,QAAA,SAAA1C,GACA,GAAAF,GAAAxD,EAAAW,WAAAgF,WAAAjC,EAAAvB,KACAqB,GAAAqL,QAAA9L,EAAAR,MAAAsM,QACA9L,EAAAsM,WAAAjJ,QAAA,SAAAoJ,GACA,GAAAE,GAAAlM,EAAA6L,WAAAM,eAAAH,EAAA7L,KACAZ,GAAA4L,KAAAa,EAAA7L,OACAZ,EAAAuJ,OAAAkD,GAEAE,EAAA9B,MAAA4B,EAAA5B,UAGA7K,EAAAsM,WAAAjJ,QAAA,SAAAoJ,GACAA,EAAA5B,MAAA,OAEAU,IACAvL,EAAA1B,SACAyC,KAAA,UACAsM,QAAA,WAEA,MAAApP,GACA+B,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,8CAEAnP,QAAAC,MAAA,qDACAD,QAAAC,MAAAF,EAAAG,OAGA6B,EAAA,WACAD,EAAA1B,QAAA,MACA,OAGA0B,EAAAuJ,OAAA,SAAAkD,GACA,OAAAA,EAAA1L,MACA,IAAA,OACA0L,EAAA5B,MAAA7K,EAAAwL,QAAAiB,EAAA7L,MAAAwK,EAAAkC,aAAAtN,EAAA0C,OAAA+J,EAAA7L,OAAAZ,EAAAyL,OAAAgB,EAAA7L,KACA,MAEA,KAAA,SACA6L,EAAA5B,MAAAO,EAAAmC,aAAAvN,EAAA0L,IAAAe,EAAA7L,MAAAZ,EAAA2L,IAAAc,EAAA7L,MACA,MAEA,KAAA,UACA6L,EAAA5B,MAAAO,EAAAoC,gBAAA,KAKAxN,EAAAyN,UAAA,WACAzN,EAAAsM,WAAAjJ,QAAArD,EAAAuJ,SAGAvJ,EAAA0N,WAAA,WACA1N,EAAA6L,gBAAA7L,EAAA6L,eACAhN,OAAAH,KAAAsB,EAAA4L,MAAAvI,QAAA,SAAAzC,GACAZ,EAAA4L,KAAAhL,GAAAZ,EAAA6L,uBC1KAjP,QAAAC,OAAA,aACAiN,UAAA,aAAA,WAAA,UAAA,WAAA,UAAA,YAAA,eAAA,OAAA,UAAA,SAAA7J,EAAAC,EAAAhD,EAAAD,EAAAkO,EAAA/K,EAAAgL,EAAAnB,GACA,OACAF,SAAA,IACAC,OAAA,EACApK,YAAA,0CACAyL,KAAA,SAAArL,GAWA,QAAA2N,GAAAC,GACA,OAAAhN,KAAAR,EAAA8L,OAAA0B,GAAAA,KAAAA,GAiFA,QAAArC,KACA,GAAA7N,GAAAT,EAAAW,UACAoC,GAAAmB,KAAA,GACAnB,EAAAY,KAAA,GACAZ,EAAAiM,OAAA,OAAA,QAAA,UAAA,aACAjM,EAAA6N,eACAC,KAAA1N,EAAA2N,aAAArQ,GAAAqE,IAAA4L,GACAK,MAAA5N,EAAA6N,cAAAvQ,GAAAqE,IAAA4L,GACAO,QAAA9N,EAAA+N,gBAAAzQ,GAAAqE,IAAA4L,GACAS,UAAAhO,EAAAiO,kBAAA3Q,GAAAqE,IAAA4L,IAEA3N,EAAAsO,aAAAtO,EAAAiM,MAAA,GACAjM,EAAA6N,cAAA7N,EAAAsO,cAAA5L,OAAA,IACA1C,EAAAuO,qBAAAvO,EAAA6N,cAAA7N,EAAAsO,cAAA,IAEAtO,EAAAwO,eAAAxO,EAAAyC,MAAAgM,OAAA,SAAA9N,GACA,MAAA,SAAAA,EAAAI,OAEAf,EAAA0O,aAAA1O,EAAAwO,eAAA,GACAxO,EAAA2O,eAAA,EACA3O,EAAA4O,aAWA,QAAAC,KAEA,IAAA,GADAC,MACAtM,EAAA,EAAAA,EAAAxC,EAAA2O,eAAAnM,IAAA,CACA,GAIA/B,GAJAG,EAAAV,EAAA,iBAAAF,EAAA+O,aACAC,MAAAxM,EACAyM,SAAAjP,EAAAsO,cAGA,QAAAtO,EAAAsO,cACA,IAAA,OACA7N,EAAAvD,EAAAgS,qBACA,MACA,KAAA,QACAzO,EAAAvD,EAAAiS,aACA,MACA,KAAA,UACA1O,EAAAvD,EAAAkS,eACA,MACA,KAAA,YACA3O,EAAAvD,EAAAmS,0BAGA5O,EAAAG,KAAAA,EACAH,EAAAQ,eAAAjB,EAAAuO,qBAAAX,KACAnN,EAAAqL,QAAA9L,EAAAR,MAAAsM,QACAX,EAAAkB,iBAAA5L,EACA,IAAAU,GAAAnB,EAAAmB,KAAAkJ,MAAA,KACAtI,IAAA,SAAAoI,GAAA,MAAAA,GAAAM,SACAgE,OAAA,SAAAtE,GAAA,MAAAA,GAAAzH,OAAA,IACAqI,KAAA,KACAuE,EAAApS,EAAA0N,aACA0E,GAAA1O,KAAAqJ,EACAqF,EAAAzE,MAAA1J,EACAV,EAAAqK,YAAAwE,GACAR,EAAAtN,KAAAf,GAEA,MAAAqO,GA/JA9O,EAAA4J,IAAA,WAAA5J,EAAAuK,iBAAA,gBAAA,WACAvK,EAAA4O,gBAGA5O,EAAA+O,YAAA,oBACA/O,EAAAR,OACAsM,SAAA,GAEA9L,EAAAmB,KAAA,GAMAnB,EAAA4O,WAAA,WACA,GAAApM,GAAA5B,CACA,QAAAZ,EAAAsO,cACA,IAAA,OACA,IAAA9L,EAAA,EAAAA,EAAAxC,EAAA2O,eAAAnM,IAEA,GADA5B,EAAAV,EAAA,iBAAAF,EAAA+O,aAAAC,MAAAxM,EAAAyM,SAAAjP,EAAAsO,eACArR,EAAAW,WAAA2R,cAAA3O,GAKA,YAJAZ,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,kCAAAzM,EAAA,KAKA,MAEA,KAAA,QACA,IAAA4B,EAAA,EAAAA,EAAAxC,EAAA2O,eAAAnM,IAEA,GADA5B,EAAAV,EAAA,iBAAAF,EAAA+O,aAAAC,MAAAxM,EAAAyM,SAAAjP,EAAAsO,eACArR,EAAAW,WAAA4R,eAAA5O,GAKA,YAJAZ,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,mCAAAzM,EAAA,KAKA,MAEA,KAAA,UACA,IAAA4B,EAAA,EAAAA,EAAAxC,EAAA2O,eAAAnM,IAEA,GADA5B,EAAAV,EAAA,iBAAAF,EAAA+O,aAAAC,MAAAxM,EAAAyM,SAAAjP,EAAAsO,eACArR,EAAAW,WAAA6R,aAAA7O,GAKA,YAJAZ,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,qCAAAzM,EAAA,KAKA,MAEA,KAAA,YACA,GAAA,IAAAZ,EAAAuB,cAAAmB,OAKA,YAJA1C,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,8EAIA,KAAA7K,EAAA,EAAAA,EAAAxC,EAAA2O,eAAAnM,IAAA,CACA5B,EAAAV,EAAA,iBAAAF,EAAA+O,aAAAC,MAAAxM,EAAAyM,SAAAjP,EAAAsO,cACA,KAAA,GAAAoB,GAAA,EAAAA,EAAA1P,EAAAuB,cAAAmB,OAAAgN,IAAA,CACA,GAAA5B,GAAA7Q,EAAAW,WAAA2R,cAAAvP,EAAAuB,cAAAmO,GAAA9O,KACA,KAAAkN,EAaA,YAJA9N,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,IAAArN,EAAAuB,cAAAmO,GAAA9O,KAAA,4BAVA,IAAAkN,EAAA6B,mBAAA/O,GAKA,YAJAZ,EAAA1B,SACAyC,KAAA,SACAsM,QAAA,uCAAAzM,EAAA,cAAAkN,EAAAlN,KAAA,QAiBAZ,EAAA1B,QAAA,MA0BAiN,GACA,IAAA1H,GAAA5G,EAAA6G,oBAAA,WAAAyH,GACAjB,EAAAtK,EAAAuK,iBAAA,QAAAgB,EACAvL,GAAA4J,IAAA,WAAA,WACA/F,IACAyG,MA0CAtK,EAAA4P,OAAA,WACA,GAAAlS,GAAAT,EAAAW,UACA,QAAAoC,EAAAsO,cACA,IAAA,OACAO,IAAAxL,QAAA,SAAA5C,GACA/C,EAAAmS,SAAApP,GACAT,EAAAkF,WAAAlF,EAAAsO,aAAA7N,IAEA,MACA,KAAA,QACAoO,IAAAxL,QAAA,SAAA5C,GACA/C,EAAAoS,UAAArP,GACAT,EAAAkF,WAAAlF,EAAAsO,aAAA7N,IAEA,MACA,KAAA,UACAoO,IAAAxL,QAAA,SAAA5C,GACA/C,EAAAqS,QAAAtP,GACAT,EAAAkF,WAAAlF,EAAAsO,aAAA7N,IAEA,MACA,KAAA,YACAT,EAAAuB,cAAA8B,QAAA,SAAA1C,GAEA,GAAAmN,GAAApQ,EAAA6R,cAAA5O,EAAAC,KACAiO,KAAAxL,QAAA,SAAA5C,GACAqN,EAAAkC,cAAAvP,GACAT,EAAAkF,WAAAlF,EAAAsO,aAAA7N,EAAAqN,SAOA9N,EAAAiQ,aAAA,WACAjQ,EAAA4O,cAGA5O,EAAAkQ,sBAAA,WACA,MAAA,cAAAlQ,EAAAsO,aACAtO,EAAAwO,eAAA9L,OAAA,GACA1C,EAAA6N,cAAA7N,EAAAsO,cAAA5L,OAAA,EAKA1C,EAAA6N,cAAA7N,EAAAsO,cAAA5L,OAAA,GAIA1C,EAAAmQ,QAAA,WACA,QAAA,cAAAnQ,EAAAsO,eACAtO,EAAA0O,iBAIA1O,EAAA1B,SACA0B,EAAA+O,YAAAtE,OAAA/H,OAAA,GACA1C,EAAAsO,aAAA5L,OAAA,GACA1C,EAAA2O,eAAA,GACA3O,EAAAuO,4BCrOA3R,QAAAC,OAAA,aACAiN,UAAA,cAAA,UAAA,YAAA,UAAA,SAAA5J,EAAAC,EAAAlD,GACA,OACA8M,SAAA,IACAC,OAAA,EACApK,YAAA,4CACAyL,KAAA,SAAArL,GACA,QAAAoQ,KACA,GAAA1S,GAAAT,EAAAW,UACAoC,GAAAqC,OAAA3E,EAAA2E,OAAAP,MACA9B,EAAAqQ,cAAAnQ,EAAA,WAAAF,EAAAqC,OAAA,QAAA,GAGA,QAAA6H,KACAlK,EAAAmB,QACAnB,EAAAyC,MAAAY,QAAA,QAAAiN,GAAA3P,GACAA,EAAAQ,KAAAkC,QAAA,SAAA8G,GACAnK,EAAAmB,KAAAgJ,KACAnK,EAAAmB,KAAAgJ,OAEAnK,EAAAmB,KAAAgJ,GAAA3I,KAAAb,KAEAA,EAAAiB,UACAjB,EAAAiB,SAAAyB,QAAAiN,KAGAtQ,EAAAuQ,UAAA1R,OAAAH,KAAAsB,EAAAmB,MAAAuB,OAGA,QAAA8N,KACAJ,IACAlG,IAGAsG,GACA,IAAAlG,GAAAtK,EAAAuK,iBAAA,QAAAiG,GACAC,EAAAzQ,EAAA0Q,OAAA,QAAA,WACAxG,MACA,EACAlK,GAAA4J,IAAA,WAAA,WACAU,IACAmG,MAGAzQ,EAAA2Q,eAAA,WACAxQ,EAAA4F,MACAnG,YAAA,qCACA8G,KAAA,KACAkK,SACA5C,MAAA,WACA,MAAAhO,GAAAqQ,gBAGAxQ,WAAA,yBCtDAjD,QAAAC,OAAA,aAAAgU,QAAA,gBAAA,WAMA,QAAAC,GAAArM,EAAAhF,GACA,QAAAsR,KACA/R,KAAAgS,YAAAvM,EAEAsM,EAAAE,UAAAxR,EAAAwR,UACAxM,EAAAwM,UAAA,GAAAF,GAGA,QAAAG,GAAA5S,EAAA6S,EAAAxL,EAAAC,GACA5G,KAAAV,QAAAA,EACAU,KAAAmS,SAAAA,EACAnS,KAAA2G,MAAAA,EACA3G,KAAA4G,SAAAA,EACA5G,KAAA4B,KAAA,cAEA,kBAAAwQ,OAAAC,mBACAD,MAAAC,kBAAArS,KAAAkS,GAMA,QAAAI,GAAAC,GAqTA,QAAAC,KACA,MAAAD,GAAAE,UAAAC,GAAAC,IAGA,QAAAxT,GAAAG,GACA,KAAAsT,GAAAtT,EAAA,KAAAiT,EAAAE,UAAAC,GAAAC,IAAAE,EAAAH,GAAAC,KAGA,QAAAG,GAAAC,GACA,GACAC,GACAC,EAFAC,EAAAC,GAAAJ,EAIA,IAAAG,EACA,MAAAA,EAGA,KADAF,EAAAD,EAAA,GACAI,GAAAH,IACAA,GAUA,KAPAE,EAAAC,GAAAH,GACAE,GACAE,KAAAF,EAAAE,KACAtM,OAAAoM,EAAApM,OACAuM,OAAAH,EAAAG,QAGAL,EAAAD,GACAE,EAAAV,EAAAe,OAAAN,GACA,OAAAC,GACAC,EAAAG,QACAH,EAAAE,OAEAF,EAAApM,OAAA,EACAoM,EAAAG,QAAA,GACA,OAAAJ,GAAA,WAAAA,GAAA,WAAAA,GACAC,EAAAE,OACAF,EAAApM,OAAA,EACAoM,EAAAG,QAAA,IAEAH,EAAApM,SACAoM,EAAAG,QAAA,GAGAL,GAIA,OADAG,IAAAJ,GAAAG,EACAA,EAIA,QAAAL,GAAAU,EAAAC,GACA,GAAAC,GAAAX,EAAAS,GACAG,EAAAZ,EAAAU,EAEA,QACA3M,OACA8M,OAAAJ,EACAH,KAAAK,EAAAL,KACAtM,OAAA2M,EAAA3M,QAEA8M,KACAD,OAAAH,EACAJ,KAAAM,EAAAN,KACAtM,OAAA4M,EAAA5M,SAKA,QAAA+M,GAAA1B,GACAQ,GAAAmB,KAIAnB,GAAAmB,KACAA,GAAAnB,GACAoB,OAGAA,GAAAvR,KAAA2P,IAGA,QAAAS,GAAAtT,EAAA6S,EAAAxL,EAAAC,GACA,QAAAoN,GAAA7B,GACA,GAAA3O,GAAA,CAYA,KAVA2O,EAAA8B,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAjK,YAAAkK,EAAAlK,aACA,EACAiK,EAAAjK,YAAAkK,EAAAlK,YACA,EAEA,IAIAzG,EAAA2O,EAAAzO,QACAyO,EAAA3O,EAAA,KAAA2O,EAAA3O,GACA2O,EAAA/M,OAAA5B,EAAA,GAEAA,IAKA,QAAA4Q,GAAAjC,EAAAxL,GACA,QAAA0N,GAAAC,GACA,QAAAC,GAAAtB,GACA,MAAAA,GAAAuB,WAAA,GAAAC,SAAA,IAAAC,cAGA,MAAAJ,GAAAK,QAAA,MAAA,QAAAA,QAAA,KAAA,OAAAA,QAAA,QAAA,OAAAA,QAAA,MAAA,OAAAA,QAAA,MAAA,OAAAA,QAAA,MAAA,OAAAA,QAAA,MAAA,OAAAA,QAAA,2BAAA,SAAA1B,GACA,MAAA,OAAAsB,EAAAtB,KACA0B,QAAA,wBAAA,SAAA1B,GACA,MAAA,MAAAsB,EAAAtB,KACA0B,QAAA,mBAAA,SAAA1B,GACA,MAAA,OAAAsB,EAAAtB,KACA0B,QAAA,mBAAA,SAAA1B,GACA,MAAA,MAAAsB,EAAAtB,KAIA,GACA2B,GACAC,EACArR,EAHAsR,EAAA,GAAAC,OAAA5C,EAAAzO,OAKA,KAAAF,EAAA,EAAAA,EAAA2O,EAAAzO,OAAAF,IACAsR,EAAAtR,GAAA2O,EAAA3O,GAAAyG,WAWA,OARA2K,GAAAzC,EAAAzO,OAAA,EACAoR,EAAAE,MAAA,GAAA,GAAAjJ,KAAA,MAAA,OAAA+I,EAAA3C,EAAAzO,OAAA,GACAoR,EAAA,GAEAD,EAAAlO,EACA,IAAA0N,EAAA1N,GAAA,IACA,eAEA,YAAAiO,EAAA,QAAAC,EAAA,UAOA,MAJA,QAAA1C,GACA6B,EAAA7B,GAGA,GAAAD,GAAA,OAAA5S,EACAA,EACA8U,EAAAjC,EAAAxL,GAAAwL,EAAAxL,EAAAC,GAGA,QAAAqO,KACA,GAAAC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAIA,IAFAP,EAAAvC,GACAwC,EAAAO,IACAP,IAAAQ,EAAA,CAqCA,IApCAP,KACAC,EAAA1C,GACA2C,EAAAM,IACAN,IAAAK,GACA,MAAApD,EAAAiC,WAAA7B,KACA4C,EAAAM,EACAlD,OAEA4C,EAAAI,EACA,IAAAG,IACAjC,EAAAkC,IAGAR,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACAF,EAAAC,IACAD,IAAAE,GACAL,GAAAA,EAAAC,EAAAC,EAAAC,GACAJ,EAAAC,IAEA3C,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,GAEAN,IAAAM,GACAP,EAAA5S,KAAA6S,GACAA,EAAA1C,GACA2C,EAAAM,IACAN,IAAAK,GACA,MAAApD,EAAAiC,WAAA7B,KACA4C,EAAAM,EACAlD,OAEA4C,EAAAI,EACA,IAAAG,IACAjC,EAAAkC,IAGAR,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACAF,EAAAC,IACAD,IAAAE,GACAL,GAAAA,EAAAC,EAAAC,EAAAC,GACAJ,EAAAC,IAEA3C,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,EAGAP,KAAAO,GACAjD,GAAAwC,EACAC,EAAAa,EAAAb,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,OAGAhD,IAAAuC,EACAA,EAAAS,CAGA,OAAAT,GAGA,QAAAQ,KACA,GAAAR,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAIA,IAFAP,EAAAvC,GACAwC,EAAAc,IACAd,IAAAQ,EAAA,CAqCA,IApCAP,KACAC,EAAA1C,GACA2C,EAAAM,IACAN,IAAAK,GACA,KAAApD,EAAAiC,WAAA7B,KACA4C,EAAAW,EACAvD,OAEA4C,EAAAI,EACA,IAAAG,IACAjC,EAAAsC,IAGAZ,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACAF,EAAAQ,IACAR,IAAAE,GACAL,GAAAA,EAAAC,EAAAC,EAAAC,GACAJ,EAAAC,IAEA3C,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,GAEAN,IAAAM,GACAP,EAAA5S,KAAA6S,GACAA,EAAA1C,GACA2C,EAAAM,IACAN,IAAAK,GACA,KAAApD,EAAAiC,WAAA7B,KACA4C,EAAAW,EACAvD,OAEA4C,EAAAI,EACA,IAAAG,IACAjC,EAAAsC,IAGAZ,IAAAI,GACAH,EAAAI,IACAJ,IAAAG,GACAF,EAAAQ,IACAR,IAAAE,GACAL,GAAAA,EAAAC,EAAAC,EAAAC,GACAJ,EAAAC,IAEA3C,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,KAGAhD,GAAA0C,EACAA,EAAAM,EAGAP,KAAAO,GACAjD,GAAAwC,EACAC,EAAAiB,EAAAjB,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,OAGAhD,IAAAuC,EACAA,EAAAS,CAGA,OAAAT,GAGA,QAAAe,KACA,GAAAf,GACAC,EACAC,EACAC,EACAC,EACAC,CAwDA,OAtDAL,GAAAvC,GACA,KAAAJ,EAAAiC,WAAA7B,KACAwC,EAAAkB,EACA1D,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAAyC,IAGAnB,IAAAQ,GACAP,EAAAQ,IACAR,IAAAO,GACAN,EAAAJ,IACAI,IAAAM,GACAL,EAAAM,IACAN,IAAAK,GACA,KAAApD,EAAAiC,WAAA7B,KACA4C,EAAAgB,EACA5D,OAEA4C,EAAAI,EACA,IAAAG,IACAjC,EAAA2C,IAGAjB,IAAAI,GACAjD,GAAAwC,EACAC,EAAAsB,EAAApB,GACAH,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAT,IAAAS,IACAT,EAAAwB,KAGAxB,EAGA,QAAAwB,KACA,GAAAxB,EAgBA,OAdAA,GAAAyB,IACAzB,IAAAS,IACAT,EAAA0B,IACA1B,IAAAS,IACAT,EAAA2B,IACA3B,IAAAS,IACAT,EAAA4B,IACA5B,IAAAS,IACAT,EAAA6B,QAMA7B,EAGA,QAAA6B,KACA,GAAA7B,GACAC,EACAC,CAmCA,OAjCAU,MACAZ,EAAAvC,GACAJ,EAAA5H,OAAAgI,GAAA,KAAAqE,GACA7B,EAAA6B,EACArE,IAAA,IAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAAoD,IAGA9B,IAAAQ,GACAP,EAAA8B,IACA9B,IAAAO,GACAjD,GAAAwC,EACAC,EAAAgC,EAAA/B,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAAuD,IAIAlC,EAGA,QAAAyB,KACA,GAAAzB,GACAC,EACAC,CAmCA,OAjCAU,MACAZ,EAAAvC,GACAJ,EAAA5H,OAAAgI,GAAA,KAAA0E,GACAlC,EAAAkC,EACA1E,IAAA,IAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAAyD,IAGAnC,IAAAQ,GACAP,EAAAmC,IACAnC,IAAAO,GACAjD,GAAAwC,EACAC,EAAAqC,EAAApC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAA4D,IAIAvC,EAGA,QAAA0B,KACA,GAAA1B,GACAC,EACAC,EACAC,CAqFA,OAnFAS,MACAZ,EAAAvC,GACAJ,EAAA5H,OAAAgI,GAAA,KAAA+E,IACAvC,EAAAuC,GACA/E,IAAA,IAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA8D,KAGAxC,IAAAQ,GACA,KAAApD,EAAAiC,WAAA7B,KACAyC,EAAAwC,GACAjF,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAgE,KAGAzC,IAAAO,IACA,KAAApD,EAAAiC,WAAA7B,KACAyC,EAAA0C,GACAnF,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAkE,KAGA3C,IAAAO,IACApD,EAAA5H,OAAAgI,GAAA,KAAAqF,IACA5C,EAAA4C,GACArF,IAAA,IAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAoE,KAGA7C,IAAAO,IACApD,EAAA5H,OAAAgI,GAAA,KAAAuF,IACA9C,EAAA8C,GACAvF,IAAA,IAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAsE,QAMA/C,IAAAO,IACAP,EAAA,MAEAA,IAAAO,GACAN,EAAA6B,IACA7B,IAAAM,GACAjD,GAAAwC,EACAC,EAAAiD,GAAAhD,EAAAC,GACAH,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAAwE,KAIAnD,EAGA,QAAA4B,KACA,GAAA5B,GACAC,EACAC,CAmCA,OAjCAU,MACAZ,EAAAvC,GACAJ,EAAA5H,OAAAgI,GAAA,KAAA2F,IACAnD,EAAAmD,GACA3F,IAAA,IAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA0E,KAGApD,IAAAQ,GACAP,EAAA8B,IACA9B,IAAAO,GACAjD,GAAAwC,EACAC,EAAAqD,GAAApD,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAA4E,KAIAvD,EAGA,QAAA2B,KACA,GAAA3B,GACAC,EACAC,EACAC,EACAC,CAuDA,OArDAQ,MACAZ,EAAAvC,GACAJ,EAAA5H,OAAAgI,GAAA,KAAA+F,IACAvD,EAAAuD,GACA/F,IAAA,IAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA8E,KAGAxD,IAAAQ,GACAP,EAAAmC,IACAnC,IAAAO,GACA,KAAApD,EAAAiC,WAAA7B,KACA0C,EAAAuD,GACAjG,OAEA0C,EAAAM,EACA,IAAAG,IACAjC,EAAAgF,KAGAxD,IAAAM,GACAL,EAAA4B,IACA5B,IAAAK,GACAjD,GAAAwC,EACAC,EAAA2D,GAAA1D,EAAAE,GACAJ,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAAkF,KAIA7D,EAGA,QAAAgC,KACA,GAAAhC,EAcA,OAZAY,MACAZ,EAAAqC,IACArC,IAAAS,IACAT,EAAA8D,KAEAlD,KACAZ,IAAAS,GACA,IAAAG,IACAjC,EAAAoF,IAIA/D,EAGA,QAAAqC,KACA,GAAArC,GACAC,EACAC,CAcA,IAZAU,KACAZ,EAAAvC,GACAwC,KACA+D,GAAAC,KAAA5G,EAAAe,OAAAX,MACAyC,EAAA7C,EAAAe,OAAAX,IACAA,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAuF,KAGAhE,IAAAO,EACA,KAAAP,IAAAO,GACAR,EAAA3S,KAAA4S,GACA8D,GAAAC,KAAA5G,EAAAe,OAAAX,MACAyC,EAAA7C,EAAAe,OAAAX,IACAA,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAuF,SAKAjE,GAAAQ,CAeA,OAbAR,KAAAQ,IACAjD,GAAAwC,EACAC,EAAAkE,MAEAnE,EAAAC,EACAW,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAAyF,KAIApE,EAGA,QAAA8D,KACA,GAAA9D,GACAC,EACAC,EACAC,EACAC,CA8FA,OA5FAQ,MACAZ,EAAAvC,GACA,KAAAJ,EAAAiC,WAAA7B,KACAwC,EAAAoE,GACA5G,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA2F,KAGArE,IAAAQ,GACAP,EAAAzC,GACA0C,EAAAoE,IAEArE,EADAC,IAAAM,EACApD,EAAAE,UAAA2C,EAAAzC,IAEA0C,EAEAD,IAAAO,GACA,KAAApD,EAAAiC,WAAA7B,KACA0C,EAAAkE,GACA5G,OAEA0C,EAAAM,EACA,IAAAG,IACAjC,EAAA2F,KAGAnE,IAAAM,GACA,MAAApD,EAAAiC,WAAA7B,KACA2C,EAAAoE,GACA/G,OAEA2C,EAAAK,EACA,IAAAG,IACAjC,EAAA8F,KAGArE,IAAAK,IACA,MAAApD,EAAAiC,WAAA7B,KACA2C,EAAAsE,GACAjH,OAEA2C,EAAAK,EACA,IAAAG,IACAjC,EAAAgG,KAGAvE,IAAAK,IACA,MAAApD,EAAAiC,WAAA7B,KACA2C,EAAAwE,GACAnH,OAEA2C,EAAAK,EACA,IAAAG,IACAjC,EAAAkG,KAGAzE,IAAAK,IACAL,EAAA0E,MAIA1E,IAAAK,GACAjD,GAAAwC,EACAC,EAAA8E,GAAA7E,EAAAE,GACAJ,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAG,KACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAAqG,KAIAhF,EAGA,QAAAuE,KACA,GAAAvE,GACAC,EACAC,EACAC,CAIA,IAFAH,EAAAvC,GACAwC,EAAAgF,IACAhF,IAAAQ,EAAA,CAGA,IAFAP,KACAC,EAAA+E,IACA/E,IAAAM,GACAP,EAAA5S,KAAA6S,GACAA,EAAA+E,GAEAhF,KAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,OAGAhD,IAAAuC,EACAA,EAAAS,CAGA,OAAAT,GAGA,QAAAiF,KACA,GAAAjF,GACAC,EACAC,CAyCA,OAvCAF,GAAAvC,GACAwC,EAAAxC,GACAmD,KACAuE,GAAAlB,KAAA5G,EAAAe,OAAAX,MACAyC,EAAA7C,EAAAe,OAAAX,IACAA,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAyG,KAGAxE,KACAV,IAAAO,EACAR,EAAA,QAEAxC,GAAAwC,EACAA,EAAAQ,GAEAR,IAAAQ,GACAP,EAAAmF,IACAnF,IAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAT,IAAAS,IACAT,EAAAsF,IACAtF,IAAAS,IACAT,EAAAuF,MAIAvF,EAGA,QAAAkF,KACA,GAAAlF,GACAC,EACAC,CAyCA,OAvCAF,GAAAvC,GACAwC,EAAAxC,GACAmD,KACA4E,GAAAvB,KAAA5G,EAAAe,OAAAX,MACAyC,EAAA7C,EAAAe,OAAAX,IACAA,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAA8G,KAGA7E,KACAV,IAAAO,EACAR,EAAA,QAEAxC,GAAAwC,EACAA,EAAAQ,GAEAR,IAAAQ,GACAP,EAAAmF,IACAnF,IAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAT,IAAAS,IACAT,EAAAsF,IACAtF,IAAAS,IACAT,EAAAuF,MAIAvF,EAGA,QAAAsF,KACA,GAAAtF,GACAC,EACAC,CA0BA,OAxBAF,GAAAvC,GACA,KAAAJ,EAAAiC,WAAA7B,KACAwC,EAAAyF,GACAjI,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAAgH,KAGA1F,IAAAQ,GACAP,EAAAmF,IACAnF,IAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAGAT,EAGA,QAAAqF,KACA,GAAArF,GACAC,EACAC,CA2BA,OAzBAF,GAAAvC,GACAwC,EAAAxC,GACAmD,KACAV,EAAA0F,IACAhF,KACAV,IAAAO,EACAR,EAAA,QAEAxC,GAAAwC,EACAA,EAAAQ,GAEAR,IAAAQ,GACAP,EAAA2F,IACA3F,IAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAGAT,EAGA,QAAAuF,KACA,GAAAvF,GACAC,EACAC,EACAC,CAYA,IAVAH,EAAAvC,GACA,KAAAJ,EAAAiC,WAAA7B,KACAwC,EAAA6F,GACArI,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAAoH,KAGA9F,IAAAQ,EAAA,CAGA,IAFAP,KACAC,EAAA6F,IACA7F,IAAAM,GACAP,EAAA5S,KAAA6S,GACAA,EAAA6F,GAEA9F,KAAAO,GACA,KAAApD,EAAAiC,WAAA7B,KACA0C,EAAA8F,GACAxI,OAEA0C,EAAAM,EACA,IAAAG,IACAjC,EAAAuH,KAGA/F,IAAAM,GACAR,GAAAA,EAAAC,EAAAC,GACAH,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,OAGAhD,IAAAuC,EACAA,EAAAS,CAGA,OAAAT,GAGA,QAAAgG,KACA,GAAAhG,GACAC,EACAC,CAsCA,OApCAF,GAAAvC,GACAwC,EAAAxC,GACAmD,KACAuF,GAAAlC,KAAA5G,EAAAe,OAAAX,MACAyC,EAAA7C,EAAAe,OAAAX,IACAA,OAEAyC,EAAAO,EACA,IAAAG,IACAjC,EAAAyH,KAGAxF,KACAV,IAAAO,EACAR,EAAA,QAEAxC,GAAAwC,EACAA,EAAAQ,GAEAR,IAAAQ,GACAP,EAAAmF,IACAnF,IAAAO,GACAR,GAAAA,EAAAC,GACAF,EAAAC,IAEAxC,GAAAuC,EACAA,EAAAS,KAGAhD,GAAAuC,EACAA,EAAAS,GAEAT,IAAAS,IACAT,EAAAsF,KAGAtF,EAGA,QAAA4F,KACA,GAAA5F,EAYA,OAVAqG,IAAApC,KAAA5G,EAAAe,OAAAX,MACAuC,EAAA3C,EAAAe,OAAAX,IACAA,OAEAuC,EAAAS,EACA,IAAAG,IACAjC,EAAA2H,KAIAtG,EAGA,QAAA6F,KACA,GAAA7F,EAYA,OAVA3C,GAAA7O,OAAAiP,IACAuC,EAAA3C,EAAAe,OAAAX,IACAA,OAEAuC,EAAAS,EACA,IAAAG,IACAjC,EAAA4H,KAIAvG,EAGA,QAAAU,KACA,GAAAV,GACAC,CAaA,KAXAW,KACAZ,KACAwG,GAAAvC,KAAA5G,EAAAe,OAAAX,MACAwC,EAAA5C,EAAAe,OAAAX,IACAA,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA8H,KAGAxG,IAAAQ,GACAT,EAAA1S,KAAA2S,GACAuG,GAAAvC,KAAA5G,EAAAe,OAAAX,MACAwC,EAAA5C,EAAAe,OAAAX,IACAA,OAEAwC,EAAAQ,EACA,IAAAG,IACAjC,EAAA8H,IAYA,OARA7F,MACAZ,IAAAS,IACAR,EAAAQ,EACA,IAAAG,IACAjC,EAAA+H,KAIA1G,EA/gDA,GA0SA2G,GA1SAC,EAAAC,UAAArY,OAAA,EACAqY,UAAA,MAGApG,KAEAqG,GACAC,MAAAhH,GAEAiH,EAAAjH,EAEAY,EAAA,IACAE,GACAhU,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA+L,EAAA,SAAAmG,EAAAC,GACA,MAAAA,GAAA1Y,OAAA,GAEA3B,KAAA,KACAsM,SAAA8N,GAAA/Y,OAAAgZ,EAAArZ,IAAA,SAAAsZ,EAAA7Y,GACA,MAAA4Y,GAAA5Y,GAAA,OAIA2Y,GAEAjG,EAAA,IACAC,GACApU,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAmM,EAAA,SAAA+F,EAAAC,GACA,MAAAA,GAAA1Y,OAAA,GAEA3B,KAAA,MACAsM,SAAA8N,GAAA/Y,OAAAgZ,EAAArZ,IAAA,SAAAsZ,EAAA7Y,GACA,MAAA4Y,GAAA5Y,GAAA,OAIA2Y,GAEA9F,EAAA,IACAC,GACAvU,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAsM,EAAA,IACAC,GACAzU,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAwM,EAAA,SAAA7R,GACA,MAAAA,IAEAwS,GACArV,KAAA,QACAkI,YAAA,SAEA+M,EAAA,QACAC,GACAlV,KAAA,UACA8J,MAAA,QACA5B,YAAA,WAEAkN,EAAA,SAAAmF,GACA,OAAAva,KAAA,OAAAsM,QAAAiO,IAEA7E,GACA1V,KAAA,QACAkI,YAAA,OAEAoN,EAAA,MACAC,GACAvV,KAAA,UACA8J,MAAA,MACA5B,YAAA,SAEAuN,EAAA,SAAA8E,GACA,OAAAva,KAAA,KAAAsM,QAAAiO,IAEAjE,IACAtW,KAAA,QACAkI,YAAA,SAEAyN,GAAA,QACAC,IACA5V,KAAA,UACA8J,MAAA,QACA5B,YAAA,WAEA2N,GAAA,IACAC,IACA9V,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA6N,GAAA,IACAC,IACAhW,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA+N,GAAA,KACAC,IACAlW,KAAA,UACA8J,MAAA,KACA5B,YAAA,QAEAiO,GAAA,KACAC,IACApW,KAAA,UACA8J,MAAA,KACA5B,YAAA,QAEAmO,GAAA,SAAAmE,EAAAD,GACA,GAAAE,IACAza,KAAA,OACAsM,QAAAiO,EAcA,OAZA,MAAAC,IACAC,EAAAC,SAAA,MAEA,MAAAF,IACAC,EAAAC,SAAA,MAEA,OAAAF,IACAC,EAAAC,SAAA,MAEA,OAAAF,IACAC,EAAAC,SAAA,MAEAD,GAEA/D,IACA1W,KAAA,QACAkI,YAAA,QAEAqO,GAAA,OACAC,IACAxW,KAAA,UACA8J,MAAA,OACA5B,YAAA,UAEAuO,GAAA,SAAA8D,GACA,OAAAva,KAAA,MAAAsM,QAAAiO,IAEAvD,IACAhX,KAAA,QACAkI,YAAA,UAEAyO,GAAA,SACAC,IACA5W,KAAA,UACA8J,MAAA,SACA5B,YAAA,YAEA2O,GAAA,IACAC,IACA9W,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA6O,GAAA,SAAA4D,EAAAJ,GACA,OAAAva,KAAA,QAAA2a,OAAAA,EAAArO,QAAAiO,IAEArD,IACAlX,KAAA,QACAkI,YAAA,uBAEAqP,IACAvX,KAAA,QACAkI,YAAA,cAEAiP,GAAA,gBACAE,IACArX,KAAA,QACA8J,MAAA,iBACA5B,YAAA,kBAEAoP,GAAA,WACA,MAAA7G,MAEA0H,IACAnY,KAAA,QACAkI,YAAA,sBAEAsP,GAAA,IACAC,IACAzX,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAyP,GAAA,IACAC,IACA5X,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA2P,GAAA,IACAC,IACA9X,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA6P,GAAA,IACAC,IACAhY,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEA+P,GAAA,GACAC,GAAA,SAAA0C,EAAAC,GACA,GAAA/Q,EAEA,KACAA,EAAA,GAAAgR,QAAAF,EAAAC,GACA,MAAAP,GACAld,EAAAkd,EAAA/c,SAGA,OAAAyC,KAAA,QAAAsM,QAAAxC,IAEAwO,GAAA,WACAC,IACAvY,KAAA,QACA8J,MAAA,YACA5B,YAAA,aAEAyQ,GAAA,UACAC,IACA5Y,KAAA,QACA8J,MAAA,WACA5B,YAAA,YAEA2Q,GAAA,KACAC,IACA9Y,KAAA,UACA8J,MAAA,KACA5B,YAAA,UAEA+Q,GAAA,IACAC,IACAlZ,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAkR,GAAA,IACAC,IACArZ,KAAA,UACA8J,MAAA,IACA5B,YAAA,OAEAoR,GAAA,UACAC,IACAvZ,KAAA,QACA8J,MAAA,YACA5B,YAAA,aAEAsR,GAAA,sBACAC,IACAzZ,KAAA,QACA8J,MAAA,yBACA5B,YAAA,0BAEAwR,IACA1Z,KAAA,MACAkI,YAAA,iBAEA2R,IACA7Z,KAAA,QACAkI,YAAA,cAEAyR,GAAA,SACAC,IACA5Z,KAAA,QACA8J,MAAA,SACA5B,YAAA,UAGA0I,GAAA,EACAD,GAAA,EACAS,KAEAC,KAAA,EACAtM,OAAA,EACAuM,QAAA,IAGAS,GAAA,EACAC,MACA+B,GAAA,CAIA,IAAA,aAAAgG,GAAA,CACA,KAAAA,EAAAgB,YAAAd,IACA,KAAA,IAAA5J,OAAA,mCAAA0J,EAAAgB,UAAA,KAGAZ,GAAAF,EAAAF,EAAAgB,WAmuCA,GAFAjB,EAAAK,IAEAL,IAAAlG,GAAAhD,KAAAJ,EAAA7O,OACA,MAAAmY,EAMA,MAJAA,KAAAlG,GAAAhD,GAAAJ,EAAA7O,QACAmQ,GAAA9R,KAAA,MAAAkI,YAAA,iBAGA2I,EAAA,KAAAmB,GAAAD,GAAAvB,EAAA7O,OACA6O,EAAAe,OAAAQ,IACA,KAAAA,GAAAvB,EAAA7O,OACAmP,EAAAiB,GAAAA,GAAA,GACAjB,EAAAiB,GAAAA,KAIA,MAtiDAhC,GAAAI,EAAAE,QAsiDA2K,YAAA7K,EAAAxL,MAAA4L,KC/jDA1U,QAAAC,OAAA,aACA4R,OAAA,WAAA,WAGA,QAAA0J,GAAAhH,EAAA6K,GACA,MAAAA,GAAAjb,MAAA,UAAAib,EAAAjb,KACAib,EAAA3O,QAAA8K,KAAAhH,GAEAA,IAAA6K,EAIA,QAAAC,GAAAtb,EAAA6a,GACA,GAAAU,GAAA/D,EAAAxX,EAAAC,KAAA4a,EAAAnO,QACA,QAAA6O,GAAAvb,EAAAiB,SACAjB,EAAAiB,SAAAua,KAAA,SAAA1X,GACA,MAAA0T,GAAA1T,EAAA7D,KAAA4a,EAAAnO,WAGA6O,EAGA,QAAAtb,GAAA6B,EAAA+Y,GACA,MAAA/Y,GAAAgM,OAAA,SAAA9N,GACA,MAAAsb,GAAAtb,EAAA6a,KAIA,QAAAY,GAAAzb,EAAA6a,GACA,GAAAU,EACA,QAAAV,EAAAnO,SACA,IAAA,OACA6O,EAAA,SAAAvb,EAAAI,IACA,MAEA,KAAA,OACA,IAAA,UACAmb,EAAA,YAAAvb,EAAAI,IACA,MAEA,KAAA,OACA,IAAA,YACAmb,EAAA,cAAAvb,EAAAI,IACA,MAEA,KAAA,QACA,IAAA,MACAmb,EAAA,UAAAvb,EAAAI,IACA,MAEA,KAAA,WACAmb,EAAAvb,EAAAU,QACA,MAEA,KAAA,SACA6a,EAAAvb,EAAAe,MACA,MAEA,SACAwa,GAAA,EAIA,OAAAA,GAAAvb,EAAAiB,SACAjB,EAAAiB,SAAAua,KAAA,SAAA1X,GACA,MAAA2X,GAAA3X,EAAA+W,KAGAU,EAGA,QAAAG,GAAA5Z,EAAA+Y,GACA,MAAA/Y,GAAAgM,OAAA,SAAA9N,GACA,MAAAyb,GAAAzb,EAAA6a,KAIA,QAAAc,GAAA3b,EAAA6a;AACA,GAAAU,GAAAvb,EAAAQ,KAAAgb,KAAA,SAAAhS,GACA,MAAAgO,GAAAhO,EAAAqR,EAAAnO,UAGA,QAAA6O,GAAAvb,EAAAiB,SACAjB,EAAAiB,SAAAua,KAAA,SAAA1X,GACA,MAAA6X,GAAA7X,EAAA+W,KAGAU,EAGA,QAAA/R,GAAA1H,EAAA+Y,GACA,MAAA/Y,GAAAgM,OAAA,SAAA9N,GACA,MAAA2b,GAAA3b,EAAA6a,KAIA,QAAAe,GAAA5b,EAAA6a,GACA,GAAAU,GAAA/D,EAAAxX,EAAAO,QAAAsa,EAAAnO,QAEA,QAAA6O,GAAAvb,EAAAiB,SACAjB,EAAAiB,SAAAua,KAAA,SAAA1X,GACA,MAAA8X,GAAA9X,EAAA+W,KAGAU,EAGA,QAAAM,GAAA/Z,EAAA+Y,GACA,MAAA/Y,GAAAgM,OAAA,SAAA9N,GACA,MAAA4b,GAAA5b,EAAA6a,KAIA,QAAAiB,GAAAha,EAAA+Y,GACA,GAAAkB,GAAAja,CAIA,OAHA+Y,GAAAnO,QAAAhK,QAAA,SAAAmY,GACAkB,EAAA9Y,EAAA8Y,EAAAlB,KAEAkB,EAGA,QAAAC,GAAAla,EAAA+Y,GACA,GAAAoB,MACAF,IAaA,OAZAlB,GAAAnO,QAAAhK,QAAA,SAAAmY,GACA,GAAAqB,GAAApa,EAAAgM,OAAA,SAAA9N,GACA,MAAAic,GAAAzY,QAAAxD,EAAAvB,SAAA,IAEA0d,EAAAlZ,EAAAiZ,EAAArB,EACAsB,GAAAzZ,QAAA,SAAA1C,GACAic,EAAAzY,QAAAxD,EAAAvB,SAAA,GACAwd,EAAApb,KAAAb,EAAAvB,QAGAsd,EAAAA,EAAAta,OAAA0a,KAEAJ,EAtIA,GAAA9Y,GAAA,YAwKA,OA/BAA,GAAA,SAAAnB,EAAA+Y,GACA,GAAA/Y,EAAA,CACA,IAAA+Y,EAwBA,MAAA/Y,EAvBA,QAAA+Y,EAAAza,MACA,IAAA,OACA,MAAAH,GAAA6B,EAAA+Y,EAEA,KAAA,KACA,MAAAa,GAAA5Z,EAAA+Y,EAEA,KAAA,MACA,MAAArR,GAAA1H,EAAA+Y,EAEA,KAAA,OACA,MAAAgB,GAAA/Z,EAAA+Y,EAEA,KAAA,MACA,MAAAiB,GAAAha,EAAA+Y,EAEA,KAAA,KACA,MAAAmB,GAAAla,EAAA+Y,EAEA,SACA,MAAA/Y,QClKA7F,QAAAC,OAAA,aACAyC,QAAA,iBAAA,SAAAC,GACAA,EACAC,MAAA,YACAC,OAAA,MACAJ,IAAA,YACAK,OACAC,YACAC,YAAA,6BACAC,WAAA,sBCFAjD,QAAAC,OAAA,aACAgD,WAAA,gBAAA,SAAA,UAAA,YAAA,UAAA,eAAA,SAAAG,EAAA+c,EAAA5f,EAAAyJ,EAAAvJ,GACA2C,EAAAgd,YAAA7f,EAAA8f,SAEAjd,EAAAid,OAAA,WACA,MAAA9f,GAAA8f,UAGAjd,EAAAkd,sBAAA,WACA,GAAAld,EAAAgd,cAAA7f,EAAA8f,SAAAxJ,WACA,IACA,GAAApU,GAAA,GAAA8d,KAAAnd,EAAAgd,YACA7f,GAAAigB,OAAA/d,GACAhC,EAAAoB,SACAJ,MAAA,mBACAC,QAAA,2BACAE,MAAA,MAEA,MAAAP,GACAZ,EAAAc,OACAE,MAAA,mBACAC,QAAA,eAAA0B,EAAAgd,YACAxe,MAAA,QAMAwB,EAAAqd,yBAAA,WACA,MAAAC,UAAAtd,EAAAgd,aACA,OAAAhd,EAAAgd,aACAhd,EAAAgd,cAAA7f,EAAA8f,SAAAxJ,YAGAzT,EAAAud,oBAAA,WACA,GAAAC,GAAAC,SAAAzf,IAAA,aACAa,QAAAH,KAAAgf,cAAAra,QAAA,SAAAsa,GACAA,EAAAC,WAAAJ,UACAE,cAAAC,MAKA3d,EAAA6d,uBAAA,WACA,GAAAL,GAAAC,SAAAzf,IAAA,aACA,OAAAa,QAAAH,KAAAgf,cAAAI,KAAA,SAAAH,GACA,MAAAA,GAAAC,WAAAJ,SC9CA5gB,QAAAC,OAAA,aACAgD,WAAA,cAAA,SAAA,SAAAke,GACA/e,KAAAgf,aAAA,EACAhf,KAAA+e,OAAAA,KCHAnhB,QAAAC,OAAA,aACAgD,WAAA,gBAAA,SAAA,UAAA,KAAA,eAAA,WAAA,YAAA,eAAA,eAAA,SAAAG,EAAA/C,EAAAghB,EAAA7d,EAAAlD,EAAAiO,EAAA9N,EAAA6gB,GA6LA,QAAArb,KACA7C,EAAAme,WACA,IAAAzgB,GAAAT,EAAAW,WAEAwgB,IACA1gB,GAAA8O,OAAA,yBACA1K,MAAAuB,QAAA,SAAAuK,GACA,GAAAyQ,GAAAje,EAAAke,WAAA1Q,EAAA9M,aACAsd,GAAAC,GAAAD,EAAAC,OACAD,EAAAC,GAAAE,MAAAH,EAAAC,GAAAE,SAEA,IAAAC,GAAA5Q,EAAAjD,iBAAA,eACA8T,EAAAD,EAAAA,EAAA3T,MAAA,IACA4T,IAAAA,EAAA/b,QAAA,MACA+b,EAAAA,EAAA9U,OAAA,EAAA,KAAA,OAEAyU,EAAAC,GAAAE,MAAA3Q,EAAAhN,OACAA,KAAAgN,EAAAhN,KACAG,KAAAX,EAAAse,sBAAA9Q,GACA+Q,QAAA/Q,EAAA9M,aAAA1B,OACAwf,YAAAhR,EAAAgR,YAAA9c,MACAmH,YAAAwV,KAIA5f,OAAAH,KAAA0f,GAAA/a,QAAA,SAAAwb,GACA,GAAAR,IACAzd,KAAAie,EACAC,WAAA,EACAP,SAEA1f,QAAAH,KAAA0f,EAAAS,GAAAN,OAAAlb,QAAA,SAAA0b,GACAV,EAAAE,MAAA/c,KAAA4c,EAAAS,GAAAN,MAAAQ,MAEA/e,EAAAme,SAAA3c,KAAA6c,KA9NAre,EAAAme,YAEAne,EAAAgf,eACAC,SAAA,EACAC,YAAA,OACAC,QAAA,UACAC,OAAA,SACAC,OAAA,UAGArf,EAAAsf,aACAC,OAAA,UACAC,OAAA,QACAC,YAAA,EACAC,QAAA,EACAC,SAAA,mBACAC,YAAA,mBACAC,OAAA,OACAC,UACAC,KAAA,EACAC,OAAA,IAIAhgB,EAAAigB,YAAA,WACA,MAAAphB,QAAAH,KAAAsB,EAAAme,UAAAzb,OAAA,GAGA1C,EAAAmf,QAAA,SAAApc,EAAApE,GAGA,GAFAsf,EAAAiC,cAAA,MAEAvhB,EAAA6gB,OAAAW,SAAA,wBAAAxhB,EAAA6gB,OAAAW,SAAA,kBAAA,CACA,GAAAC,GAAArc,SAAAsc,eAAA,mBACArhB,MAAA2T,QACA2N,KAAAF,EAAAG,WACAR,IAAAK,EAAAI,UAGA,IAAA7B,GAAAhgB,EAAA6gB,OAAA,GAAAiB,QAAA9B,QACAI,EAAApgB,EAAA6gB,OAAA,GAAAkB,UAAAjW,OACA8T,EAAAthB,EAAAW,WAAA4O,OAAAmS,EAAA,yBAAAI,EAAA,IACA/f,MAAA2hB,QAAAvgB,EAAAwgB,gBAAArC,EAAAzc,SAIA9B,EAAAof,OAAA,SAAArc,EAAApE,GACAsf,EAAA4C,UACAC,EAAA/d,EAAAge,QACAC,EAAAje,EAAAke,UAGAtiB,EAAA6gB,OAAAW,SAAA,wBAAAxhB,EAAA6gB,OAAAW,SAAA,qBACAe,aAAAliB,KAAAmiB,SACAniB,KAAAoiB,aACApiB,KAAAoiB,YAAA5U,OAAA,OAAA6U,YAAA,iBAGAriB,KAAAmiB,QAAAG,WAAA,WAIA,GAHAtiB,KAAAoiB,YAAAnD,EAAAsD,eACAtD,EAAA4C,SAAAC,EAAA9hB,KAAA2T,OAAA2N,KACArC,EAAA4C,SAAAG,EAAAhiB,KAAA2T,OAAAoN,KACA/gB,KAAAoiB,YAAA,CACA,GAAAI,GAAAxiB,KAAAoiB,YAAA5U,OAAA,MACAgV,GAAAC,SAAA,WAEArhB,EAAAshB,aAAA1iB,KAAA2hB,QAAA1jB,EAAAW,WAAAgF,WAAA5D,KAAAoiB,YAAA3U,KAAA,eAIAwR,EAAAiC,cAAAlhB,KAAAoiB,cAHAI,EAAAC,SAAA,SACAxD,EAAAiC,cAAA,WAKAjC,GAAAiC,cAAA,OAEAyB,KAAA3iB,MAAA,OAIAgB,EAAAqf,OAAA,SAAAtc,EAAApE,IACAA,EAAA6gB,OAAAW,SAAA,wBAAAxhB,EAAA6gB,OAAAW,SAAA,qBACAe,aAAAliB,KAAAmiB,SACAniB,KAAAoiB,aACApiB,KAAAoiB,YAAA5U,OAAA,OAAA2T,SAAA,UACA9iB,EAAAqL,SACArK,MAAA,gBACAC,QAAA,wDACAE,MAAA,MAGAQ,KAAAoiB,YAAA5U,OAAA,OAAA6U,YAAA,kBAEA1iB,EAAA6gB,OAAAW,SAAA,wBACA9iB,EAAAqL,SACArK,MAAA,gBACAC,QAAA,uCACAE,MAAA,YAKAQ,MAAA2hB,cACA3hB,MAAAmiB,cACAniB,MAAA2T,aACA3T,MAAAoiB,cAIAphB,EAAA4hB,YAAA,SAAAhU,GAKA,QAAAiU,GAAAphB,GACAA,EAAAQ,eAAA2M,EACAnN,EAAAqL,SAAA,CACA,IAAAiG,GAAA7U,EAAA0N,aACAmH,GAAAnR,KAAAsd,EACAnM,EAAAlH,MAAAhD,KAAAC,WACAgZ,EAAA,IACAE,EAAA,MAEAvgB,EAAAqK,YAAAiH,GACA5G,EAAAkB,iBAAA5L,GAdA,GAAA8d,GAAAthB,EAAAW,WAAA4O,OAAAoB,EAAA+Q,QAAA,yBAAA/Q,EAAAhN,KAAA,IACAgN,GAAAxN,EAAAwgB,gBAAArC,EAAAzc,MACA,IAiBArB,GAjBAM,EAAAX,EAAAse,sBAAA9Q,GAeAlQ,EAAAT,EAAAW,WACAkkB,EAAA7D,EAAA8D,kBAEA,QAAAhhB,GACA,IAAA,OACA+gB,EAAApf,OAAA,EACAof,EAAAze,QAAA,SAAA2e,GACA,GAAAlU,GAAApQ,EAAAkF,WAAAof,EAAAvV,KAAA,aACAqB,KACArN,EAAAvD,EAAAgS,sBACAzO,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA/C,EAAAmS,SAAApP,GACAqN,EAAAoU,SAAAzhB,OAIAA,EAAAvD,EAAAgS,sBACAzO,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA/C,EAAAmS,SAAApP,GAEA,MAEA,KAAA,QACAA,EAAAvD,EAAAiS,cACA1O,EAAAG,KAAA,QAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA/C,EAAAoS,UAAArP,EACA,MAEA,KAAA,YACAqhB,EAAApf,OAAA,EACAof,EAAAze,QAAA,SAAA2e,GACA,GAAAlU,GAAApQ,EAAAkF,WAAAof,EAAAvV,KAAA,aACAqB,KACArN,EAAAvD,EAAAmS,0BACA5O,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACAqN,EAAAkC,cAAAvP,MAIApD,EAAAqL,SACArK,MAAA,gBACAC,QAAA,uCACAE,MAAA,KAGA,MAEA,KAAA,UACAiC,EAAAvD,EAAAkS,gBACA3O,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA/C,EAAAqS,QAAAtP,IA+CA,IAAAoD,GAAA5G,EAAAklB,uBAAA,QAAAtf,GAAA,GACAuf,EAAAnlB,EAAA6G,oBAAA,QAAAjB,EAGAA,KAEA7C,EAAA4J,IAAA,WAAA,WACA/F,IACAue,SCpPAxlB,QAAAC,OAAA,aACAyC,QAAA,iBAAA,SAAAC,GACAA,EACAC,MAAA,QACAC,OAAA,MACAJ,IAAA,IACAK,OACAC,YACAC,YAAA,qBACAC,WAAA,YAEAwiB,iBACAziB,YAAA,kCACAC,WAAA,gBAEAyiB,eACA1iB,YAAA,8BACAC,WAAA,cAEA0iB,iBACA3iB,YAAA,kCACAC,WAAA,eACA2iB,aAAA,OAGA1iB,QAAA,KAAA,SAAAme,GACAA,EAAAwE,OAAA,YCnBA7lB,QAAAC,OAAA,aACAgD,WAAA,YAAA,SAAA,WAAA,eAAA,YAAA,UAAA,UAAA,WAAA,KAAA,eAAA,WAAA,MAAA,eAAA,SAAAG,EAAAC,EAAAjD,EAAAmD,EAAAlD,EAAAsD,EAAAD,EAAA2d,EAAA7d,EAAAlD,EAAAE,EAAAC,GACA,QAAAqlB,KACAzlB,EAAA0lB,YAEA,GAAA9e,GAAA5G,EAAA6G,oBAAA,OAAA4e,EAEA1iB,GAAA4iB,QAAA,CACA,IAAAC,EAEA7iB,GAAAiG,aAAA,aAEAjG,EAAA+F,KAAA,SAAAhD,GACAA,EAAAiD,iBAEAhG,EAAAiG,aAAA,SAAAzI,EAAAC,GACA,GAEAC,GAFAC,EAAAV,EAAAW,WACAC,EAAAX,EAAAY,kBAEA,KACAJ,EAAAG,EAAAE,oBAAAN,GAAAO,IAAA,GACA,MAAAC,GASA,MARAC,SAAAiI,KAAA,qDACAjI,QAAAC,MAAAF,EAAAG,OACAf,EAAAc,OACAE,MAAA,iBACAC,QAAA,uCAAAd,EAAA,YACAgB,MAAA,WAEAvB,GAAAsB,SAAAZ,GAIAV,EAAAsB,SAAAb,EAAA,SAAAO,GACAA,EACAZ,EAAAc,OACAE,MAAA,iBACAC,QAAA,gCAAAd,EAAA,iBAAAS,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA,iBACAC,QAAA,6BAAAd,EAAA,iBAKAsB,OAAA,cAAAsH,SAGApG,EAAAqG,MAAA,SAAAtD,GACAA,EAAAiD,iBACAhG,EAAAiG,aAAA,SAAAzI,EAAAC,GACA,GAGAC,GAHAG,EAAAX,EAAAY,mBACAwI,EAAApJ,EAAAqJ,qBACAuc,EAAA5lB,EAAA6lB,mBAEA,KACArlB,EAAAG,EAAAE,oBAAAN,GAAAO,IAAA,EACA,IAAAglB,GAAAF,EAAAG,MAAAhmB,EAAAW,WACA0I,GAAAD,MAAA2c,EAAAtlB,GAAA8I,QAAAwc,GACA,MAAA/kB,GAQA,MAPAC,SAAAiI,KAAA,sDACAjI,QAAAC,MAAAF,EAAAG,WACAf,GAAAc,OACAE,MAAA,kBACAC,QAAA,0CAAAd,EAAA,YACAgB,MAAA,OAKAvB,EAAAsB,SAAAykB,EAAA,SAAA/kB,GACAA,EACAZ,EAAAc,OACAE,MAAA,kBACAC,QAAA,iCAAAd,EAAA,iBAAAS,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA,kBACAC,QAAA,6BAAAd,EAAA,iBAKAsB,OAAA,cAAAsH,SAGApG,EAAAyG,aAAA,SAAA1D,GACAA,EAAAiD,iBAEA7F,EAAA4F,MACAnG,YAAA,gDACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,UAAA,SAAAG,EAAA2G,EAAAC,GACA5G,EAAA3B,MAAA,iBACA2B,EAAA6G,OAAA,OACA7G,EAAAd,KAAA0H,EAAA5I,IAAA,gBAAA,aACAgC,EAAAb,KAAA,IACAa,EAAAZ,KAAA,IAEAY,EAAA8G,aAAA,SAAAC,GACAH,EAAAI,IAAA,gBAAAD,IAGAJ,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,SAAAqI,SACA,OAGAnH,EAAAoH,QAAA,SAAA8b,KACAA,GAAAA,GAAA,KAAAA,EAAAC,WACAnjB,EAAAqH,aAEAjK,EAAAQ,SAAAoC,EAAAd,KAAAc,EAAAb,KAAAa,EAAAZ,KAAA,SAAAnB,EAAAP,EAAA2B,GACApB,EACAgC,EAAA,WACAD,EAAA7B,MAAAF,EAAAK,WAGAqI,EAAAW,QACArK,EAAAsB,SAAAb,EAAA,SAAAO,GACAA,EACAZ,EAAAc,OACAE,MAAA2B,EAAA3B,MACAC,QAAA,qCAAAe,EAAA,iBAAApB,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6BAAAe,EAAA,qBASAW,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,WAMA6B,EAAAuH,cAAA,SAAAxE,GACAA,EAAAiD,iBAEA7F,EAAA4F,MACAnG,YAAA,gDACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,MAAA,UAAA,SAAAG,EAAA2G,EAAAvJ,EAAAwJ,GACA5G,EAAA3B,MAAA,kBACA2B,EAAA6G,OAAA,QACA7G,EAAAd,KAAA0H,EAAA5I,IAAA,gBAAA,aACAgC,EAAAb,KAAA,IACAa,EAAAZ,KAAA,IAEAY,EAAA8G,aAAA,SAAAC,GACAH,EAAAI,IAAA,gBAAAD,IAGAJ,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,SACAqI,SACA,OAGAnH,EAAAoH,QAAA,SAAA8b,KACAA,GAAAA,GAAA,KAAAA,EAAAC,WACAnjB,EAAAqH,aAEAjK,EAAAQ,SAAAoC,EAAAd,KAAAc,EAAAb,KAAAa,EAAAZ,KAAA,SAAAnB,EAAAP,EAAA2B,GACA,GAAApB,EACAgC,EAAA,WACAD,EAAA7B,MAAAF,EAAAK,cAEA,CACAqI,EAAAW,OACA,IAAAhB,GAAApJ,EAAAqJ,qBACAuc,EAAA5lB,EAAA6lB,oBACAC,EAAAF,EAAAG,MAAAhmB,EAAAW,WACA0I,GAAAD,MAAA2c,EAAAtlB,GAAA8I,QAAAwc,GACA/lB,EAAAsB,SAAAykB,EAAA,SAAA/kB,GACAA,EACAZ,EAAAc,OACAE,MAAA2B,EAAA3B,MACAC,QAAA,sCAAAe,EAAA,iBAAApB,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6BAAAe,EAAA,qBASAW,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,WAMA6B,EAAAojB,eAAA,WACAP,IACAA,EAAAvb,QACArH,EAAA,WACAD,EAAA4iB,QAAA,MAKA5iB,EAAAmJ,YAAA,SAAApG,GAEA,GADAA,EAAAiD,iBACAhG,EAAA4iB,OA4GAvlB,EAAAqL,SACArK,MAAA,eACAC,QAAA,+BA9GA,CACA,GAAA+kB,GAAArjB,CACAG,GAAA4F,MACAnG,YAAA,gDACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,UAAA,SAAAG,EAAA2G,EAAAC,GACA5G,EAAA3B,MAAA,eACA2B,EAAA6G,OAAA,OACA7G,EAAAd,KAAA0H,EAAA5I,IAAA,gBAAA,aACAgC,EAAAb,KAAA,IACAa,EAAAZ,KAAA,IAEAY,EAAA8G,aAAA,SAAAC,GACAH,EAAAI,IAAA,gBAAAD,IAGAJ,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,SAAAqI,SACA,OAGAnH,EAAAoH,QAAA,SAAA8b,KACAA,GAAAA,GAAA,KAAAA,EAAAC,WACAnjB,EAAAqH,aAEArH,EAAAZ,KAGA,IAAAY,EAAAZ,KAAAsD,QAAA,MAAA1C,EAAAZ,KACAY,EAAAZ,KAAA,GACA,MAAAY,EAAAZ,KAAAuK,OAAA,EAAA,KACA3J,EAAAZ,KAAA,IAAAY,EAAAZ,MALAY,EAAAZ,KAAA,GASAyjB,EAAA,GAAAS,WAAA,QAAAtjB,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,MAEAyjB,EAAA7e,iBAAA,OAAA,WACA/D,EAAA,WACAojB,EAAAhkB,IAAAW,EAAAd,MAAA,KAAAc,EAAAb,KAAA,GAAA,IAAAa,EAAAb,MAAAa,EAAAZ,KACAikB,EAAAT,QAAA,IAEAjc,EAAAW,QACAjK,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6BAAA0B,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,KAAA,gBAIAyjB,EAAA7e,iBAAA,UAAA,SAAAjB,GACA,GAAAtF,GAAAsF,EAAAtF,IACA,WAAAA,EAAAkM,OAAA,EAAA,QAAAjH,UACAjF,EAAAA,EAAAkM,OAAA,QAAAjH,QAGA,IAAA7E,GAAAX,EAAAY,kBACA,KACA,GAAAJ,GAAAG,EAAAE,oBAAAN,GAAAO,IAAA,EACAf,GAAAsB,SAAAb,EAAA,SAAAO,GACAA,EACAZ,EAAAc,OACAE,MAAA2B,EAAA3B,MACAC,QAAA,mDAAA0B,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,KAAA,iBAAAnB,EAAAK,QACAE,MAAA,OAGAnB,EAAAoB,SACAJ,MAAA2B,EAAA3B,MACAC,QAAA,6CAAA0B,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,KAAA,gBAIA,MAAAnB,GACAZ,EAAAc,OACAE,MAAA2B,EAAA3B,MACAC,QAAA,iEACAE,MAAA,UAKAqkB,EAAA7e,iBAAA,QAAA,WACA3G,EAAAc,OACAE,MAAA2B,EAAA3B,MACAC,QAAA,2CAAA0B,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,KAAA,YACAZ,MAAA,SAIAqkB,EAAA7e,iBAAA,QAAA,WACA/D,EAAA,WACAojB,EAAAT,QAAA,IAEAvlB,EAAAqL,SACArK,MAAA2B,EAAA3B,MACAC,QAAA,gCAAA0B,EAAAd,KAAA,IAAAc,EAAAb,KAAAa,EAAAZ,KAAA,yBAMAY,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,YAYA6B,EAAAwH,KAAA,SAAAzE,EAAAvF,GACAuF,EAAAiD,gBACA,IAAAyB,GAAAvK,EAAAwK,sBAEA,KAEA,GAAAC,GAAAF,EAAAG,UAAA3K,EAAAW,WAEA+J,GAAAE,KAAAC,UAAAD,KAAAnC,MAAAiC,GAAA,KAAA,GAEArH,EAAAkH,KAAAG,EAAAnK,EAAA,QAAA,oBACA,MAAAS,GACAZ,EAAAc,OACAE,MAAA,OACAC,QAAA,uCAMA,IAAAilB,KACAvjB,GAAAwjB,KAAA,WACAD,EAAAtF,EAAAwF,mBACAhV,OAAA,SAAAiV,GACA,MAAA,gBAAAA,MAGA1jB,EAAA2jB,MAAA,WACAJ,EAAAlgB,QAAA,SAAAjE,GACA,GAAA1B,GAAAT,EAAAW,WACA6C,EAAA/C,EAAAkF,WAAAxD,EACA,IAAAqB,EAAA,CACA,GAAAwiB,GAAA7iB,EAAA6iB,MAAAxiB,EACA,QAAAL,EAAAse,sBAAAje,EAAAQ,iBACA,IAAA,OACAvD,EAAAmS,SAAAoT,GACAxiB,EAAAvB,MACAuB,EAAAvB,KAAAgjB,SAAAe,EAEA,MACA,KAAA,QACAvlB,EAAAoS,UAAAmT,EACA,MACA,KAAA,UACAvlB,EAAAqS,QAAAkT,EACA,MACA,KAAA,YACAxiB,EAAAK,aACAkP,cAAAiT,OAKAM,EAAA7gB,OAAA,GACAzF,EAAA0lB,aAIA3iB,EAAA4jB,eAAA,SAAA7gB,GACAA,EAAAiD,iBACA/I,EAAA2mB,kBAGA5jB,EAAA+H,UAAA,SAAAhF,GACAA,EAAAiD,iBACAhG,EAAAgI,gBAAAjF,GACA9F,EAAAW,WACAqK,qBAGAjI,EAAAgI,gBAAA,SAAAjF,GACAA,EAAAiD,gBACA,IAAAtI,GAAAT,EAAAW,UACAF,GAAAwK,iBACAxK,EAAAyK,kBACAzK,EAAA0K,gBACA1K,EAAA2K,qBACA3K,EAAA4K,yBAGAtI,EAAAuI,gBAAA,SAAAxF,GACAA,EAAAiD,gBACA,IAAA6d,GAAA5F,EAAA6F,gBACA,KAAAD,GACAxmB,EAAAqL,SACArK,MAAA,kBACAC,QAAA,sBAKA0B,EAAA4I,mBAAA,WACArI,EAAAsI,oBAsBAtI,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,2BACAC,SAAAlJ,EAAA+F,OAGAxF,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,yDACAC,SAAAlJ,EAAAqG,QAGA9F,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,eACAC,YAAA,2BACAC,SAAAlJ,EAAAyG,eAGAlG,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,eACAC,YAAA,yDACAC,SAAAlJ,EAAAuH,gBAGAhH,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,eACAC,YAAA,yDACAC,SAAAlJ,EAAAmJ,cAGA5I,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,0CACAC,SAAA,SAAAnG,GACAA,EAAAiD,gBACA,IAAA1F,GAAAN,EAAAwH,IACArH,GACA4F,MACAnG,YAAA,0CACA8G,KAAA,KACA7G,YAAA,SAAA,oBAAA,SAAAG,EAAA2G,GACA3G,EAAA3B,MAAA,aACA2B,EAAAoJ,KAAA,uDACApJ,EAAAxC,SAAA,SAAA6L,KAAAC,MAAA,IAAAD,KAAAE,UAAA,KACA5C,EAAAM,SAAAC,KAAA,WACAjH,EAAA,WACAnB,OAAA,aACAqI,SACA,OAGAnH,EAAAwH,KAAA,WACA,QAAAgC,GAAAC,EAAAC,GACA,MAAAD,GAAAtF,QAAAuF,EAAAD,EAAA/G,OAAAgH,EAAAhH,WAAA,EAEA,GAAAgH,GAAA,OACAF,GAAAxJ,EAAAxC,SAAAkM,KACA1J,EAAAxC,SAAAwC,EAAAxC,SAAAmM,OAAA,EAAA3J,EAAAxC,SAAAkF,OAAAgH,EAAAhH,SAEApC,EAAAyC,EAAA/C,EAAAxC,UACAmJ,EAAAW,gBAOA/G,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,QACAC,YAAA,kBACAC,SAAAlJ,EAAA4jB,iBAGArjB,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,cACAC,YAAA,yCACAC,SAAAlJ,EAAA+H,YAGAxH,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,cACAC,YAAA,wCACAC,SAAAlJ,EAAAgI,kBAGAzH,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,MACAC,YAAA,iDACAC,SAAAlJ,EAAAuI,kBAGAhI,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,uBACAC,SAAA,SAAAnG,GACAA,EAAAiD,iBACAiY,EAAAzZ,eAIAjE,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,gCACAC,SAAAlJ,EAAAwjB,OAGAjjB,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,iCACAC,SAAAlJ,EAAA2jB,QAeA3jB,EAAA4J,IAAA,WAAA,WACA/F,SCzlBAjH,QAAAC,OAAA,aACAgD,WAAA,4BAAA,SAAA,oBAAA,WAAA,OAAA,MAAA,WAAA,SAAAG,EAAA2G,EAAA1G,EAAA6N,EAAAZ,EAAAhQ,GACA8C,EAAA8N,KAAAA,EACA9N,EAAAkN,IAAAA,EACAlN,EAAA+G,QACAnG,KAAA,KACAiK,MAAA,MAGA7K,EAAA+jB,UAAA,WACA,GAAA/jB,EAAA+G,OAAAnG,MAAAZ,EAAA+G,OAAA8D,MAAA,CACA,GAAA8B,GAAAzP,EAAA0N,aACA+B,GAAA/L,KAAAZ,EAAA+G,OAAAnG,KACA+L,EAAA9B,MAAA7K,EAAA+G,OAAA8D,MACA7K,EAAAkN,IAAA8W,UAAArX,GACA3M,EAAA+G,OAAAnG,KAAA,KACAZ,EAAA+G,OAAA8D,MAAA,KACA/L,OAAA,oBAAAqI,UAIAnH,EAAA+I,IAAA,WACA+E,EAAAmW,sBAAAjkB,EAAAkN,KACAvG,EAAAW,SAGAtH,EAAA2I,OAAA,WACA3I,EAAAkN,IAAAvE,SACAhC,EAAAW,SAGAtH,EAAAkkB,QAAA,WACA,MAAAhX,GAAAC,OAAArL,MAAAY,OAAA,MCzBA9F,QAAAC,OAAA,aACAgD,WAAA,gBAAA,SAAA,WAAA,YAAA,UAAA,KAAA,UAAA,WAAA,YAAA,eAAA,SAAAG,EAAAC,EAAAE,EAAAI,EAAA0d,EAAAhhB,EAAAC,EAAAiO,EAAA/K,GAeA,QAAA+jB,KACAC,EAAAC,SAAAD,EAAA3jB,SAAAQ,eAAAH,aACA0L,OAAA,wBAAA4X,EAAA3jB,SAAAQ,eAAAL,KAAA,KAAAkB,MACAC,IAAA,SAAA6L,GACA,MAAAA,GAAA1M,UAEAkjB,EAAA3jB,SAAA6jB,gBAAAF,EAAA3jB,SAAAQ,eAAAC,QACAkjB,EAAAG,IAAAH,EAAA3jB,SAAAQ,eAAA2d,YAAA9c,KACA,IAAA0c,GAAA4F,EAAA3jB,SAAAQ,eAAA0J,iBAAA,cACA6T,GACA4F,EAAAnb,YAAAuV,EAAA3T,MAEAuZ,EAAAnb,YAAA,oBAEAmb,EAAA3jB,SAAAQ,eAAAsL,gBACA6X,EAAAI,SAAAJ,EAAA3jB,SAAAQ,eAAAsL,eACAC,OAAA,uCAAA1K,MACAsiB,EAAAK,aAAAL,EAAA3jB,SAAAQ,eAAAsL,eACAC,OAAA,sCAAA1K,QAEAsiB,EAAAI,YACAJ,EAAAK,iBAIAtZ,EAAAkB,iBAAA+X,EAAA3jB,UAUA,QAAAikB,GAAAC,EAAAC,EAAAC,GACAD,GACAD,EAAAxX,OAAArL,MAAAuB,QAAA,SAAAsJ,GACA,GAAAF,GAAAmY,EAAApY,OAAA,mBAAAG,EAAA/L,KAAA,KAAAkB,MAAA,EACA2K,GACA2X,EAAArX,SAAAN,EAAAqY,mBACAD,GACAlY,EAAAhE,SAGAkc,GACAlY,EAAAhE,SAIAgE,EAAAhE,WAoGA,QAAAoc,KACA9kB,EAAA,WAEAmkB,EAAA3jB,SAAA,KACA2jB,EAAArjB,KAAA,KACAqjB,EAAAC,YACAD,EAAAG,IAAA,KACAH,EAAAnb,YAAA,oBACAmb,EAAAI,YACAJ,EAAAK,gBACAL,EAAAY,YAAA,CAEA,IAAAxc,GAAApI,EAAAqI,aAAAxL,EAAAW,WACA,KAAA4K,EAAA9F,SACA0hB,EAAA3jB,SAAA+H,EAAA,GACA4b,EAAA3jB,WACA2jB,EAAA3jB,SAAA6jB,gBAAAF,EAAA3jB,SAAAQ,eAAAC,QACApC,OAAA,oBAAAmmB,IAAA,QAAA,SAEAb,EAAA3jB,SAAAykB,QAAAd,EAAA3jB,SAAAG,KACAwjB,EAAArjB,KAAAX,EAAAse,sBAAA0F,EAAA3jB,SAAAQ,gBACAkjB,IACAC,EAAAY,YAAA,MA1LA,GAEA7D,GAFAiD,EAAAplB,IAGAolB,GAAA3jB,SAAA,KACA2jB,EAAArjB,KAAA,KACAqjB,EAAAe,eAAA,EACAf,EAAAgB,cAAA,EACAhB,EAAAiB,cAAA,EACAjB,EAAAkB,eAAA,EACAlB,EAAAmB,iBA6DAnB,EAAAoB,WAAA,SAAAC,EAAA7kB,GACA6kB,EAAA7kB,KAAA8kB,SACAtB,EAAA3jB,SAAAG,KAAAA,IAIAwjB,EAAAuB,cAAA,SAAAzkB,GACAA,IACAkjB,EAAA3jB,SAAAQ,eAAAmjB,EAAA3jB,SAAAQ,eAAAH,aACA0L,OAAA,2BAAA4X,EAAA3jB,SAAAQ,eAAAL,KAAA,YAAAM,EAAA,KAAAY,MAAA,GACA4iB,EAAAN,EAAA3jB,SAAA6L,WAAA8X,EAAA3jB,SAAAQ,eAAAsL,gBAAA,GACA6X,EAAA3jB,SAAAmlB,mBAAA9jB,MAAAuB,QAAA,SAAAwiB,GACAnB,EAAAmB,EAAAzB,EAAA3jB,SAAAQ,eAAAsL,gBAAA,KAEA4X,MAIAC,EAAA0B,sBAAA,WACA,SAAA1B,EAAA3jB,WAAA2jB,EAAA3jB,SAAAmlB,qBACAxB,EAAA3jB,SAAAmlB,mBAAAlf,OAAA,GAMA0d,EAAA2B,sBAAA,WACA,MAAA3B,GAAA3jB,UAAA,mBAAA2jB,GAAA3jB,SAAA,oBAGA2jB,EAAA4B,cAAA,SAAAjjB,EAAAmK,GACAnK,EAAAkjB,kBACA9lB,EAAA4F,MACAnG,YAAA,uCACA8G,KAAA,KACAkK,SACA9C,KAAA,WACA,MAAAsW,GAAA3jB,UAEAyM,IAAA,WACA,MAAAA,KAGArN,WAAA,8BAIAukB,EAAA8B,WAAA,WACA,GAAAhZ,GAAAhQ,EAAAipB,mBACAjZ,GAAAtM,KAAA,MAAAwjB,EAAA3jB,SAAAwM,mBAAAvG,OAEAvG,EAAA4F,MACAnG,YAAA,uCACA8G,KAAA,KACAkK,SACA9C,KAAA,WACA,MAAAsW,GAAA3jB,UAEAyM,IAAA,WACA,MAAAA,KAGArN,WAAA,8BAIAukB,EAAAzT,eAAA,WACAxQ,EAAA4F,MACAnG,YAAA,qCACA8G,KAAA,KACAkK,SACA5C,MAAA,WACA,MAAAoW,GAAA3jB,WAGAZ,WAAA,oBAIAukB,EAAArX,SAAA3M,EAAA2M,SAEAqX,EAAAgC,WAAA,WAEA,GAAAhC,EAAA3jB,SAAA,CACA,GAAAkM,GAAAyX,EAAA3jB,SAAAkK,iBAAA,cACA,OAAAgC,IAAA,cAAAA,EAAA9B,MAEA,OAAA,GAGAuZ,EAAAiC,UAAA,WACA,MAAAjmB,GAAAimB,UAAAjC,EAAA3jB,WA+BAskB,GACA,IAAAlhB,GAAA5G,EAAAklB,uBAAA,WAAA4C,GAAA,GACA3C,EAAAnlB,EAAA6G,oBAAA,WAAAihB,EAEA/kB,GAAA4J,IAAA,WAAA,WACA/F,IACAue,IACAniB,EAAAuF,OAAA2b,QChNAvkB,QAAAC,OAAA,aACAgU,QAAA,mBAAA,WACA,OACA3R,KAAA,YACAC,KAAA,OACAC,KAAA,OAGAS,WAAA,kBAAA,SAAA,oBAAA,WAAA,QAAA,UAAA,MAAA,mBAAA,SAAAG,EAAA2G,EAAA1G,EAAA+N,EAAA/Q,EAAAG,EAAAkpB,GAgCA,GA/BAtmB,EAAAe,KAAA,UACAf,EAAA6G,OAAA,OACA7G,EAAAgO,MAAAA,EACAhO,EAAAumB,aAAAD,EAAApnB,KACAc,EAAAwmB,aAAAF,EAAAnnB,KACAa,EAAAymB,aAAAH,EAAAlnB,KACAY,EAAAglB,YAAA,EACAhlB,EAAA0mB,eAAAzpB,EAAAypB,iBAEA1mB,EAAA2mB,OACAC,YAAA,WAGA5mB,EAAA6mB,OACAC,KAAA,WAGA9mB,EAAA+mB,OACAC,IAAA,WAGAhnB,EAAAinB,WAAA,WACAX,EAAApnB,KAAAc,EAAAumB,cAEAvmB,EAAAknB,WAAA,WACAZ,EAAAnnB,KAAAa,EAAAwmB,cAEAxmB,EAAAmnB,WAAA,WACAb,EAAAlnB,KAAAY,EAAAymB,cAGAzY,EAAA1B,WAAA,CACA,GAAApN,GAAA8O,EAAA1B,WAAAM,eAAA,OACA1N,KAAAc,EAAA2mB,MAAAznB,EAAA2L,SACA7K,EAAA2mB,MAAAznB,EAAA2L,OAAAmD,EAAApN,KAGA,IAAAzB,GAAA6O,EAAA1B,WAAAM,eAAA,OACAzN,KAAAa,EAAA6mB,MAAA1nB,EAAA0L,SACA7K,EAAA6mB,MAAA1nB,EAAA0L,OAAAmD,EAAApN,KAGA,IAAAxB,GAAA4O,EAAA1B,WAAAM,eAAA,OACAxN,KAAAY,EAAA+mB,MAAA3nB,EAAAyL,SACA7K,EAAA+mB,MAAA3nB,EAAAyL,OAAAmD,EAAApN,MAIAoN,EAAAoZ,SAAAtlB,MAAAuB,QAAA,SAAAyK,GACA,GAAA+X,GAAA7X,EAAAqZ,2BAAAvZ,EAAAlN,KAEA,IAAAilB,EAAA,CACA,GAAA1mB,GAAA0mB,EAAAjZ,eAAA,QACAxN,EAAAymB,EAAAjZ,eAAA,OAEAzN,KAAAa,EAAA6mB,MAAA1nB,EAAA0L,SACA7K,EAAA6mB,MAAA1nB,EAAA0L,OAAAiD,EAAAlN,MAGAxB,IAAAY,EAAA+mB,MAAA3nB,EAAAyL,SACA7K,EAAA+mB,MAAA3nB,EAAAyL,OAAAiD,EAAAlN,MAIAkN,EAAAb,mBAAAnL,MAAAuB,QAAA,SAAA6J,GACAA,EAAAC,OAAArL,MAAAuB,QAAA,SAAAsJ,GACA3M,EAAA2mB,MAAAha,EAAA9B,SACA7K,EAAA2mB,MAAAha,EAAA9B,OAAAiD,EAAAlN,YAMAZ,EAAAqH,WAAA,WACArH,EAAA7B,MAAA,MAGA6B,EAAAsnB,2BAAA,WACAtnB,EAAA0mB,eAAA,MAGA1mB,EAAAunB,aAAA,WACAvnB,EAAAvB,QAAA,KAGA,IAAA+oB,EACAxnB,GAAAwB,KAAA,WACAxB,EAAA6G,OAAA,YACA7G,EAAA7B,MAAA,KACA6B,EAAAglB,YAAA,EACA/kB,EAAA,WACAunB,EAAApqB,EAAAqqB,UACAxqB,EAAAW,WACAoC,EAAAumB,aACAvmB,EAAAwmB,aACAxmB,EAAAymB,aACA,SAAAxoB,GACAgC,EAAA,WACAhC,GACA+B,EAAAglB,YAAA,EACAhlB,EAAA7B,MAAAF,EAAAK,UAEA0B,EAAAglB,YAAA,EACAhlB,EAAAvB,SAAA,UAOAuB,EAAA0nB,KAAA,WACA1nB,EAAA6G,OAAA,cACA7G,EAAA7B,MAAA,KACA6B,EAAAglB,YAAA,EACAwC,EAAApqB,EAAAQ,SACAoC,EAAAumB,aACAvmB,EAAAwmB,aACAxmB,EAAAymB,aACA,SAAAxoB,EAAAP,GACAuC,EAAA,WACAhC,GACA+B,EAAAglB,YAAA,EACAhlB,EAAA7B,MAAAF,EAAAK,UAEA0B,EAAAglB,YAAA,EACAhlB,EAAAvB,SAAA,EACAxB,EAAAsB,SAAAb,SAMAsC,EAAAsH,MAAA,WACAkgB,GACAA,EAAAlgB,QAEAX,EAAAW,YCjJA1K,QAAAC,OAAA,aACAgD,WAAA,uBAAA,SAAA,oBAAA,YAAA,UAAA,gBAAA,YAAA,UAAA,WAAA,eAAA,eAAA,SAAAG,EAAA2G,EAAAghB,EAAAC,EAAAC,EAAA1c,EAAAlO,EAAAC,EAAAkD,EAAA8d,GACA,GAAA7c,EACArB,GAAA8O,UAAA+Y,EAAA5qB,EAAAW,WAAA0E,KAAAR,MAAA2M,OAAA,SAAAqZ,GAEA,MADAA,GAAAzmB,UAAA,GACAjB,EAAA2nB,eAAAH,EAAAE,KACA1nB,EAAA2nB,eAAAJ,EAAAG,IACA1nB,EAAAshB,aAAAoG,EAAA7mB,eAAA0mB,EAAA7mB,aAAAA,eACAV,EAAAshB,aAAAoG,EAAA7mB,eAAA2mB,EAAA9mB,aAAAA,gBACA,uBACAd,EAAAiM,MAAA4b,EAAAznB,EAAA+N,gBAAAlR,EAAAW,YAAA6Q,OAAA,SAAA1N,GAEA,MADAA,GAAAM,UAAA,EACAjB,EAAAshB,aAAA3gB,EAAA4mB,EAAA7mB,aAAAA,eACAV,EAAAshB,aAAA3gB,EAAA6mB,EAAA9mB,aAAAA,gBACA,QAEAd,EAAAiM,MAAAvJ,OAAA,IACA1C,EAAAiM,MAAA,GAAA5K,UAAA,EACAA,EAAArB,EAAAiM,MAAA,IAGAjM,EAAAmQ,QAAA,WACA,IAAA,GAAA3N,GAAA,EAAAA,EAAAxC,EAAA8O,UAAApM,OAAAF,IACA,GAAAxC,EAAA8O,UAAAtM,GAAAnB,SACA,OAAA,CAIA,KAAAmB,EAAA,EAAAA,EAAAxC,EAAAiM,MAAAvJ,OAAAF,IACA,GAAAxC,EAAAiM,MAAAzJ,GAAAnB,SACA,OAAA,CAIA,QAAA,GAGArB,EAAAwM,OAAA,SAAAsb,GACAA,EAAAzmB,WACArB,EAAA8O,UAAAzL,QAAA,SAAAqgB,GACAoE,EAAA1oB,SAAAskB,EAAAtkB,QAAAskB,EAAAriB,WACAqiB,EAAAriB,UAAA,KAGArB,EAAAiM,MAAA5I,QAAA,SAAAqgB,GACAoE,EAAA1oB,SAAAskB,EAAAtkB,QAAAskB,EAAAriB,WACAqiB,EAAAriB,UAAA,KAGAymB,EAAAzmB,UAAAymB,EAAAzmB,SACAA,EAAAymB,IAIA9nB,EAAAoH,QAAA,WACA,GAAA4gB,EACA,IAAA,oBAAA3mB,EAAA4mB,iBAAA,CAEAD,EAAA9qB,EAAAkS,gBACA4Y,EAAApnB,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAye,EAAA/mB,eAAAI,EACA2mB,EAAAlc,SAAA,CACA,IAAAiG,GAAA7U,EAAA0N,aACAmH,GAAAnR,KAAAsd,EACAnM,EAAAlH,MAAAhD,KAAAC,WAAAgZ,EAAA,IAAAE,EAAA,MACAgH,EAAAld,YAAAiH,GACA5G,EAAAkB,iBAAA2b,GACA/qB,EAAAW,WAAAmS,QAAAiY,OAEAA,GAAA3mB,CAEAsF,GAAAW,MAAA0gB,OChEAprB,QAAAC,OAAA,aACAgD,WAAA,cAAA,SAAA,UAAA,KAAA,UAAA,eAAA,WAAA,YAAA,UAAA,eAAA,eAAA,aAAA,SAAAG,EAAA/C,EAAAghB,EAAAiK,EAAA9nB,EAAAlD,EAAAiO,EAAA5K,EAAAlD,EAAA6gB,EAAAiK,GAsHA,QAAAC,GAAAC,EAAAC,GACA,MAAA,YACA,GAAAjnB,GAAA4c,EAAAwF,kBACApiB,IACAA,EAAAgC,QAAA,SAAAjE,GACA,GAAAA,EAAA,CACA,GAAAskB,GAAAzmB,EAAAW,WAAAgF,WAAAxD,EACA,IAAAskB,GAAA,kBAAAA,GAAA/Y,iBAAA,CACA,GAAA4d,GAAA7E,EAAA/Y,iBAAAuT,EACA,IAAAqK,EAAA,CACA,GAAAC,GAAA3gB,KAAAnC,MAAA6iB,EAAA1d,MACA,QAAAwd,GACA,IAAA,KACAG,EAAAxH,GAAAsH,CACA,MAEA,KAAA,QACAE,EAAA1H,GAAAwH,CACA,MAEA,KAAA,OACAE,EAAAxH,GAAAsH,CACA,MAEA,KAAA,OACAE,EAAA1H,GAAAwH,EAGAC,EAAA1d,MAAAhD,KAAAC,UAAA0gB,SAhJAvK,EAAAwK,OAGAxrB,EAAA0lB,YAEA3iB,EAAA0oB,eACAC,OAAA,UAEA3oB,EAAA4oB,aACAC,OAAA,SAAAlqB,GACA,GAAAkqB,IAAA,EACAlK,EAAAhgB,EAAA,GAAA8hB,QAAA9B,QACAI,EAAApgB,EAAA,GAAA+hB,UAAAjW,OACA8T,EAAAthB,EAAAW,WAAA4O,OAAAmS,EAAA,yBAAAI,EAAA,KACAnR,EAAAxN,EAAAwgB,gBAAArC,EAAAzc,OACAf,EAAAX,EAAAse,sBAAA9Q,EASA,OANAib,GADA,cAAA9nB,GACAkd,EAAA6K,kBAeA9oB,EAAA2oB,OAAA,SAAA5lB,EAAApE,GAQA,QAAAkjB,GAAAphB,GACAA,EAAAQ,eAAA2M,EACAnN,EAAAqL,SAAA,CACA,IAAAiG,GAAA7U,EAAA0N,aACAmH,GAAAnR,KAAAsd,CACA,IAAAsK,GAAAN,EAAAa,iBAAA9K,EAAA4C,SAAAC,EAAA7C,EAAA4C,SAAAG,EACAjP,GAAAlH,MAAAhD,KAAAC,WACAgZ,EAAA0H,EAAA1H,EAAAkI,EAAA3N,EACA2F,EAAAwH,EAAAxH,EAAAgI,EAAAC,IAEAxoB,EAAAqK,YAAAiH,GACA5G,EAAAkB,iBAAA5L,GAlBA,GAuBAA,GAAAqN,EAvBA6Q,EAAA/hB,QAAAssB,QAAAvqB,EAAAwqB,WAAAnf,QAAA4D,KAAA+Q,QACAI,EAAAniB,QAAAssB,QAAAvqB,EAAAwqB,WAAAnf,QAAA4D,KAAAhN,KACA2d,EAAAthB,EAAAW,WAAA4O,OAAAmS,EAAA,yBAAAI,EAAA,KACAnR,EAAAxN,EAAAwgB,gBAAArC,EAAAzc,OACAf,EAAAX,EAAAse,sBAAA9Q,GACAob,EAAA/K,EAAAwE,OAAA2G,YAAAC,YAgBA3rB,EAAAT,EAAAW,WACA0rB,EAAArL,EAAA6K,eAEA,QAAA/nB,GACA,IAAA,OACAN,EAAAvD,EAAAgS,sBACAzO,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA/C,EAAAmS,SAAApP,GACA6oB,IACAxb,EAAApQ,EAAAkF,WAAA0mB,EAAA7c,KAAA,cACAqB,GACAA,EAAAoU,SAAAzhB,GAGA,MAEA,KAAA,QACAA,EAAAvD,EAAAiS,cACA1O,EAAAG,KAAA,QAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA0K,EAAAoe,yBAAA9oB,GACA/C,EAAAoS,UAAArP,EACA,MAEA,KAAA,YACAA,EAAAvD,EAAAmS,0BACA5O,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA6oB,GACAxb,EAAApQ,EAAAkF,WAAA0mB,EAAA7c,KAAA,cACAqB,GACAA,EAAAkC,cAAAvP,IAGApD,EAAAqL,SACArK,MAAA,gBACAC,QAAA,uCACAE,MAAA,KAGA,MAEA,KAAA,UACAiC,EAAAvD,EAAAkS,gBACA3O,EAAAG,KAAA,OAAAqhB,SAAA,IAAA5Y,KAAAE,SAAA,IACAsY,EAAAphB,GACA0K,EAAAoe,yBAAA9oB,GACA/C,EAAAqS,QAAAtP,GAKA,MADAwd,GAAAiC,cAAA,OACA,GA6CA3f,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,IACAC,YAAA,4BACAC,SAAA,WACA,GAAA7H,GAAA4c,EAAAwF,kBACApiB,IACAA,EAAAgC,QAAA,SAAAjE,GACA,GAAAA,EAAA,CACA,GAAAskB,GAAAzmB,EAAAW,WAAAgF,WAAAxD,EACA,IAAA,SAAAgB,EAAAse,sBAAAgF,EAAAziB,gBAAA,CACA,GAAAuoB,GAAA9F,EAAA/Y,iBAAAwd,EACA,IAAAqB,EAKA,CACA,GAAA7c,GAAAvM,EAAA2M,SAAAyc,EAAA3e,MACA2e,GAAA3e,OAAA8B,MANA6c,GAAAtsB,EAAA0N,cACA4e,EAAA5oB,KAAAunB,EACAqB,EAAA3e,OAAA,EACA6Y,EAAA5Y,YAAA0e,UAYAjpB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,KACAC,YAAA,yCACAC,SAAAkf,EAAA,KAAA,KAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,UACAC,YAAA,0CACAC,SAAAkf,EAAA,KAAA,MAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,QACAC,YAAA,4CACAC,SAAAkf,EAAA,QAAA,KAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,aACAC,YAAA,6CACAC,SAAAkf,EAAA,QAAA,MAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,OACAC,YAAA,2CACAC,SAAAkf,EAAA,OAAA,KAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,YACAC,YAAA,4CACAC,SAAAkf,EAAA,OAAA,MAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,OACAC,YAAA,2CACAC,SAAAkf,EAAA,OAAA,KAGA7nB,EAAAuI,OAAA9I,GAAA+I,KACAC,MAAA,YACAC,YAAA,4CACAC,SAAAkf,EAAA,OAAA,SC5OA,WAiBA,QAAAqB,GAAAC,EAAAvsB,GAUA,QAAAwsB,GAAAC,GACAA,EAAAvF,UAAAuF,EAAAvF,SAAAwF,eACAC,EAAAxF,gBAAAwF,EAAAzF,SAAAvG,KAAA,SAAAlQ,GACA,MAAAkc,GAAAlc,KAAA1M,UAAA0M,EAAA1M,WAKA,QAAAykB,KACAmE,EAAAC,UACAD,EAAAE,kBAAApc,KAAAkc,EAAAxF,kBAIA,QAAA2F,GAAA1F,GACAuF,EAAAC,UACAD,EAAAI,iBAAA3F,IAAAA,IAzBA,GAAAuF,GAAA9qB,IAEA8qB,GAAAzF,SAAA,KACAyF,EAAAxF,gBAAA,KACAwF,EAAAK,QAAAhtB,EAAA8f,SACA6M,EAAAH,WAAAA,EACAG,EAAAnE,cAAAA,EACAmE,EAAAG,cAAAA,EAvBArtB,QAAAC,OAAA,aACAuR,UAAA,cACAxO,YAAA,iCACAwqB,UACAxc,KAAA,IACAyW,SAAA,IACA0F,SAAA,IACAC,iBAAA,IACAE,gBAAA,KAEArqB,WAAA4pB,IAGAA,EAAAY,SAAA,KAAA,gBCdAztB,QAAAC,OAAA,aACAyC,QAAA,iBAAA,SAAAC,GACAA,EACAC,MAAA,aACAC,OAAA,MACAJ,IAAA,QACAK,OACAC,YACAC,YAAA,+BACAC,WAAA,gBACA2iB,aAAA,YCHA5lB,QAAAC,OAAA,aACAgD,WAAA,iBAAA,KAAA,YAAA,YAAA,UAAA,WAAA,eAAA,SAAA6pB,EAAAvpB,EAAAhD,EAAAF,EAAAC,EAAAG,GAwBA,QAAAitB,KACAlG,EAAA7F,MAAA,KACA6F,EAAAmG,WAAA,KACAnG,EAAAoG,mBAAA,IACA,IAAAC,GAAArG,EAAAsG,WAAA5M,KAAA,SAAA6M,GACA,MAAAA,GAAAC,QAEA,OAAAH,GACAI,EAAAJ,GACAvjB,KAAA,WACA,MAAA4jB,GAAA1G,EAAAmG,cAEArjB,KAAA,WACA,MAAA6jB,GAAA3G,EAAAmG,cAGA,KAIA,QAAAM,GAAAG,GACA,MAAA7tB,GAAAyQ,KAAAqd,sBAAAD,EAAApqB,MACAsG,KAAA,SAAAqX,GACA6F,EAAA7F,MAAAA,EAAAxc,IAAA,SAAA6L,EAAApL,GAOA,MANA,KAAAA,GACAoL,EAAAgd,QAAA,EACAxG,EAAAmG,WAAA3c,GAEAA,EAAAgd,QAAA,EAEAhd,MAKA,QAAAkd,GAAAld,GACA,MAAAA,GACAzQ,EAAAyQ,KAAAsd,yBAAAtd,EAAAod,UAAApd,EAAAhN,MACAsG,KAAA,SAAAqX,GACA6F,EAAAoG,mBAAAjM,IAGA,KAIA,QAAAwM,GAAAnd,GACA,MAAAA,GACA8b,EAAAyB,KACAhuB,EAAAiuB,GAAAC,YAAAzd,EAAAod,UAAApd,EAAAhN,KAAAgN,EAAA1M,SACA/D,EAAAiuB,GAAAE,WAAA1d,EAAAod,UAAApd,EAAAhN,KAAAgN,EAAA1M,WACAgG,KAAA,SAAAqkB,GACAnH,EAAAmG,WAAAiB,SAAAC,EAAAF,EAAA,IACAnH,EAAAmG,WAAAmB,QAAAD,EAAAF,EAAA,MAGA,KAIA,QAAAI,GAAAC,GACAxH,EAAA2F,UAAA,EACA3F,EAAAsG,WAAArnB,QAAA,SAAAsnB,GACAA,EAAA/pB,OAAAgrB,EAAAhrB,KACA+pB,EAAAC,QAAAD,EAAAC,OAEAD,EAAAC,QAAA,IAGAN,IACApjB,KAAA,WACAkd,EAAA2F,UAAA,IAIA,QAAA8B,GAAAC,GACA1H,EAAA2F,UAAA,EACA3F,EAAAmG,WAAA,KACAnG,EAAAoG,mBAAA,KACApG,EAAA7F,MAAAlb,QAAA,SAAAuK,GACAA,EAAAhN,OAAAkrB,EAAAlrB,KACAgN,EAAAgd,QAAAhd,EAAAgd,OAEAhd,EAAAgd,QAAA,IAGAxG,EAAAmG,WAAAnG,EAAA7F,MAAAT,KAAA,SAAAlQ,GACA,MAAAA,GAAAgd,SAEAmB,EAAA3H,EAAAmG,YACArjB,KAAA,WACAkd,EAAA2F,UAAA,IAIA,QAAA0B,GAAAlH,GAUA,MATAA,GAAAtR,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAtS,KAAAuS,EAAAvS,MACA,EAEAsS,EAAAtS,KAAAuS,EAAAvS,KACA,EAEA,IAEA2jB,EAAAxiB,IAAA,SAAAqpB,GAEA,MADAA,GAAAR,QAAA,EACAQ,IAIA,QAAAW,GAAAne,GACA,MAAAA,IACAwW,EAAAmG,WAAA3c,EACAkd,EAAAld,GACA1G,KAAA,WACA,MAAA6jB,GAAAnd,MAGA8b,EAAA9Y,UAIA,QAAAqZ,GAAA1F,GACA,GAAA7mB,GAAAT,EAAAW,WACAgQ,EAAAlQ,EAAA8O,OAAA,aAAA4X,EAAAmG,WAAAS,UAAA,0BAAA5G,EAAAmG,WAAA3pB,KAAA,YAAAwjB,EAAAmG,WAAArpB,QAAA,KAAAY,MAAA,EACA,IAAA8L,EACAzN,EAAA4F,MACAnG,YAAA,+BACA8G,KAAA,KACAkK,SACAhD,KAAA,WACA,MAAAwW,GAAAmG,YAEAyB,WAAA,WACA,MAAApe,GAAAgR,YAAA9c,OAEAyiB,IAAA,WACA,MAAAA,KAGA1kB,WAAA,6BACAosB,OAAA/kB,KAAA,WAEA0G,EAAAgR,YAAA9c,SACAoqB,EAAAte,EAAA2W,GACAlnB,EAAAoB,SACAJ,MAAA,eACAC,QAAA,6CAAAsP,EAAA9M,aAAAF,KAAA,IAAAgN,EAAAhN,KAAA,IAAAgN,EAAA1M,QAAA,oBAGA,CAEA,GAAAmd,GAAA3gB,EAAAyuB,iBAAA/H,EAAAmG,WAAAS,UACA3M,KAEAA,EAAAnhB,EAAAkvB,gBAAAC,SAAAjI,EAAAmG,WAAAS,WACAttB,EAAA4uB,YAAAjO,IAEAA,EAAAkO,mBAAAnI,EAAAmG,WAAA7sB,OACAkQ,EAAAlQ,EAAA8O,OAAA,aAAA4X,EAAAmG,WAAAS,UAAA,0BAAA5G,EAAAmG,WAAA3pB,KAAA,YAAAwjB,EAAAmG,WAAArpB,QAAA,KAAAY,MAAA,GACAoqB,EAAAte,EAAA2W,GACAlnB,EAAAoB,SACAJ,MAAA,eACAC,QAAA,WAAAsP,EAAA9M,aAAAF,KAAA,IAAAgN,EAAAhN,KAAA,IAAAgN,EAAA1M,QAAA,2CAKA,QAAAgrB,GAAAte,EAAA2W,GACAA,EAAAlhB,QAAA,SAAA+nB,GACAA,EAAAjtB,QAEAyP,EAAA9M,aAAA0rB,eAAApB,EAAA1tB,OAEAkQ,EAAA4e,eAAApB,EAAA1tB,UAtMA,GAAA0mB,GAAAplB,IACAolB,GAAAsG,cACAtG,EAAA7F,SACA6F,EAAAuH,SAAAA,EACAvH,EAAAyH,WAAAA,EACAzH,EAAAmG,WAAA,KACAnG,EAAA2H,kBAAAA,EACA3H,EAAA6F,cAAAA,EAGA9sB,EAAA6tB,UAAAG,MACAjkB,KAAA,SAAAwjB,GACAtG,EAAAsG,WAAAA,EAAA3oB,IAAA,SAAA4oB,GAMA,MALA,YAAAA,EAAA/pB,KACA+pB,EAAAC,QAAA,EAEAD,EAAAC,QAAA,EAEAD,MAGAzjB,KAAAojB,MC/BA,WAiBA,QAAAmC,KACA,GAAA3C,GAAA9qB,IAEApC,SAAA8vB,UAAA5C,EAAA6C,SAAA7C,EAAA6C,UACA/vB,QAAA8vB,UAAA5C,EAAA8C,cAAA9C,EAAA8C,YAAA,GAEA9C,EAAAtd,OAAA,SAAAkX,GACAoG,EAAAC,UACAD,EAAA+C,UAAAnJ,KAAAA,KAvBA9mB,QAAAC,OAAA,aACAuR,UAAA,SACAxO,YAAA,2BACAwqB,UACA3qB,OAAA,IACApB,MAAA,IACA6gB,YAAA,IACAyN,MAAA,IACAG,MAAA,IACAD,SAAA,IACA9C,SAAA,KAEAlqB,WAAA4sB,OCbA,WAMA,QAAAM,GAAAnf,EAAAoe,EAAAzH,GACA,GAAAH,GAAAplB,IAEAolB,GAAAxW,KAAAA,EACAwW,EAAAG,IAAAA,EACAH,EAAA4H,WAAAA,EAVApvB,QAAAC,OAAA,aACAgD,WAAA,qBAAAktB,GAEAA,EAAA1C,SAAA,OAAA,aAAA,UCJA,WAeA,QAAA2C,KAKA,QAAAC,KACAnD,EAAAC,UACAD,EAAAoD,cAAA3I,IAAAuF,EAAAvF,MANA,GAAAuF,GAAA9qB,IAEA8qB,GAAAmD,WAAAA,EAjBArwB,QAAAC,OAAA,aACAuR,UAAA,gBACAxO,YAAA,mCACAwqB,UACAjgB,IAAA,IACAoa,IAAA,IACAwF,SAAA,IACAmD,aAAA,KAEArtB,WAAAmtB,IAGAA,EAAA3C,cCbAztB,QAAAC,OAAA,aACAyC,QAAA,iBAAA,SAAAC,GACAA,EACAC,MAAA,aACAC,OAAA,MACAJ,IAAA,aACAK,OACAC,YACAC,YAAA,+BACAC,WAAA,uBCFAjD,QAAAC,OAAA,aACAgD,WAAA,iBAAA,aAAA,SAAA,YAAA,WAAA,SAAA,UAAA,WAAA,UAAA,UAAA,WAAA,UAAA,eAAA,SAAA9C,EAAAiD,EAAAG,EAAAF,EAAA8d,EAAAxd,EAAArD,EAAAD,EAAA8f,EAAAzc,EAAAsG,EAAAvJ,GAMA,QAAAO,KAMA,MALAuvB,GACAC,EAAA/mB,MAAA8mB,EAAAlwB,EAAAW,YAAA4I,QAAA2mB,GAEAA,EAAAE,EAAApK,MAAAhmB,EAAAW,YAEAuvB,EAGA,QAAAG,GAAAC,GACAA,GAAAA,EAAAvnB,gBACAunB,EAAAvnB,iBAEA7F,EACA4F,MACAnG,YAAA,0CACA8G,KAAA,KACAsD,MAAAhK,EACAH,YAAA,SAAA,oBAAA,SAAAG,EAAA2G,GACA3G,EAAA3B,MAAA,iBACA2B,EAAAoJ,KAAA,2DACApJ,EAAAxC,SAAA,UAAA6L,KAAAC,MAAA,IAAAD,KAAAE,UAAA,KAEAvJ,EAAAwH,KAAA,WACA,QAAAgC,GAAAC,EAAAC,GACA,MAAAD,GAAAtF,QAAAuF,EAAAD,EAAA/G,OAAAgH,EAAAhH,WAAA,EAEA,GAAAgH,GAAA,OACAF,GAAAxJ,EAAAxC,SAAAkM,KACA1J,EAAAxC,SAAAwC,EAAAxC,SAAAmM,OAAA,EAAA3J,EAAAxC,SAAAkF,OAAA,QAAAA,SAEApC,EAAAkH,KAAAxH,EAAAwtB,UAAAxtB,EAAAxC,SAAAkM,EAAA,aACA/C,EAAAW,aAIA2kB,OAAAwB,QAAA;AACAhL,GACAA,EAAAtb,UAKA,QAAAumB,GAAAH,GACAA,GAAAA,EAAAvnB,gBACAunB,EAAAvnB,iBAEAlH,OAAA,0BAAAsH,QApDA,GAAAqc,GAAA,KACA0K,EAAA,KACAC,EAAAlwB,EAAAqJ,qBACA8mB,EAAAnwB,EAAA6lB,mBAoDA/iB,GAAAwtB,UAAA,GACAxtB,EAAAglB,YAAA,EACAhlB,EAAA1B,QAAA,KACA0B,EAAA2tB,WACA3tB,EAAA7B,MAAA,KACA6B,EAAA4tB,gBACA5tB,EAAA6tB,SAAA,EACA7tB,EAAA8tB,QAAA,EACA9tB,EAAA+tB,YAAA,OACA/tB,EAAAguB,eACAC,KAAA,YACAC,MAAA,YACAC,cAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,WACAC,cAAA,WACAvuB,EAAAqG,SAEAmoB,aAAA,SAAAC,GACAA,EAAAC,UACAC,KAAAC,WAAAD,KAAAnB,UACA5vB,SAAAA,EACAixB,gBAAA,EACAC,eAAA,KAGAC,SAAAzB,EACA0B,SAAAtB,GAEAuB,SAAA,2BACAC,MACAC,eAAAP,WAAAM,KAAA1B,UAAAzQ,EAAAnf,EAAAoC,EAAA2tB,SACAyB,OAAA,IAIApvB,EAAAzC,QAAA,SAAAC,EAAAC,GACAD,EAAAgM,SAAA,SACAxJ,EAAAwtB,UAAA/vB,GAEAuC,EAAAwtB,UAAA,GACAzwB,EAAAQ,QAAAC,EAAAC,KAIAuC,EAAAqvB,aAAA,SAAAC,GACA7M,EAAA6M,EACAV,WAAAD,KAAAnB,UAAA4B,OAAA,EACA3M,EAAA8M,GAAA,eAAA,WACAtvB,EAAA,WACAD,EAAA+tB,YAAA,SACA/tB,EAAA7B,MAAA,KACA6B,EAAA4tB,oBAGAnL,EAAA8M,GAAA,YAAA,WACAtvB,EAAA,WACAD,EAAA+tB,YAAA,cAGAtL,EAAA8M,GAAA,WAAA,SAAAtD,GACAhsB,EAAA,WACAD,EAAA+tB,YAAA,OACA/tB,EAAAtC,MAAAuuB,EAAAvuB,MACAsC,EAAA7B,MAAA8tB,EAAA9tB,MACA6B,EAAA4tB,aAAA3B,EAAAuD,SACAxvB,EAAA6tB,SAAA,EACA5B,EAAA9tB,QACAgvB,EAAAlB,EAAAvuB,WAIA+kB,EAAAtb,QACAynB,WAAAa,OAAAhN,EAAA,SAAAA,IAGAziB,EAAA0vB,gBAAA,WACA,GAAAC,GAAA7wB,OAAA,oBACA6wB,GAAAJ,GAAA,SAAA,SAAAhC,GACA,GAAAqC,GAAA,GAAAC,WACAD,GAAAE,UAAA,WACA9vB,EAAAwtB,UAAA/K,EAAAsN,SAAAH,EAAA3D,SAEA2D,EAAAI,mBAAAzC,EAAA7R,OAAAuU,MAAA,MAEAN,EAAAO,QAAA,UAGAlwB,EAAAmwB,aAAA,WACAnwB,EAAA1B,QAAA,MAGA0B,EAAAowB,YAAA,WACA,MAAA,SAAApwB,EAAA+tB,cACA/tB,EAAAglB,aACAhlB,EAAA7B,OACA6B,EAAAwtB,UAAA/iB,OAAA/H,OAAA,GAGA1C,EAAAqwB,aAAA,WACAxxB,OAAAH,KAAAsB,EAAA2tB,SAAAtqB,QAAA,SAAAsa,SACA3d,GAAA2tB,QAAAhQ,KAEAiR,WAAAa,OAAAhN,EAAA,SAAAA,IAGAziB,EAAAswB,UAAA,SAAAC,GACAA,EAAA5S,KAAA4S,EAAA1lB,QACA7K,EAAA2tB,QAAA4C,EAAA5S,KAAA4S,EAAA1lB,MACA0lB,EAAA5S,IAAA,GACA4S,EAAA1lB,MAAA,GACA+jB,WAAAa,OAAAhN,EAAA,SAAAA,KAIAziB,EAAAiG,aAAA,SAAAzI,EAAAC,GACAuC,EAAAwtB,UAAA/vB,GAGAuC,EAAAwwB,aAAA,SAAA7S,SACA3d,GAAA2tB,QAAAhQ,GACAiR,WAAAa,OAAAhN,EAAA,SAAAA,IAGAziB,EAAAqG,MAAA,WACArG,EAAAglB,aACAhlB,EAAAglB,YAAA,EACA/kB,EAAA,WACAhD,EAAAsB,SAAAyB,EAAAtC,MAAA,SAAAO,GACA+B,EAAAglB,YAAA,EACA/mB,EACA+B,EAAA7B,MAAAF,GAEAwkB,EAAAsN,SAAA,IACA1yB,EAAAoB,SACAJ,MAAA,YACAC,QAAA,+BAQA0B,EAAAywB,WAAA,WACA,IACA,GAAA9oB,GAAAoV,EAAA2T,WAAAzzB,EAAAW,WACA6kB,GAAAsN,SAAApoB,GACA,MAAA1J,GACAC,QAAAiI,KAAA,2EACAjI,QAAAC,MAAAF,EAAAG,OACAf,EAAAc,OACAE,MAAA,mBACAC,QAAA,+CACAE,MAAA,QAKAwB,EAAAwH,KAAA8lB,EACAttB,EAAA+F,KAAA2nB,EAEAntB,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,+BACAC,SAAAlJ,EAAA+F,OAGAxF,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,SACAC,YAAA,mCACAC,SAAAlJ,EAAAwH,OAGAjH,EAAAuI,OAAA9I,GACA+I,KACAC,MAAA,cACAC,YAAA,oCACAC,SAAA,WACAlJ,EAAAowB,eACApwB,EAAAqG,WAKArG,EAAA4I,mBAAA,WACArI,EAAAsI,uBC7PAjM,QAAAC,OAAA,aACAgU,QAAA,OAAA,WAMA,QAAA9D,GAAAJ,GACA,MAAA,SAAAA,GAAAA,EAAA,GAAAA,KAAA,EAOA,QAAAW,GAAA5K,GACAA,EAAAA,GAAA,CAIA,KAAA,GAHA8O,GAAA,GACAmf,EAAA,iEAEAnuB,EAAA,EAAAA,EAAAE,EAAAF,IACAgP,GAAAmf,EAAAre,OAAAjJ,KAAAC,MAAAD,KAAAE,SAAAonB,EAAAjuB,QAGA,OAAA8O,GAQA,QAAAjE,GAAA7B,EAAAC,GAGA,MAFA,gBAAAD,KAAAA,EAAA,GACA,gBAAAC,KAAAA,EAAA,OACAtC,KAAAC,MAAAD,KAAAE,UAAAoC,EAAAD,EAAA,IAAAA,EAMA,QAAA8B,KACA,MAAAnE,MAAAE,SAAA,GAOA,QAAAqnB,GAAA9uB,GAEA,IAAA,GADAoR,GAAApR,EAAAM,SACAI,EAAA,EAAAA,EAAA0Q,EAAAxQ,SAAAF,EACA,IAAA,GAAAkN,GAAAlN,EAAA,EAAAkN,EAAAwD,EAAAxQ,SAAAgN,EACAwD,EAAA1Q,KAAA0Q,EAAAxD,IACAwD,EAAA9O,OAAAsL,IAAA,EAIA,OAAAwD,GAGA,OACAnG,SAAAA,EACAO,aAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAojB,YAAAA,KClEAh0B,QAAAC,OAAA,aACA4R,OAAA,aAAA,OAAA,SAAAoiB,GACA,MAAA,UAAArf,GACA,MAAAqf,GAAAC,YAAAtf,OCHA,WAaA,QAAAuf,GAAAF,GAWA,QAAAlH,GAAAC,GACAA,EAAAvc,QAAAwc,eACAC,EAAAkH,UAAA,EACAp0B,QAAAq0B,SAAAnH,EAAApnB,UACAonB,EAAApnB,OAAA,KAEAonB,EAAAoH,WAAApH,EAAAzc,QAAA3K,OAAAonB,EAAApnB,OACAonB,EAAAqH,WAAA,SACAC,KAIA,QAAAA,KACA,GAAAC,GAAAvH,EAAAzc,QAAA1D,OAAA,EAAAmgB,EAAApnB,OACAonB,GAAAoH,aACAG,GAAA,OAEAvH,EAAAkH,UAAA,EACAlH,EAAAqH,WAAA,YACArH,EAAAwH,YAAAT,EAAAC,YAAAO,GAGA,QAAA9sB,KACAulB,EAAAkH,UAAA,EACAlH,EAAAqH,WAAA,SACArH,EAAAwH,YAAAT,EAAAC,YAAAhH,EAAAzc,SAGA,QAAAkkB,KACAzH,EAAAkH,SACAI,IAEA7sB,IA1CA,GAAAulB,GAAA9qB,IAEA8qB,GAAAkH,UAAA,EACAlH,EAAAoH,YAAA,EACApH,EAAAqH,WAAA,YACArH,EAAAH,WAAAA,EACAG,EAAAyH,OAAAA,EACAzH,EAAAvlB,OAAAA,EACAulB,EAAAsH,OAAAA,EArBAx0B,QAAAC,OAAA,aACAuR,UAAA,YACAojB,SAAA,qJACApH,UACA/c,QAAA,IACA3K,OAAA,KAEA7C,WAAAkxB,IAGAA,EAAA1G,SAAA,WCXAztB,QAAAC,OAAA,aACAgU,QAAA,WAAA,WACA,OAQArJ,KAAA,SAAA/J,EAAAD,EAAAi0B,EAAA1wB,GACAvD,EAAAA,GAAA,SAAA6L,KAAAC,MAAA,IAAAD,KAAAE,UAAA,KACAkoB,EAAAA,GAAA,OACA1wB,EAAAA,GAAA,YAEA,IAAA2wB,GAAA,GAAAC,OAAAl0B,IAAAsD,KAAAA,IAEA6wB,EAAA7tB,SAAA8tB,cAAA,IACAD,GAAAE,SAAAt0B,EAAAi0B,EACAG,EAAAlR,UAAA,gBACAqR,UAAAC,UAAAC,cAAA9tB,QAAA,WAAA,EAGAytB,EAAAM,KAAA/U,IAAAgV,gBAAAT,IAIAE,EAAAM,KAAA/U,IAAAgV,gBAAAT,GACAE,EAAAQ,QAAA,SAAA/W,GACAtX,SAAAqF,KAAAipB,YAAAhX,EAAAK,SAEAkW,EAAAU,MAAAC,QAAA,OACAxuB,SAAAqF,KAAAopB,YAAAZ,IAGAA,EAAAxrB,YCnCAxJ,QAAAC,OAAA,aAAAiN,UAAA,UAAA,SAAA,SAAA2oB,GACA,OACA1oB,SAAA,IACAC,OAAA,EACAqB,KAAA,SAAArB,EAAAkf,EAAAwJ,GACA,GAAAC,GAAAF,EAAAC,EAAAE,OAEA1J,GAAAqG,GAAA,SAAA,SAAAxsB,GACA,GAAA6sB,GAAA,GAAAC,WAEAD,GAAAiD,OAAA,SAAAC,GACA9oB,EAAA+oB,OAAA,WACAJ,EAAA3oB,GACAgpB,MAAAF,EAAApX,OAAAuQ,OACAgH,MAAAlwB,EAAA2Y,OAAAuU,MAAA,GAAArvB,SAKA,KACAgvB,EAAAsD,WAAAnwB,EAAA2Y,OAAAuU,MAAA,IACA,MAAAkD,OAGAjK,EAAAqG,GAAA,QAAA,WACAvwB,KAAA6L,MAAA,YCzBAjO,QAAAC,OAAA,aACA4R,OAAA,iBAAA,OAAA,SAAArD,GACA,GAAAgoB,GAAA,GAAAvX,QAAA,mCAAA,KACAwX,EAAA,GAAAxX,QAAA,4BAAA,IAEA,OAAA,UAAArK,EAAAzP,GACA,GAAA,gBAAAyP,GAAA,CACA,gBAAAzP,IACAlD,OAAAH,KAAAqD,GAAAsB,QAAA,SAAAsa,GACAnM,EAAAA,EAAAmC,QAAA,GAAAkI,QAAA,IAAA8B,EAAA,IAAA,KAAA5b,EAAA4b,KAIA,IAAA2V,GAAAF,EAAAG,KAAA/hB,GACAgiB,EAAApoB,EAAAmC,cACA+lB,IAAAA,EAAA,IAAAA,EAAA,KACAE,EAAApoB,EAAAmC,aAAA0U,SAAAqR,EAAA,GAAA,IAAArR,SAAAqR,EAAA,GAAA,KAEA,IAAAG,GAAAJ,EAAAE,KAAA/hB,GACAkiB,EAAAtoB,EAAAkC,cAIA,OAHAmmB,IAAAA,EAAA,KACAC,EAAAtoB,EAAAkC,aAAA2U,SAAAwR,EAAA,GAAA,MAEAjiB,EAAAmC,QAAAyf,EAAAI,GACA7f,QAAA0f,EAAAK,GAEA,KAAA,IAAAtiB,OAAA,4DC1BAxU,QAAAC,OAAA,aACAgU,QAAA,gBAAA,WAAA,eAAA,UAAA,eAAA,aAAA,SAAA3T,EAAAghB,EAAAjU,EAAA0pB,EAAAxL,GACA,QAAAyL,GAAAnzB,EAAAM,EAAA8yB,GACA,mBAAAA,KACAA,EAAA,EAEA,IACAC,GADAC,EAAAtzB,EAAAG,KAAA,IAAAizB,CAEA,QAAA9yB,GACA,IAAA,OACA+yB,EAAArzB,EAAAK,aAAAyO,cAAAwkB,GACAD,IACAC,EAAAH,EAAAnzB,EAAAM,IAAA8yB,GAEA,MAEA,KAAA,QACAC,EAAArzB,EAAAK,aAAA0O,eAAAukB,GACAD,IACAC,EAAAH,EAAAnzB,EAAAM,IAAA8yB,GAEA,MAEA,KAAA,UACAC,EAAArzB,EAAAK,aAAA2O,aAAAskB,GACAD,IACAC,EAAAH,EAAAnzB,EAAAM,IAAA8yB,GAEA,MAEA,KAAA,YACAC,EAAArzB,EAAAK,aAAA6O,mBAAAokB,GACAD,IACAC,EAAAH,EAAAnzB,EAAAM,IAAA8yB,IAIA,MAAAE,GAGA,OAMAzV,WAAA,SAAAD,GAGA,QAAA2V,GAAAtQ,GACAA,EAAA5iB,eACAF,EAAA8iB,EAAA9iB,KAAA,IAAAA,EACAozB,EAAAtQ,EAAA5iB,eALA,GAAAF,GAAAyd,EAAAzd,IASA,OADAozB,GAAA3V,EAAAvd,cACAF,GAGAsL,OAAA,SAAA0B,GACA,GAAAyQ,GAAArf,KAAAsf,WAAA1Q,EAAA9M,aAMA,OALA,wBAAAud,EACAA,EAAA,GAEAA,GAAA,IAEAA,EAAAzQ,EAAAhN,KAAA,IAAAgN,EAAA1M,SAQAwd,sBAAA,SAAA9Q,GACA,GAAAA,EACA,OAAAA,EAAAqmB,iBACA,IAAA,uBACA,MAAA,MAEA,KAAA,wBACA,MAAA,OAEA,KAAA,4BACA,MAAA,WAEA,KAAA,0BACA,MAAA,UAGA,MAAA,OAQArT,gBAAA,SAAArC,GAEA,IAAA,GADA2V,GAAA3V,EAAA,GACA/b,EAAA,EAAAA,EAAA+b,EAAA7b,OAAAF,IACAyf,SAAAiS,EAAAhzB,QAAA,KAAA+gB,SAAA1D,EAAA/b,GAAAtB,QAAA,MACAgzB,EAAA3V,EAAA/b,GAGA,OAAA0xB,IAQAC,aAAA,SAAAvmB,GACA,GAAAwmB,KAWA,OATAxmB,IACAA,EAAAgR,YAAA9c,MAAAuB,QAAA,SAAA+nB,GACA,GAAAiJ,GAAAjJ,EAAAkJ,gBAAA,WACAD,IAAAD,EAAAjwB,QAAAkwB,EAAAxpB,UAAA,GACAupB,EAAA5yB,KAAA6yB,EAAAxpB,SAKAupB,GAQAhzB,QAAA,SAAAX,GACA,GAAAU,MACAozB,EAAA9zB,EAAAkK,iBAAAV,EAIA,OAHAsqB,IAAAA,EAAA1pB,MAAAnI,OAAA,IACAvB,EAAAozB,EAAA1pB,MAAAR,MAAA,MAEAlJ,GAQAqzB,kBAAA,QAAAA,GAAA1mB,GACA,GAAA,IAAAA,EAAA6Y,MAAAjgB,OACA,MAAA,EAGA,IAAA+tB,GAAA3mB,EAAA6Y,MAAA7kB,MAAAC,IAAAyyB,GACA7oB,EAAA,CAMA,OALA8oB,GAAApxB,QAAA,SAAAqxB,GACAA,EAAA/oB,IACAA,EAAA+oB,KAGA/oB,EAAA,GAMAoC,aAAA,SAAArQ,GACA,MAAAA,GAAA8O,OAAA,yBAAA1K,MAAA2M,OAAA,SAAAb,GACA,MAAA,yBAAAA,EAAAqmB,mBAOAhmB,cAAA,SAAAvQ,GACA,MAAAA,GAAA8O,OAAA,yBAAA1K,MAAA2M,OAAA,SAAAb,GACA,MAAA,0BAAAA,EAAAqmB,mBAOA5lB,kBAAA,SAAA3Q,GACA,MAAAA,GAAA8O,OAAA,yBAAA1K,MAAA2M,OAAA,SAAAb,GACA,MAAA,8BAAAA,EAAAqmB,mBAOA9lB,gBAAA,SAAAzQ,GACA,MAAAA,GAAA8O,OAAA,yBAAA1K,MAAA2M,OAAA,SAAAb,GACA,MAAA,4BAAAA,EAAAqmB,mBASAU,mBAAA,SAAAxyB,GACA,GAAAsyB,KAOA,OANAtyB,GAAAkB,QAAA,SAAAyK,GACA,GAAA4mB,GAAA11B,KAAAw1B,kBAAA1mB,EACA2mB,GAAAtwB,QAAAuwB,MAAA,GACAD,EAAAjzB,KAAAkzB,IAEA/S,KAAA3iB,OACAy1B,GAQAG,aAAA,SAAAC,GAGA,QAAAb,GAAAlmB,GACAA,EAAA5O,OACA41B,GAAA,EACAd,EAAAlmB,EAAA5O,OALA,GAAA41B,GAAA,CAUA,OAFAd,GAAAa,EAAA/zB,cAEAg0B,GAGAC,eAAA,SAAAr3B,GACA,MAAAsB,MAAAg2B,WAAAt3B,GACAsB,KAAAi2B,YAAAv3B,GACAsB,KAAAk2B,cAAAx3B,GACAsB,KAAAm2B,gBAAAz3B,IAGAs3B,WAAA,SAAAt3B,GACA,MAAAA,GAAAyE,MAAAL,MAAAY,QAGAuyB,YAAA,SAAAv3B,GACA,MAAAA,GAAA2E,OAAAP,MAAAY,QAGAwyB,cAAA,SAAAx3B,GACA,MAAAA,GAAA4E,KAAAR,MAAAY,QAGAyyB,gBAAA,SAAAz3B,GACA,GAAAm2B,GAAA,CAIA,OAHAn2B,GAAAyE,MAAAL,MAAAuB,QAAA,SAAAyK,GACA+lB,GAAA/lB,EAAAjM,WAAAC,MAAAY,SAEAmxB,GAOAuB,eAAA,SAAA30B,GACA,OAAAA,EAAAwnB,kBACA,IAAA,aACA,MAAAjpB,MAAAo2B,eAAA30B,EAAAK,aAEA,KAAA,QACA,MAAA9B,MAAAo2B,eAAA30B,EAAAvB,KAEA,KAAA,QACA,MAAAuB,GAAAvB,KACAF,KAAAo2B,eAAA30B,EAAAvB,MAEAuB,IAUAihB,aAAA,SAAA9T,EAAAE,GACA,GAAAF,GAAAE,EAAA,CACA,GAAAF,EAAApB,OAAA,0BAAA1K,MAAAY,OAAA,EAEA,OAAA,CAGA,IAAA2yB,KACAvnB,GAAA7M,eAAA2d,YAAA9c,MACAuB,QAAA,SAAA+nB,GACA,GAAA3c,GAAA2c,EAAAkJ,gBAAA,WACA7lB,IACA4mB,EAAA7zB,KAAAiN,EAAA5D,QAIA,KAAA,GAAArI,GAAA,EAAAA,EAAA6yB,EAAA3yB,OAAAF,IACA,GAAAoL,EAAApB,OAAA,mDAAA6oB,EAAA7yB,GAAA,KAAAV,MAAAY,OAAA,EACA,OAAA,EAKA,OAAA,GASAqlB,eAAA,SAAA5oB,EAAA2oB,GACA,GAAAwN,IAAA,CACA,IAAAn2B,EACA,IAAA,GAAAqD,GAAA,EAAAA,EAAArD,EAAAirB,SAAAtoB,MAAAY,OAAAF,IACA,GAAArD,EAAAirB,SAAAtoB,MAAAU,GAAA+yB,KAAAp2B,EAAAirB,SAAAtoB,MAAAU,GAAA+yB,IAAAn2B,SAAA0oB,EAAA1oB,OACA,OAAA,CAIA,OAAAk2B,IAQAvoB,SAAA,SAAAJ,GACA,MAAAA,MAAA,GAAA,SAAAA,GAAAA,EAAA,GAQAwD,QAAA,SAAA1P,GACA,GAAAA,EAAAQ,gBACAR,EAAAQ,eAAAsL,gBACA9L,EAAAQ,eAAAsL,eAAAipB,WAAA1zB,MAAAY,OAAA,EACA,GAAAjC,EAAA6L,YACA7L,EAAA6L,WAAAa,OAAArL,MAAAY,OAAA,EACA,IAAA,GAAAF,GAAA,EAAAA,EAAA/B,EAAA6L,WAAAa,OAAArL,MAAAY,OAAAF,IAAA,CACA,GAAAmK,GAAAlM,EAAA6L,WAAAa,OAAArL,MAAAU,GACAiK,EAAAhM,EAAAQ,eAAAsL,eAAAkpB,mBAAA9oB,EAAA/L,KACA,KAAA5B,KAAA02B,aAAA/oB,EAAAF,GACA,OAAA,MAIA,KAAA,GAAAiD,GAAA,EAAAA,EAAAjP,EAAAQ,eAAAsL,eAAAipB,WAAA1zB,MAAAY,OAAAgN,IACA,IAAA1Q,KAAA+N,SAAAtM,EAAAQ,eAAAsL,eAAAipB,WAAA1zB,MAAA4N,GAAA5C,UACA,OAAA,CAMA,QAAA,GAOA4oB,aAAA,SAAA/oB,EAAAF,GACA,SAAAzN,KAAA+N,SAAAN,EAAAK,WACA,mBAAAH,GAAA9B,OAAA,OAAA8B,EAAA9B,OAAA,IAAA8B,EAAA9B,MAAAnI,SAOA2jB,UAAA,SAAA3C,GACA,GAAAA,EAAA,CACA,GAAA,kCAAAA,EAAAuQ,iBACA,8BAAAvQ,EAAAuQ,iBACA,sBAAAvQ,EAAAuQ,iBACA,wBAAAvQ,EAAAuQ,gBACA,MAAAj1B,MAAAqnB,UAAA3C,EAAAziB,eACA,IAAA,8BAAAyiB,EAAAuQ,iBACA,yBAAAvQ,EAAAuQ,iBACA,0BAAAvQ,EAAAuQ,iBACA,4BAAAvQ,EAAAuQ,gBAAA,CACA,GAAA0B,GAAAjS,EAAA/Y,iBAAA,UACA,OAAA,QAAAgrB,EACA,GAAA,yBAAAjS,EAAAuQ,iBACAvQ,EAAA6R,IACA,MAAAv2B,MAAAqnB,UAAA3C,EAAA6R,IAAAt0B,gBAIA,OAAA,GAOA20B,qBAAA,SAAA1nB,GACA,GAAA/L,KAUA,OARA+L,GAAAkc,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAA,EAAA12B,MAAA02B,EAAA12B,KAAA2B,aAAA,CACA,GAAA+zB,GAAAgB,EAAA12B,KAAA2B,aACAgN,EAAA9O,KAAAo2B,eAAAP,EACA1yB,GAAA2L,EAAA1O,SAAA,IAEAuiB,KAAA3iB,OAEAH,OAAAH,KAAAyD,GAAAO,OAAA,GAGApB,WAAA,SAAAb,GACA,GAAAA,GAAAA,EAAAkK,iBAAA,CACA,GAAA4pB,GAAA9zB,EAAAkK,iBAAAgpB,EACA,IAAAY,EACA,MAAAv1B,MAAA+N,SAAAwnB,EAAA1pB,OAGA,OAAA,GAGAlJ,SAAA,SAAAlB,GACA,GAAAA,GAAAA,EAAAkK,iBAAA,CACA,GAAA4pB,GAAA9zB,EAAAkK,iBAAAwd,EACA,IAAAoM,EACA,MAAAv1B,MAAA+N,SAAAwnB,EAAA1pB,OAGA,OAAA,GAGAvH,YAAA,SAAA7C,EAAAY,GACA,GAAAZ,GAAAA,EAAAkK,iBAAA,CACA,GAAA4pB,GAAA9zB,EAAAkK,iBAAAgpB,EACAY,KACAA,EAAAr3B,EAAA0N,cACA2pB,EAAA3zB,KAAA+yB,EACAlzB,EAAAqK,YAAAypB,IAEAA,EAAA1pB,MAAAxJ,IAIAsB,UAAA,SAAAlC,EAAAiB,GACA,GAAAjB,EAAA,CACA,GAAA8zB,GAAA9zB,EAAAkK,iBAAAwd,EACAoM,KACAA,EAAAr3B,EAAA0N,cACA2pB,EAAA3zB,KAAAunB,EACA1nB,EAAAqK,YAAAypB,IAEAA,EAAA1pB,MAAAnJ,IAIAo0B,kBAAA,SAAAr1B,EAAAs1B,EAAAlR,GACA,GAAApkB,EAAAQ,eAAAsL,eAAA,CACA,GAAAE,GAAAhM,EAAAQ,eAAAsL,eAAAkpB,mBAAAM,EACA,OAAAtpB,IAAAA,EAAAqY,oBAAAD,EAEA,OAAA,GAGApc,aAAA,SAAA/K,GACA,MAAAA,GAAA8O,OAAA,oBAAAmnB,EAAA,gBAAA7xB,MAAAC,IAAA,SAAAwyB,GACA,MAAAA,GAAAzzB,gBASAk1B,UAAA,SAAAC,GAEAA,EAAAA,EAAA5rB,MAAA,IACA,IAAAmS,EACA,KAAAyZ,EAAAvzB,SACA8Z,EAAAyZ,EAAAC,OAGAD,EAAAA,EAAA,GAAA5rB,MAAA,IACA,IAAA8rB,GAAAF,EAAAC,KAaA,OAXAD,GADA,IAAAA,EAAAvzB,OACA,iBAAAyzB,EAEA,YAAAF,EAAAlrB,KAAA,eAAA,YAAAorB,EAGA3Z,IACAyZ,GAAA,YAAAzZ,GAGAyZ,GAAA,KAUAG,aAAA,SAAAH,GACAA,EAAAA,EAAA5rB,MAAA,IACA,IAAA8rB,GAAAF,EAAAC,KACA,OAAA,KAAAD,EAAAvzB,OACA,YAAAyzB,EAAA,IAEA,YAAAF,EAAAlrB,KAAA,eAAA,cAAAorB,EAAA,KAQAlT,MAAA,SAAAxiB,GAGA,QAAA41B,GAAApT,GACAA,EAAAnX,QAAArL,EAAAqL,OACA,IAAAwqB,GAAA71B,EAAAkK,iBAAAuT,EACA,IAAAoY,EAAA,CACA,GAAAC,GAAA1uB,KAAAnC,MAAA4wB,EAAAzrB,OACAkH,EAAA7U,EAAA0N,aACAmH,GAAAnR,KAAAsd,EACAnM,EAAAlH,MAAAhD,KAAAC,WACAgZ,EAAAyV,EAAAzV,EAAA,GACAE,EAAAuV,EAAAvV,EAAA,KAEAiC,EAAAnY,YAAAiH,GAGAkR,EAAA3W,WAAAkqB,EAAAC,gBAAAh2B,EAAA6L,YAhBA,GAmBA2W,GAnBAuT,EAAAx3B,IAoBA,QAAAA,KAAA0f,sBAAAje,EAAAQ,iBACA,IAAA,OACAgiB,EAAA/lB,EAAAgS,sBACAmnB,EAAApT,GACAA,EAAAhiB,eAAAR,EAAAK,aAAA8B,WAAAnC,EAAAQ,eAAA7B,QACA6jB,EAAAriB,KAAAgzB,EAAAnzB,EAAA,QACAA,EAAAoB,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA5R,EAAAjT,cAAAwmB,EAAAvT,MAAA4R,MAEAp0B,EAAAkmB,MAAA7kB,MAAAuB,QAAA,SAAAqzB,GACA,GAAAC,GAAAH,EAAAvT,MAAAyT,EACAj2B,GAAAK,aAAA+O,SAAA8mB,GACA1T,EAAAf,SAAAyU,IAEA,MAEA,KAAA,QACA1T,EAAA/lB,EAAAiS,cACAknB,EAAApT,GACAA,EAAAhiB,eAAAR,EAAAK,aAAA8B,WAAAnC,EAAAQ,eAAA7B,QACA6jB,EAAAriB,KAAAgzB,EAAAnzB,EAAA,QACA,MAEA,KAAA,UACAwiB,EAAA/lB,EAAAkS,gBACAinB,EAAApT,GACAA,EAAAhiB,eAAAR,EAAAK,aAAA8B,WAAAnC,EAAAQ,eAAA7B,QACA6jB,EAAAriB,KAAAgzB,EAAAnzB,EAAA,UACA,MAEA,KAAA,YACAwiB,EAAA/lB,EAAAmS,0BACAgnB,EAAApT,GACAA,EAAAhiB,eAAAR,EAAAK,aAAAA,aAAA8B,WAAAnC,EAAAQ,eAAA7B,QACA6jB,EAAAriB,KAAAgzB,EAAAnzB,EAAA,aAIA,MAAAwiB,IAMAwT,gBAAA,SAAA9R,GACA,GAAA1B,GAAA/lB,EAAA05B,mBAAAC,qBAAA,MASA,OARAlS,IACAA,EAAAxX,OAAArL,MAAAuB,QAAA,SAAAsJ,GACA,GAAA5F,GAAA7J,EAAA0N,aACA7D,GAAAnG,KAAA+L,EAAA/L,KACAmG,EAAA8D,MAAA8B,EAAA9B,MACAoY,EAAAe,UAAAjd,KAGAkc,OC5lBArmB,QAAAC,OAAA,aACA4R,OAAA,gBAAA,eAAA,UAAA,SAAArO,EAAAnD,GACA,MAAA,UAAAwF,EAAA1B,EAAA+1B,GACA,MAAA,cAAA/1B,EACA0B,EAAAgM,OAAA,SAAA9N,GACA,GAAAA,GAAAA,EAAAiN,MAAAkpB,EAAA,CACA,GAAApV,GAAAthB,EAAAshB,aAAA/gB,EAAAiN,KAAA3Q,EAAAW,WAAA2R,cAAAunB,GACA,OAAApV,GAEA,OAAA,IAIAjf,MCbA7F,QAAAC,OAAA,aACAiN,UAAA,OAAA,WACA,OACAC,SAAA,KACAC,OAAAqD,QAAA,KACAhC,KAAA,SAAArB,EAAAkf,GAGA6N,KAAAC,eAAA9N,EAAA,QCRAtsB,QAAAC,OAAA,aACAiN,UAAA,SAAA,WAAA,SAAA7J,GACA,OACA8J,SAAA,IACAsB,KAAA,SAAArB,EAAA0Z,EAAAgP,GACA1oB,EAAA0G,OAAAgiB,EAAAvrB,MAAA,SAAA0D,GACA,GAAArM,GAAAy4B,CACAr6B,SAAAq0B,SAAApmB,IACArM,EAAAqM,EACAosB,GAAA,IAEAz4B,EAAA,EACAy4B,EAAAC,QAAArsB,IAEAosB,GACAh3B,EAAA,WACAyjB,EAAA,GAAAvc,QACA,kBAAAuc,GAAA,GAAAlX,QACAkX,EAAA,GAAAlX,UAEAhO,UCpBA5B,QAAAC,OAAA,aACAiN,UAAA,cAAA,SAAA,SAAA2oB,GACA,GAAA0E,GAAA,aAEA,QACAptB,SAAA,IACAC,OAAA,EACAqB,KAAA,SAAArB,EAAAkf,EAAAwJ,GAkBA,QAAA0E,GAAA7J,GACA,GAAA8J,GAAA9J,EAAA+J,cAAAD,YACA,IAAAA,GACAA,EAAApH,MAAAvtB,OAAA,CACA,GAAA60B,GAAAF,EAAApH,MAAA,GACAL,EAAA,GAAAC,WAEAD,GAAAE,UAAA,SAAAvC,GACAvjB,EAAA+oB,OAAA,WACAJ,EAAA3oB,GACAkZ,OAAAqK,EACAyF,MAAAzF,EAAA7R,OAAAuQ,OACAgH,MAAAsE,EAAA32B,UAKAgvB,EAAAsD,WAAAqE,GAIAhK,EAAAtH,kBACAsH,EAAAvnB,iBACAwxB,EAAAC,OAGA,QAAAC,GAAAnK,GACArM,aAAAyW,GACApK,EAAAtH,kBACAsH,EAAAvnB,iBACAwxB,EAAAP,OAGA,QAAAW,GAAArK,GACAoK,EAAArW,WAAA,WACAiM,EAAAtH,kBACAuR,EAAAC,QACA,KAtDA,GAAAE,GACAhF,EAAAF,EAAAC,EAAApJ,YACA5F,EAAA5kB,OAAAoqB,EAAA,IACAsO,EAAA14B,OAAA,eAAAq4B,EAAA,sFAEAzT,GAAAjY,OAAA+rB,GAEA9T,EAAA6L,GAAA,YAAAqI,GACAlU,EAAA6L,GAAA,WAAAmI,GACAhU,EAAA6L,GAAA,OAAA6H,GAEAptB,EAAAJ,IAAA,WAAA,WACA8Z,EAAAmU,IAAA,YAAAD,GACAlU,EAAAmU,IAAA,WAAAH,GACAhU,EAAAmU,IAAA,OAAAT,UCtBAx6B,QAAAC,OAAA,aACA4R,OAAA,WAAA,WACA,MAAA,UAAA+C,GACA,GAAA,gBAAAA,GACA,MAAAA,GAAAmC,QAAA,kBAAA,SAAAmkB,EAAAC,GACA,MAAAA,GAAAA,EAAArkB,cAAA,IAGA,MAAA,IAAAtC,OAAA,kDCRAxU,QAAAC,OAAA,aACAiN,UAAA,YAAA,WACA,OACAjK,YAAA,SAAA,WAAA,SAAA,SAAAG,EAAAg4B,EAAAC,GACAD,EAAArW,KAAA,SAAA,SAAA4L,GACA,GAAAqC,GAAA,GAAAC,WACAD,GAAAiD,OAAA,SAAAqF,GACAl4B,EAAAm4B,SAAAD,EAAAxc,OAAAuQ,OACAjsB,EAAAo4B,MAAAH,EAAAI,aAEAzI,EAAAI,mBAAAzC,EAAA7R,OAAAuU,MAAA,YCVArzB,QAAAC,OAAA,aACAy7B,QAAA,UAAA,WACA,OACAt6B,IAAA,SAAA2f,EAAA4a,GACA,GAAA5rB,GAAA+Q,aAAA8a,QAAA7a,EACA,OAAAhR,GACA9E,KAAAnC,MAAAiH,GAAAA,IAEA4rB,GAGAvxB,IAAA,SAAA2W,EAAAhR,GACA+Q,aAAA+a,QAAA9a,EAAA9V,KAAAC,WACA6E,IAAAA,MAGA1N,OAAA,SAAA0e,GACAD,aAAAgb,WAAA/a,IAEA5Y,MAAA,WACA2Y,aAAA3Y,SAEArG,KAAA,WAEA,IAAA,GADAA,MACA8D,EAAA,EAAAm2B,EAAAjb,aAAAhb,OAAAF,EAAAm2B,IAAAn2B,EACA9D,EAAA8C,KAAAkc,aAAAC,IAAAnb,GAEA,OAAA9D,OC3BA9B,QAAAC,OAAA,aAAAy7B,QAAA,OAAA,WAAA,SAAAp7B,GACA,QAAA07B,GAAAx5B,GAQA,MAPAA,GAGA,MAAAA,EAAAuK,OAAA,EAAA,KACAvK,EAAA,IAAAA,GAHAA,EAAA,IAMAA,EAGA,OAUAxB,SAAA,SAAAsB,EAAAC,EAAAC,EAAA8J,GACA,GAAA2vB,IAAA,EACAC,GAAA,EACAtR,EAAA,KACArG,EAAAG,WAAA,WACAuX,GAAA,EACAC,GAAA,CACA,KACAtR,EAAAlgB,QACA,MAAArJ,IACA,GAAAA,GAAA,GAAAmT,OAAA,wBAAAlS,EAAA,IAAAC,EAAAC,EAAA,aACA8J,GAAAjL,EAAA,KAAA,QAAAiB,EAAA,IAAAC,EAAAC,IACA,IACAA,GAAAw5B,EAAAx5B,EAEA,KACAooB,EAAA,GAAAlE,WAAA,QAAApkB,EAAA,IAAAC,EAAAC,GAEAooB,EAAAuR,OAAA,WACA7X,aAAAC,GACAqG,EAAAwR,KAAA,SAGAxR,EAAAyR,UAAA,SAAAC,GACA,IACA,GAAAr7B,GAAAX,EAAAY,mBACAJ,EAAAG,EAAAE,oBAAAm7B,EAAAz7B,MAAAO,IAAA,EACA66B,IAAA,EACArR,EAAAlgB,QACAga,WAAA,WAEApY,EAAA,KAAAxL,EAAA,QAAAwB,EAAA,IAAAC,EAAAC,KAEA,MAAAnB,GACAijB,aAAAC,GACAjjB,QAAAiI,KAAA,6DACAjI,QAAAiI,KAAA,oCAAA+yB,EAAAz7B,MACAo7B,GAAA,EACArR,EAAAlgB,QACA4B,EAAA,GAAAkI,OAAA,2CAAAlS,EAAA,IAAAC,EAAAC,GAAA,KAAA,QAAAF,EAAA,IAAAC,EAAAC,KAIAooB,EAAA2R,QAAA,SAAAl7B,GACA66B,GAAA,EACA76B,EAAA,GAAAmT,OAAA,6BAAAlS,EAAA,IAAAC,EAAAC,GACA8hB,aAAAC,GACAjY,EAAAjL,EAAA,KAAA,QAAAiB,EAAA,IAAAC,EAAAC,IAGAooB,EAAA4R,QAAA,WACA,IAAAP,IAAAC,EAAA,CACA5X,aAAAC,EACA,IAAAljB,GAAA,GAAAmT,OAAA,wBAAAlS,EAAA,IAAAC,EAAAC,EAAA,UACA8J,GAAAjL,EAAA,KAAA,QAAAiB,EAAA,IAAAC,EAAAC,KAGA,MAAAnB,GACAijB,aAAAC,GACAjY,EAAA,GAAAkI,OAAA,2CAAAlS,EAAA,IAAAC,EAAAC,GAAA,KAAA,QAAAF,EAAA,IAAAC,EAAAC,GAGA,MAAAooB,IAYAC,UAAA,SAAA/pB,EAAAwB,EAAAC,EAAAC,EAAA8J,GACA,GAAAvB,GACA0xB,GAAA,EACAP,GAAA,EACAtR,EAAA,KACArG,EAAAG,WAAA,WACA+X,GAAA,EACAP,GAAA,CACA,KACAtR,EAAAlgB,QACA,MAAArJ,IACA,GAAAA,GAAA,GAAAmT,OAAA,wBAAAlS,EAAA,IAAAC,EAAAC,EAAA,aACA8J,GAAAjL,EAAA,KAAA,QAAAiB,EAAA,IAAAC,EAAAC,IACA,IAEA,KACA,GAAAqI,GAAAvK,EAAAwK,sBACAC,GAAAF,EAAAG,UAAAlK,GACA,MAAAO,GACA,GAAAE,GAAA,GAAAiT,OAAA,oCAEA,OADAlI,GAAA/K,GACA,KAgCA,MA7BAwJ,KACAvI,EAAAw5B,EAAAx5B,GAEAooB,EAAA,GAAAlE,WAAA,QAAApkB,EAAA,IAAAC,EAAAC,GAEAooB,EAAAuR,OAAA,WACA7X,aAAAC,GACAqG,EAAAwR,KAAA,QAAArxB,GACA0xB,GAAA,EACA7R,EAAAlgB,QACA4B,KAGAse,EAAA2R,QAAA,SAAAl7B,GACA66B,GAAA,EACA76B,EAAA,GAAAmT,OAAA,6BAAAlS,EAAA,IAAAC,EAAAC,GACA8hB,aAAAC,GACAjY,EAAAjL,IAGAupB,EAAA4R,QAAA,WACA,IAAAC,IAAAP,EAAA,CACA5X,aAAAC,EACA,IAAAljB,GAAA,GAAAmT,OAAA,wBAAAlS,EAAA,IAAAC,EAAAC,EAAA,UACA8J,GAAAjL,EAAA,KAAA,QAAAiB,EAAA,IAAAC,EAAAC,MAKAooB,OCrJA5qB,QAAAC,OAAA,aACAgU,QAAA,WAAA,eAAA,cAAA,aAAA,cAAA,iBAAA,eAAA,SAAAzQ,EAAAk5B,EAAAC,EAAAC,EAAAC,EAAAC,GAMA,QAAAC,GAAA7rB,GACA,GAAA4mB,GAAA4E,CAUA,OARAxrB,GAAAjM,WAAAC,MAAAuB,QAAA,SAAAwxB,GACAH,GAAAkF,EAAA/E,GAAA,KAGA/mB,EAAA6Y,MAAA7kB,MAAAuB,QAAA,SAAAoB,GACAiwB,GAAAiF,EAAAl1B,GAAA,KAGAiwB,EAGA,QAAAkF,GAAA/E,GACA,MAAA,KAAAA,EAAA5zB,eAAA44B,SAAAnzB,QAAA,IAAAmuB,EAAA5zB,eAAA64B,SAAApzB,OACA8yB,EACA3E,EAAA5zB,eAAA44B,SAAAnzB,OAAAmuB,EAAA5zB,eAAA64B,SAAApzB,OACA8yB,EAAA3E,EAAA5zB,eAAA44B,SAAAnzB,OAEA8yB,EAAA3E,EAAA5zB,eAAA64B,SAAApzB,OAQA,QAAAqzB,GAAArW,GACA,MAAAA,GAAAjkB,SAAA0gB,SAAA,YACA4Z,EAAArW,EAAAjkB,UAEAikB,EAAAjX,KAAA,aAIA,QAAAutB,GAAAtW,GAGA,QAAAuW,GAAAvW,GACA,GAAAA,EAAAjkB,UAAAikB,EAAAjkB,SAAA0gB,SAAA,YAAA,CACA,GAAA+Z,GAAAxW,EAAAjkB,SAAA06B,SACAC,GAAAtZ,GAAAoZ,EAAApZ,EACAsZ,EAAApZ,GAAAkZ,EAAAlZ,EACAiZ,EAAAvW,EAAAjkB,WAPA,GAAA26B,GAAA1W,EAAAyW,SAWA,OADAF,GAAAvW,GACA0W,EAUA,QAAAC,GAAA3W,EAAA5C,EAAAE,EAAAgI,GACA,GAAAoR,GAAAJ,EAAAtW,EAKA,OAJA0W,GAAAtZ,EAAAsZ,EAAAtZ,EAAAkI,EAAA9V,EAAA8V,EAAA3N,EACA+e,EAAApZ,EAAAoZ,EAAApZ,EAAAgI,EAAA9V,EAAA8V,EAAAC,EACAmR,EAAAE,OAAAtR,EAAA9V,EACAknB,EAAA1F,QAAA1L,EAAA9V,EACA4N,GAAAsZ,EAAAtZ,GACAA,GAAAsZ,EAAAtZ,EAAAsZ,EAAAE,OACAtZ,GAAAoZ,EAAApZ,GACAA,GAAAoZ,EAAApZ,EAAAoZ,EAAA1F,OAQA,QAAA3L,GAAAjI,EAAAE,GACA,GAAArO,GAAA7T,OAAA,cAAA6T,QACA,QAAAmO,EAAAA,EAAAnO,EAAA2N,KAAAU,EAAAA,EAAArO,EAAAoN,KAGA,QAAAwa,GAAAC,EAAAC,EAAAH,EAAA5F,GACA,QAAAgG,KACA,MAAAF,GAAA1Z,GAAA2Z,EAAA3Z,EAAAwZ,EAAA,GAAAE,EAAA1Z,GAAA2Z,EAAA3Z,EAAAwZ,EAAA,EAAA,EACA,SAGAE,EAAA1Z,EAAA2Z,EAAA3Z,EAAAwZ,EAAA,EAAA,EACA,QAGA,OAIA,QAAAK,KACA,MAAAH,GAAAxZ,GAAAyZ,EAAAzZ,EAAA0T,EAAA,GAAA8F,EAAAxZ,GAAAyZ,EAAAzZ,EAAA0T,EAAA,EAAA,EACA,SAEA8F,EAAAxZ,EAAAyZ,EAAAzZ,EAAA0T,EAAA,EAAA,EACA,SAGA,MAIA,GAAAkG,GAAAD,IAAA,IAAAD,GACA,QAAAE,GACA,QACA,IAAA,WACA,OACA9Z,EAAA2Z,EAAA3Z,EAAA,EACAE,EAAAyZ,EAAAzZ,EAAA,EAGA,KAAA,aACA,OACAF,EAAA2Z,EAAA3Z,EAAAwZ,EAAA,EACAtZ,EAAAyZ,EAAAzZ,EAGA,KAAA,YACA,OACAF,EAAA2Z,EAAA3Z,EAAAwZ,EAAA,EACAtZ,EAAAyZ,EAAAzZ,EAAA,EAGA,KAAA,cACA,OACAF,EAAA2Z,EAAA3Z,EACAE,EAAAyZ,EAAAzZ,EAAA0T,EAAA,EAGA,KAAA,eACA,OACA5T,EAAA2Z,EAAA3Z,EAAAwZ,EACAtZ,EAAAyZ,EAAAzZ,EAAA0T,EAAA,EAGA,KAAA,cACA,OACA5T,EAAA2Z,EAAA3Z,EAAA,EACAE,EAAAyZ,EAAAzZ,EAAA0T,EAAA,EAGA,KAAA,gBACA,OACA5T,EAAA2Z,EAAA3Z,EAAAwZ,EAAA,EACAtZ,EAAAyZ,EAAAzZ,EAAA0T,EAGA,KAAA,eACA,OACA5T,EAAA2Z,EAAA3Z,EAAAwZ,EAAA,EACAtZ,EAAAyZ,EAAAzZ,EAAA0T,EAAA,IAKA,QAAAmG,GAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAA3R,YAAAC,YACAvB,GACAhH,EAAAka,EAAA3f,EACA2F,EAAAga,EAAA/R,GAEAgS,EAAAjB,EAAAc,EAAAr7B,UACAy7B,EAAAJ,EAAA1R,YAAAC,YACAlqB,GACA2hB,EAAAma,EAAAna,EAAAoa,EAAA7f,EAAA,EACA2F,EAAAia,EAAAja,EAAAka,EAAAjS,EAAAuQ,EAAA,GAEA2B,GACAra,EAAA,EACAE,EAAA,EAWA,OARA7hB,GAAA2hB,EAAAgH,EAAAhH,EACAqa,EAAAra,EAAAgH,EAAAhH,GAAA3hB,EAAA2hB,EAAAgH,EAAAhH,GAAA,EAEAqa,EAAAra,EAAA3hB,EAAA2hB,GAAAgH,EAAAhH,EAAA3hB,EAAA2hB,GAAA,EAGAqa,EAAAna,GAAA7hB,EAAA6hB,GAAA8G,EAAA9G,EAAA7hB,EAAA6hB,EAAA8G,EAAA9G,GAAA,IAGA8G,KAAAA,EACA3oB,KAAAA,EACAg8B,OAAAA,GAQA,QAAAC,GAAA19B,GACA,GAAA+kB,GAAA1e,SAAAsc,eAAA,SACA,IAAAoC,EAAA,CACA,GACA4Y,GADAC,EAAA7Y,EAAA8Y,qBAAA,QAAA,EAEA,KAAAx3B,SAAAsc,eAAA,cAAA,CACAgb,EAAAt3B,SAAAy3B,gBAAA,6BAAA,YACAH,EAAA/f,GAAA,YACA,IAAAmgB,GAAA13B,SAAAy3B,gBAAA,6BAAA,SACAC,GAAAC,aAAA,KAAA,KACAD,EAAAC,aAAA,KAAA,KACAD,EAAAC,aAAA,IAAAhC,EAAA,EAAA,IACA2B,EAAA7I,YAAAiJ,GACAH,EAAA9I,YAAA6I,GAGA,IAAAt3B,SAAAsc,eAAA,aAAA,CACAgb,EAAAt3B,SAAAy3B,gBAAA,6BAAA,YACAH,EAAA/f,GAAA,WACA,IAAAqgB,GAAA53B,SAAAy3B,gBAAA,6BAAA,SACAG,GAAAD,aAAA,KAAA,KACAC,EAAAD,aAAA,KAAA,KACAC,EAAAD,aAAA,IAAAjC,EAAA,EAAA,IACA4B,EAAA7I,YAAAmJ,GACAL,EAAA9I,YAAA6I,GAGA,GAAAO,GAAAx7B,EAAAu0B,mBAAAj3B,EAAAyE,MAAAL,MACA85B,GAAAv4B,QAAA,SAAAqxB,GACA,IAAA3wB,SAAAsc,eAAA,aAAAqU,GAAA,CACA,GAAAmH,GAAA93B,SAAAy3B,gBAAA,6BAAA,WACAK,GAAAvgB,GAAA,aAAAoZ,CACA,IAAAoH,GAAA/3B,SAAAy3B,gBAAA,6BAAA,OACAM,GAAAJ,aAAA,QAAAnC,EAAA,GAAA7E,EAAA,EAAA,IACAoH,EAAAJ,aAAA,SAAA,QACAI,EAAAJ,aAAA,IAAA,KACAI,EAAAJ,aAAA,IAAA,KACAG,EAAArJ,YAAAsJ,GACAR,EAAA9I,YAAAqJ,GAGA,IAAA93B,SAAAsc,eAAA,aAAAqU,GAAA,CACA,GAAAqH,GAAAh4B,SAAAy3B,gBAAA,6BAAA,WACAO,GAAAzgB,GAAA,aAAAoZ,CACA,IAAAsH,GAAAj4B,SAAAy3B,gBAAA,6BAAA,OACAQ,GAAAN,aAAA,QAAAnC,EAAA,GAAA7E,EAAA,GAAA,IACAsH,EAAAN,aAAA,SAAA,QACAM,EAAAN,aAAA,IAAA,MACAM,EAAAN,aAAA,IAAA,KACAK,EAAAvJ,YAAAwJ,GACAV,EAAA9I,YAAAuJ,OAMA,OACA/B,gBAAAA,EACAL,gBAAAA,EACAC,gBAAAA,EACAG,mBAAAA,EACAM,kBAAAA,EACAE,sBAAAA,EACAM,qBAAAA,EACAO,cAAAA,EACArS,iBAAAA,MC3QAnsB,QAAAC,OAAA,aACAgU,QAAA,MAAA,OAAA,UAAA,gBAAA,oBAAA,eAAA,oBAAA,kBAAA,kBAAA,eAAA,WAAA,eAAA,eAAA,aAAA,cAAA,iBAAA,eAAA,iBAAA,SAAAzF,EAAA8c,EAAA+T,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAl8B,EAAAlD,EAAAG,EAAA6gB,EAAAqb,EAAAD,EAAAiD,EAAA7C,EAAAD,GAEA,GAAAxb,IAIAvgB,MAAA,KAKA8+B,mBAAA,KAKAC,oBAAA,KAKA5b,UACAC,EAAA,EACAE,EAAA,GAMAyH,KAAA,WACA,GAAAhG,GAAA,GAAAia,MAAA,aACAja,GAAAka,KACAC,eAAA,GAAA,GACAC,UAAA,KAEA,IAAAC,GAAA99B,KAAAyjB,OAAAA,EAAAjW,OAAA,gBAAAiW,EAAAnH,GACAwhB,GAAArb,SAAA,OACAgB,EAAAsa,UAAA,SAAAh6B,GACA,IAAAA,EAAAi6B,OAEAva,EAAAje,UAAA,aACAnB,QAAA,SAAAqgB,GACAA,EAAArC,YAAA,WACA,IAAAjiB,GAAAskB,EAAAjkB,SAAAgN,KAAA,YACA,IAAArN,GAAAA,EAAAsD,OAAA,EAAA,CACA,GAAAjC,GAAAwd,EAAAvgB,MAAAkF,WAAAxD,EACAgB,GAAAkD,YAAA7C,GAAA,QAKAynB,EAAAkT,cAAAp8B,KAAAtB,MAGA,IAAAu/B,GAAA,GAAAC,kBAAA,SAAAC,GACAA,EAAA95B,QAAA,SAAA+5B,GACA,GAAA,cAAAA,EAAAC,cAAA,CACA,GAAAC,GAAAR,EAAA1T,YACAC,WACA5G,GACAjW,OAAA,eACAC,MACA+E,KAAA,IAAAyQ,SAAAqb,EAAAjiB,EAAA,IAAA,KAAA4G,SAAAqb,EAAArU,EAAA,IAAA,KAAAhH,SAAA,IAAAqb,EAAApqB,EAAA,IAAA,UAOA+pB,GAAAM,QAAAT,EAAAhvB,MACA0nB,YAAA,EACAgI,WAAA,EACAC,eAAA,IAGAhb,EAAAib,SAAA,WACAZ,EAAA7d,SACAmK,UAAA,WACA,IAAAuU,KAAAC,QAGAnb,EACAjR,KAAA,OAAA,OAAA,eACA/E,MACA6O,GAAA,aACAuiB,KAAA,OACAC,WAAA,QAEA1U,UAAA,WAGAja,YAAA,SAAA1O,GACAw7B,EAAAj9B,KAAAyB,IAGAs9B,gBAAA,SAAA/vB,EAAAF,GACAouB,EAAAl9B,KAAAgP,EAAAF,IAGAkwB,WAAA,SAAAv9B,GACA07B,EAAAn9B,KAAAyB,IAGAw9B,gBAAA,SAAAx9B,GACA,MAAA27B,GAAAp9B,KAAAyB,IAGAy9B,cAAA,SAAAz9B,GACA47B,EAAAr9B,KAAAyB,IAGA2O,cAAA,SAAA3O,GACA67B,EAAAt9B,KAAAyB,IAGA09B,eAAA,SAAA19B,GACA,GAAAzB,KAAAyjB,OAAA,CACA,GAAAiB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAA/L,EAAArB,OAAA,MACAg/B,EAAAp/B,KAAAyjB,OAAAjW,OAAA,wBAAA/L,EAAArB,OAAA,qBACA,IAAAgB,EAAA+P,QAAA1P,GACA29B,GACAA,EAAAn/B,aAEA,CACAm/B,GACAA,EAAAn/B,SAEAm/B,EAAAp/B,KAAAyjB,OACA4b,OAAA,EAAA,EAAA9B,GACA9vB,MACA6xB,MAAA,eACAT,KAAA,MACAU,OAAA,QACAlgC,MAAA,iCAEA,IAAAi/B,GAAAc,EAAAhV,YACAC,WACA,QAAAjpB,EAAAse,sBAAAje,EAAAQ,iBACA,IAAA,OACAq8B,EAAAjiB,EAAAqI,EAAAyW,UACAG,MAAA,EAAAiC,EACAe,EAAArU,EAAA,EAAAsT,CACA,MAEA,KAAA,QACAe,EAAArU,GAAAyQ,EAAA,EAAA6C,CACA,MAEA,KAAA,UACAe,EAAArU,GAAAwQ,EAAA,EAAA8C,CACA,MAEA,KAAA,YACAe,EAAAjiB,EAAAqI,EAAAyW,UACAG,MAGA8D,EAAAhV,UAAAkU,GACA5Z,EAAAjY,OAAA2yB,MAKAI,eAAA,SAAA/+B,EAAAL,GACA,GAAAskB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAApN,EAAA,KACA,IAAAskB,EACA,GAAAA,EAAAvD,SAAA,SAAAuD,EAAAvD,SAAA,QAAA,CACA,GAAAse,GAAAvW,EAAA6R,mBAAArW,EACAzF,GAAAwe,sBAAAr9B,EAEAJ,KAAAyjB,OAAAhX,OAAAiY,IAEA1kB,KAAAyjB,OAAAje,UAAA,wBAAApF,EAAA,MACAH,SACAykB,EAAAzkB,UAGAgf,EAAAygB,YAAAD,EAGA,IAAAE,GAAA1gB,EAAAvgB,MAAAkF,WAAA67B,EACAE,KACAA,EAAAt8B,OAAAP,MAAAuB,QAAA,SAAA2K,GACAiQ,EAAA8f,gBAAA/vB,EAAA2wB,KAEAA,EAAAhY,MAAA7kB,MAAAuB,QAAA,QAAAu7B,GAAAn6B,GACAA,EAAApC,OAAAP,MAAAuB,QAAA,SAAA2K,GACAiQ,EAAA8f,gBAAA/vB,EAAAvJ,KAEAA,EAAAkiB,MAAA7kB,MAAAuB,QAAAu7B,KAIAD,EAAA98B,WAAAC,MAAAuB,QAAA,SAAAwxB,GACAA,EAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,OAGAhB,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,SAMA8I,EAAAhY,MAAA7kB,MAAAuB,QAAA,QAAAw7B,GAAAp6B,GACAA,EAAA5C,WAAAC,MAAAuB,QAAA,SAAAwxB,GACAA,EAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,OAGAhB,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,SAIApxB,EAAAkiB,MAAA7kB,MAAAuB,QAAAw7B,UAIAnb,GAAAzkB,UAKA6/B,gBAAA,SAAAC,EAAAC,GACA,GAAAtb,GAAA1kB,KAAAyjB,OAAAjW,OAAA,0BAAAuyB,EAAA,eAAAC,EAAA,KACAtb,IACAA,EAAAzkB,UAIAggC,cAAA,SAAAC,GACA,GAAAxb,GAAA1kB,KAAAyjB,OAAAjW,OAAA,uBAAA0yB,EAAA,KACAxb,IACAA,EAAAzkB,UAIA6kB,eAAA,WACA,GAAAziB,GAAArC,KAAAmgC,aAyCA,OAxCA99B,GAAAgC,QAAA,SAAAqgB,GACA,GAAAtkB,GAAAskB,EAAAjX,KAAA,YACA,IAAArN,EAAA,CACA,GAAAqB,GAAAwd,EAAAvgB,MAAAkF,WAAAxD,EACA,IAAAqB,EAAA,CACA,GAAA2+B,IAAA,CACA,IAAA,kBAAA3+B,GAAAkK,iBAAA,CACA,GAAAgC,GAAAlM,EAAAkK,iBAAA,cACAy0B,GAAAzyB,GAAA,cAAAA,EAAA9B,MAEAu0B,EACA/hC,EAAAqL,SACArK,MAAA,kBACAC,QAAA,qCAAAmC,EAAAG,KAAA,IACApC,MAAA,OAGAiC,EAAAkmB,OAEAlmB,EAAAkmB,MAAA7kB,MAAAuB,QAAA,QAAAg8B,GAAAvxB,GACAA,EAAA6Y,MAAA7kB,MAAAuB,QAAAg8B,GACAvxB,EAAAnF,WAGAlI,EAAAkI,eAIA,IAAA+a,EAAAvD,SAAA,cAAA,CACA,GAAAmf,GAAArhB,EAAAvgB,MAAAkF,WAAA8gB,EAAAjX,KAAA,cACAqB,EAAAmQ,EAAAvgB,MAAAkF,WAAA8gB,EAAAjX,KAAA,WACAqB,IAAAwxB,IACAxxB,EAAAyxB,aAAAD,GACAA,EAAAE,eAAA1xB,OAOAzM,EAAAqB,QAGA+8B,aAAA,SAAArgC,GACA,GAAAskB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAApN,EAAA,KACAskB,IACAA,EAAAzkB,UAIAygC,YAAA,WACA1gC,KAAAyjB,OAAAje,UAAA,SACAvF,SACAD,KAAAyjB,OAAAje,UAAA,eACAvF,UAGA0gC,aAAA,WACA3gC,KAAAyjB,OAAAje,UAAA,UACAvF,SACAD,KAAAyjB,OAAAje,UAAA,eACAvF,UAGA2gC,eAAA,WACA5gC,KAAAyjB,OAAAje,UAAA,SACAvF,UAGA4gC,eAAA,WACA7gC,KAAAyjB,OAAAje,UAAA,YACAvF,UAGA6gC,eAAA,SAAAC,EAAAt/B,GACA,GAAAijB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAAuzB,EAAA,KACA,IAAArc,EAAA,CAEAA,EAAAjX,MACAuzB,YAAAv/B,EAAArB,QAEA,IAAAwB,GAAA8iB,EAAAlX,OAAA,YACA5L,IACAA,EAAA6L,MACA+E,KAAA/Q,EAAAG,OAKA8iB,EAAAjkB,SACA0gB,SAAA,SACAuD,EAAAuc,SAAAx/B,IAIAA,EAAAoB,YAAApB,EAAAkmB,QACAlmB,EAAAoB,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA,GAAAqL,GAAAxc,EAAAlX,OAAA,wBAAAuzB,EAAA,eAAAlL,EAAAj0B,KAAA,MACAs/B,IACAA,EAAAzzB,MACAuzB,YAAAnL,EAAAz1B,OACAuU,QAAAosB,EAAAt/B,EAAArB,YAOAskB,EAAAvD,SAAA,QACAuD,EAAAlX,OAAA,OACAC,MACA0zB,YAAA/0B,EAAA2B,SAAAtM,EAAAqL,SAAA,EAAA,MAGAlL,GACAA,EAAA6L,MACAoxB,KAAAzyB,EAAA2B,SAAAtM,EAAAqL,SAAA,OAAA,SAMA4X,EAAAvD,SAAA,SACAnhB,KAAAyjB,OACAje,UAAA,wBAAAu7B,EAAA,MACAtzB,MACA2zB,UAAA3/B,EAAArB,SAIAskB,EAAAvD,SAAA,UACAnhB,KAAAyjB,OACAje,UAAA,0BAAAu7B,EAAA,MACAtzB,MACA4zB,YAAA5/B,EAAArB,WAMAkhC,eAAA,SAAA7/B,GACA,GAAAijB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAA/L,EAAArB,OAAA,KACAskB,KACAA,EAAAjkB,SACA0gB,SAAA,SACAuD,EAAAuc,SAAAx/B,KAKA8/B,yBAAA,SAAA1L,EAAA2L,GACAA,EAAA1G,SAAAh4B,MAAAuB,QAAA,SAAAo9B,GACA,GAAA96B,IAAA,CAWA,IAVAkvB,EAAA5zB,eAAA64B,SAAAh4B,MAAAuB,QAAA,SAAAq9B,GACA,GAAAA,EAAA9/B,OAAA6/B,EAAA7/B,KAAA,CACA+E,GAAA,CAEA,IAAAxG,GAAA01B,EAAA8L,iBAAAD,EAAA9/B,KACAzB,KACAA,EAAAyhC,YAAAF,OAIA/6B,EAAA,CACA,GAAAxG,GAAA01B,EAAA8L,iBAAAF,EAAA7/B,KACAzB,KACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACAA,EAAAltB,WAEAxJ,EAAAwJ,aAKA63B,EAAA3G,SAAA/3B,MAAAuB,QAAA,SAAAo9B,GACA,GAAA96B,IAAA,CAWA,IAVAkvB,EAAA5zB,eAAA44B,SAAA/3B,MAAAuB,QAAA,SAAAq9B,GACA,GAAAA,EAAA9/B,OAAA6/B,EAAA7/B,KAAA,CACA+E,GAAA,CAEA,IAAAxG,GAAA01B,EAAAgM,iBAAAJ,EAAA7/B,KACAzB,KACAA,EAAAyhC,YAAAF,OAIA/6B,EAAA,CACA,GAAAxG,GAAA01B,EAAAgM,iBAAAJ,EAAA7/B,KACAzB,KACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACAA,EAAAltB,WAEAxJ,EAAAwJ,YAMA,IAAAm4B,GAAA7iB,EAAAggB,gBAAApJ,EACAiM,GAAAt0B,OAAA,OACAiV,SAAA,YACAziB,KAAA0/B,YAAA7J,EAAA/zB,aACA1B,SAGA2hC,WAAA,SAAAjzB,EAAAnM,GACA,QAAAq/B,GAAAlZ,GACA,GAAAmZ,GAAAhjB,EAAAwE,OAAAjW,OAAA,oBAAAsb,EAAA1oB,OAAA,KACA6hC,KACA7gC,EAAAw1B,qBAAA9N,GACAnmB,EACAs/B,EAAAx0B,MACAy0B,gBAAA,QAGAD,EAAAx0B,MACAy0B,gBAAA,KAIAv/B,EACAs/B,EAAAxf,SAAA,QAEAwf,EAAA5f,YAAA,SAMA,QAAA8f,GAAAtL,GACAA,EAAAN,KACAyL,EAAAnL,EAAAN,IAGA,IAAA6L,GAAAnjB,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAgiC,KACAz/B,EACAy/B,EAAA3f,SAAA,QAEA2f,EAAA/f,YAAA,SAKA,QAAAggB,GAAAliC,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA89B,GAGA,QAAAG,GAAAzM,GACAA,EAAAgF,SAAA/3B,MAAAuB,QAAAg+B,GACAxM,EAAAiF,SAAAh4B,MAAAuB,QAAAg+B,EAEA,IAAAE,GAAAtjB,EAAAwE,OAAAjW,OAAA,oBAAAqoB,EAAAz1B,OAAA,KACAmiC,KACA5/B,EACA4/B,EAAA9f,SAAA,QAEA8f,EAAAlgB,YAAA,SAKA,QAAAmgB,GAAA1zB,GACAA,EAAAjM,WAAAC,MAAAuB,QAAAi+B,GACAxzB,EAAA6Y,MAAA7kB,MAAAuB,QAAAm+B,EAEA,IAAAC,GAAAxjB,EAAAwE,OAAAjW,OAAA,oBAAAsB,EAAA1O,OAAA,KACAqiC,KACA9/B,EACA8/B,EAAAhgB,SAAA,QAEAggB,EAAApgB,YAAA,SAKAvT,EAAAjM,WAAAC,MAAAuB,QAAAi+B,GACAxzB,EAAA6Y,MAAA7kB,MAAAuB,QAAAm+B,EAEA,IAAAC,GAAAxjB,EAAAwE,OAAAjW,OAAA,oBAAAsB,EAAA1O,OAAA,KACAqiC,KACA9/B,EACA8/B,EAAAj1B,OAAA,OACAC,MACAioB,OAAA4E,EACA4H,gBAAA,QAGAO,EAAAj1B,OAAA,OACAC,MACAioB,OAAAxM,EAAAyR,gBAAA7rB,GACAozB,gBAAA,OAUAxC,YAAA,SAAAt/B,GACA,GAAAqB,GAAAwd,EAAAvgB,MAAAkF,WAAAxD,EACA,IAAAqB,EAAA,CACA,GAAAqN,GAAAmQ,EAAAwE,OAAAjW,OAAA,oBAAApN,EAAA,MACAsiC,EAAAthC,EAAAo0B,kBAAA/zB,GACAkhC,EAAApI,EAAA,GAAAmI,CACAjhC,GAAAvB,OACAyiC,EAAApI,EAAA,IAAAn5B,EAAAo0B,kBAAA/zB,EAAAvB,MAAA,IAGA4O,EAAAmyB,SAAAx/B,GAEAqN,EAAAtB,OAAA,OACAC,MACA6tB,MAAAqH,EACAjN,OAAAxM,EAAAyR,gBAAAl5B,KAGAwd,EAAAwE,OACAje,UAAA,oBAAApF,EAAA,aACAqN,MACAqU,EAAA6gB,EAAA,EACAC,YAAA,kBAAAF,EAAA,MAGAjhC,EAAAoB,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA5W,EAAA4jB,YAAAhN,EAAAz1B,UAGAqB,EAAAkmB,MAAA7kB,MAAAuB,QAAA,SAAAnE,GACA+e,EAAAygB,YAAAx/B,EAAAE,SAIA,IAAAwC,GAAAqc,EAAAwE,OAAAje,UAAA,oBAAA/D,EAAArB,OAAA,kBACAqD,MACAq/B,EAAAxI,CACA13B,GAAAyB,QAAA,SAAAoB,GACAA,EAAA2kB,UAAA,KAAAuY,EAAAl9B,EAAA+H,OAAA,OACAu1B,KAAA,UAAA,EAAA,IAAAD,GACAA,GAAAr9B,EAAA+H,OAAA,OACAu1B,KAAA,UAAA,KAGAthC,EAAAoB,WAAAC,MAAAuB,QAAA,SAAAwxB,GACAA,EAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,OAGAhB,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,SAKA72B,KAAAm/B,eAAA19B,KAQAohC,YAAA,SAAAziC,GACA,GAAAqB,GAAAwd,EAAAvgB,MAAAkF,WAAAxD,EACA,IAAAqB,EAAA,CACA,GAAAo0B,GAAA5W,EAAAwE,OAAAjW,OAAA,oBAAApN,EAAA,MACAF,EAAA+e,EAAAwE,OAAAjW,OAAA,oBAAA/L,EAAAK,aACA1B,OAAA,MACAsiC,EAAAthC,EAAAo0B,kBAAA/zB,EAAAK,cACA6gC,EAAAziC,EAAAsN,OAAA,OACAu1B,KAAA,SAAA,EAEA,IAAAlN,GAAA31B,EAAA,CACA21B,EAAAroB,OAAA,OACAC,MACA6tB,MAAAqH,IAEA1jB,EAAAwE,OACAje,UAAA,oBAAApF,EAAA,aACAqN,MACAqU,EAAA6gB,EAAA,EACAC,YAAA,kBAAAF,EAAA,KAGA,IAAAM,GAAA,CACAvhC,GAAAQ,eAAA64B,SAAAh4B,MAAAuB,QAAA,SAAAq9B,GACA,GAAAvhC,GAAA01B,EAAAroB,OAAA,wBAAAk0B,EAAA9/B,KAAA,KACAzB,GAAAiqB,UAAA,KAAAuY,EAAAK,GAAA,IAAA7iC,EAAAiqB,YACAC,YAAAJ,KAGAjqB,KAAAm/B,eAAA19B,QAGAzB,MAAAi/B,gBAAAx9B,IAIA0+B,YAAA,WACA,MAAAngC,MAAAyjB,OACAje,UAAA,aACA/B,MACAV,IAAA,SAAA2hB,GAEA,MAAAA,GAAAjkB,YAIAgkB,iBAAA,WACA,MAAAzkB,MAAAmgC,cACAp9B,IAAA,SAAA2hB,GACA,MAAAA,GAAAjX,KAAA,gBAIAsV,iBAAA,WACA,MAAA/iB,MAAAyjB,OACAje,UAAA,qBACA/B,MACAV,IAAA,SAAAkgC,GACA,MAAAA,GAAAxiC,YAIAyiC,mBAAA,SAAAphB,EAAAE,GACA,GAAAZ,GAAAphB,KAAAmjC,qBACAr0B,EAAAmQ,EAAAsD,eAAAT,EAAAV,EAAAG,WAAAS,EAAAZ,EAAAI,UACA,OAAA1S,GACAA,EAAArB,KAAA,aAEA,MAIA01B,mBAAA,WACA,MAAAp+B,UAAAsc,eAAA,qBAGA7b,UAAA,WACAxF,KAAAyjB,OAAAje,UAAA,OACA/B,MAAAY,QAAA,SAAAqgB,GACAA,EAAAjC,SAAA,eAIAngB,WAAA,SAAAlC,GACA,GAAAskB,GAAA1kB,KAAAyjB,OAAAjW,OAAA,wBAAApN,EAAA,KACA,UAAAskB,IACAA,EAAAlX,OAAA,OACA2T,SAAA,cAQAD,cAAA,SAAAwD,GACA1kB,KAAAsqB,WAAA5F,GAGAoF,cAAA,WACA,MAAA9pB,MAAAsqB,YAGA/qB,SAAA,SAAAb,GACAsB,KAAAtB,MAAAA,EACAsB,KAAAyjB,SACAyF,EAAAkT,cAAA19B,GAEAsB,KAAAyjB,OAAA1d,UAIAwc,eAAA,SAAAT,EAAAE,EAAAohB,GACA,GAAApZ,GAAAhqB,KAAAyjB,OAAA2G,YACAC,WACA,OAAArqB,MAAAyjB,OACAje,UAAA,SACA/B,MACAgM,OAAA,SAAAX,GACA,MAAAs0B,GACAt0B,EAAArB,KAAA,eAAA21B,GACAla,EAAAmS,kBAAAvsB,EAAAgT,EAAAE,EAAAgI,GAEAd,EAAAmS,kBAAAvsB,EAAAgT,EAAAE,EAAAgI,KAGA/V,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAinB,UACAG,MAAAnnB,EAAAgnB,UACAG,QACA,IAGA+H,eAAA,SAAAvhB,EAAAE,GAIA,IAAA,GAHAshB,GAAAtjC,KAAAyjB,OACAje,UAAA,SACA/B,MACAD,EAAA,EAAAA,EAAA8/B,EAAA5/B,OAAAF,IACA,GAAAk6B,KAAAt9B,KAAAmjC,kBAAAD,EAAA9/B,GAAA23B,UAAArZ,EAAAE,GACA,MAAAshB,GAAA9/B,EAGA,OAAA,OAGAggC,eAAA,SAAA1hB,EAAAE,GAIA,IAAA,GAHA6F,GAAA7nB,KAAAyjB,OACAje,UAAA,SACA/B,MACAD,EAAA,EAAAA,EAAAqkB,EAAAnkB,OAAAF,IACA,GAAA0lB,EAAAmS,kBAAAxT,EAAArkB,GAAAse,EAAAE,EAAAhiB,KAAAyjB,OAAA2G,YACAC,aACA,MAAAxC,GAAArkB,EAGA,OAAA,OAGAigC,UAAA,WACA,MAAAzjC,MAAAyjB,OAAAje,UAAA,iBACA9B,OAAA,GAGAggC,MAAA,WACA1jC,KAAAyjB,OAAAje,UAAA,YACAnB,QAAA,SAAAwyB;AACAA,EAAA/nB,KAAA3I,WAAAqtB,YAAAqD,EAAA/nB,SA8NA,OAtNA4uB,MAAAiG,OAAA,SAAAjG,EAAAkG,GACA,GAAAC,GAAA,SAAA/hB,EAAAE,EAAAje,GACA,IAAA/D,KAAAS,SACA0gB,SAAA,YAAA,CACA,GAAArR,GAAAhQ,OAAAmf,EAAAwE,OAAA3U,MACAgQ,KAAA,cACA9e,MAAA8O,KAAA3I,WAAA29B,aAAA9jC,KAAA8O,KAAAgB,EAAAA,EAAApM,OAAA,GAAAqgC,aAGA/jC,KAAAvB,KAAA,aAAAqjB,GACA9hB,KAAAvB,KAAA,aAAAujB,GAEA/C,EAAAwe,oBAAAz9B,KAAAyN,KAAA,YAEA,IAAAu2B,GAAAhkC,KAAAvB,KAAA,YAOA,IANAulC,GACAA,EAAA3/B,QAAA,SAAA4/B,GACAA,EAAAC,MAAAlkC,MAAA8hB,EAAAE,EAAAje,KACA4e,KAAA3iB,OAGAA,KAAAmhB,SAAA,SAAAnhB,KAAAmhB,SAAA,QAAA,CACA,GAAAia,GAAAlS,EAAA8R,gBAAAh7B,KACAA,MAAAvB,KAAA,KAAA,IAAA28B,EAAAtZ,EAAA,IAAAsZ,EAAApZ,OAEAhiB,MAAAvB,KAAA,KAAAuB,KAAAoqB,YACA+Z,MAGAnkC,MAAAvB,KAAA,YAAA,IAGA2lC,EAAA,SAAAC,EAAAvB,EAAAhhB,EAAAE,EAAAje,GACA,GAAAugC,GAAAtkC,KAAAvB,KAAA,cACA8lC,EAAAvkC,KAAAvB,KAAA,aACA,IAAA,mBAAA6lC,IAAA,mBAAAC,GAWA,GAVA,gBAAAF,IAAA,cAAAA,EAAAtiC,OACAgC,EAAAsgC,EACAviB,EAAA/d,EAAAygC,eAAA,GAAAziB,QACAC,EAAAje,EAAAygC,eAAA,GAAAviB,QACAoiB,EAAAviB,EAAAwiB,EACAxB,EAAA9gB,EAAAuiB,GAGAvkC,KAAAoqB,UAAApqB,KAAAvB,KAAA,OAAAuB,KAAAvB,KAAA,MAAA,IAAA,MAAA4lC,EAAAvB,IAEA9iC,KAAAvB,KAAA,YAAA,CACA,GAAAulC,GAAAhkC,KAAAvB,KAAA,WACAulC,IACAA,EAAA3/B,QAAA,SAAA4/B,GACAA,EAAAC,MAAAlkC,MAAAqkC,EAAAvB,EAAAhhB,EAAAE,EAAAje,KACA4e,KAAA3iB,WAEA,CACAA,KAAAvB,KAAA,YAAA,EACA,IAAAgmC,GAAAzkC,KAAAvB,KAAA,gBACAgmC,IACAA,EAAApgC,QAAA,SAAA4/B,GACAA,EAAAC,MAAAlkC,MAAAqkC,EAAAvB,EAAAhhB,EAAAE,EAAAje,KACA4e,KAAA3iB,SAMA0kC,EAAA,WACA,GAAAC,GAAA5oB,SACA,IAAA/b,KAAAvB,KAAA,YAAA,CAEA,GAAAgD,GAAAwd,EAAAvgB,MAAAkF,WAAA5D,KAAAyN,KAAA,aACA,IAAAhM,EAAA,CAEA,GAAAsR,GAAAtR,EAAAkK,iBAAAuT,EACAnM,KACAA,EAAA7U,EAAA0N,cACAmH,EAAAnR,KAAAsd,EACAzd,EAAAqK,YAAAiH,GAEA,IAAAurB,GAAAt+B,KAAAoqB,YACAC,WACAtX,GAAAlH,MAAAhD,KAAAC,WACAgZ,EAAAwc,EAAAjiB,EACA2F,EAAAsc,EAAArU,IAKA,GAAA+Z,GAAAhkC,KAAAvB,KAAA,UACAulC,IACAA,EAAA3/B,QAAA,SAAA4/B,GACAA,EAAAC,MAAAlkC,KAAA2kC,IACAhiB,KAAA3iB,OAGAA,KAAAvB,KAAA,YAAA,GAEAuB,KAAA4kC,WAAA,cACA5kC,KAAA4kC,WAAA,cACA5kC,KAAA4kC,WAAA,MACA3lB,EAAAwe,oBAAA,KAGAmG,GAAA3xB,UAAAkY,UAAA,WACA,MAAAnqB,MAAA6kC,KAAA,SAAAR,EAAAvB,EAAAhhB,EAAAE,EAAAje,GACA,IAAAA,EAAAi6B,OACAoG,EAAAF,MAAAlkC,KAAA+b,YAEA,SAAA+F,EAAAE,EAAAje,GACA,IAAAA,EAAAi6B,OACA6F,EAAAK,MAAAlkC,KAAA+b,YAEA,SAAAhY,GACA,IAAAA,EAAAi6B,OACA0G,EAAAR,MAAAlkC,KAAA+b,cAKA6nB,EAAA3xB,UAAA4xB,UAAA,SAAAI,GACA,GAAAD,GAAAhkC,KAAAvB,KAAA,gBAEA,OADAulC,GAAAxhC,KAAAyhC,GACAjkC,KAAAvB,KAAA,YAAAulC,IAGAJ,EAAA3xB,UAAAyyB,QAAA,SAAAT,GACA,GAAAD,GAAAhkC,KAAAvB,KAAA,cAEA,OADAulC,GAAAxhC,KAAAyhC,GACAjkC,KAAAvB,KAAA,UAAAulC,IAGAJ,EAAA3xB,UAAAmyB,SAAA,SAAAH,GACA,GAAAD,GAAAhkC,KAAAvB,KAAA,eAEA,OADAulC,GAAAxhC,KAAAyhC,GACAjkC,KAAAvB,KAAA,WAAAulC,IAGAJ,EAAA3xB,UAAA6yB,YAAA,SAAAb,GACA,MAAAjkC,MAAAvB,KAAA,cAAAwlC,IAGAL,EAAA3xB,UAAA8yB,UAAA,SAAAd,GACA,MAAAjkC,MAAAvB,KAAA,YAAAwlC,IAGAL,EAAA3xB,UAAA+yB,cAAA,SAAAf,GACA,GAAAD,GAAAhkC,KAAAvB,KAAA,oBAEA,OADAulC,GAAAxhC,KAAAyhC,GACAjkC,KAAAvB,KAAA,gBAAAulC,IAGAJ,EAAA3xB,UAAA2b,WAAA,SAAAnsB,GACA,GAAAmsB,GAAA,SAAA7pB,GACA,IAAAA,EAAAi6B,QACAj6B,EAAAkhC,cAAA,EAEAlhC,EAAAE,SAAAF,EAAAmhC,UACAjmB,EAAAwE,OAAAje,UAAA,aACAnB,QAAA,SAAAqgB,GACAA,EAAArC,YAAA,WACA,IAAAjiB,GAAAskB,EAAAjkB,SAAAgN,KAAA,YACA,IAAArN,GAAAA,EAAAsD,OAAA,EAAA,CACA,GAAAjC,GAAAwd,EAAAvgB,MAAAkF,WAAAxD,EACAgB,GAAAkD,YAAA7C,GAAA,MAIAsC,EAAAE,SAAAF,EAAAmhC,UACAllC,KAAAwN,OAAA,OACA23B,YAAA,YACAnlC,KAAAwN,OAAA,OACA2T,SAAA,YACA/f,EAAAkD,YAAA7C,GAAA,GAEAL,EAAAkD,YAAA7C,GAAA,KAIAzB,KAAAwN,OAAA,OACAiV,SAAA,YACArhB,EAAAkD,YAAA7C,GAAA,KAKA,OAAAzB,MACA+9B,UAAAnQ,GACAwX,WAAAxX,IAGAgW,EAAA3xB,UAAAgvB,SAAA,SAAAx/B,GACA,GAAA8zB,GAAA9zB,EAAAkK,iBAAAuT,GACAnM,GACA+O,EAAA,IACAE,EAAA,IAEA,IAAAuT,EACA,IACAxiB,EAAAlK,KAAAnC,MAAA6uB,EAAA1pB,OACA,MAAAsoB,GACAphB,GACA+O,EAAA,IACAE,EAAA,SAIAuT,GAAAr3B,EAAA0N,cACA2pB,EAAA3zB,KAAAsd,EACAqW,EAAA1pB,MAAAhD,KAAAC,UAAAiK,GACAtR,EAAAqK,YAAAypB,EAEA,OAAAv1B,MAAAoqB,UAAA,IAAArX,EAAA+O,EAAA,IAAA/O,EAAAiP,MAIA/C,KCx+BArhB,QAAAC,OAAA,aACAwnC,SAAA,eAAA,IACAA,SAAA,oBAAA,IACAA,SAAA,aAAA,KACAA,SAAA,cAAA,IACAA,SAAA,cAAA,IACAA,SAAA,iBAAA,IACAA,SAAA,iBAAA,GCPAznC,QAAAC,OAAA,aACAgU,QAAA,gBAAA,UAAA,OAAA,eAAA,aAAA,cAAA,SAAAqX,EAAA9c,EAAAhL,EAAAm5B,EAAAD,GACA,MAAA,UAAArb,EAAAxd,GACAwd,EAAAwhB,aAAAh/B,EAAArB,QACA8oB,EAAAkT,cAAAnd,EAAAvgB,MAEA,IAAAgkC,GAAAthC,EAAAo0B,kBAAA/zB,GACAkhC,EAAApI,EAAA,GAAAmI,CACAjhC,GAAAvB,OACAyiC,EAAApI,EAAA,IAAAn5B,EAAAo0B,kBAAA/zB,EAAAvB,MAAA,GAEA,IAAAolC,GAAApc,EAAAyR,gBAAAl5B,GAEAwhC,EAAAhkB,EAAAwE,OACA8hB,KAAA,EAAA,EAAA5C,EAAA2C,EAAA,GACA73B,MACAoxB,KAAA,QACAsC,YAAA,GACA5B,OAAA,QACAiG,YAAA,EACAlG,MAAAl+B,EAAAkB,WAAAb,GAAA,cAAA,OAGAgkC,EAAAxmB,EAAAwE,OACAjR,KAAAmwB,EAAA,EAAArI,EAAA,EAAA,EAAA74B,EAAAG,MACA6L,MACAoxB,KAAAzyB,EAAA2B,SAAAtM,EAAAqL,SAAA,OAAA,OACAgyB,WAAA,SACAQ,MAAA,OACAsD,YAAA,kBAAAF,EAAA,MAGAgD,EAAAzmB,EAAAwE,OACAjR,KAAAmwB,EAAA,EAAArI,EAAA,EAAA,GAAA74B,EAAAQ,eAAAL,MACA6L,MACAoxB,KAAA,QACAC,WAAA,SACA8D,YAAA,kBAAAF,EAAA,MAGA5zB,EAAAmQ,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,gBACA0B,YAAAv/B,EAAArB,SAEAqM,OAAAw2B,GACAx2B,OAAAg5B,GACAh5B,OAAAi5B,GACA9X,WAAAnsB,GACA0oB,YACA0Z,UAAA,WACA,GAAAziB,GAAArc,SAAAsc,eAAA,mBACArhB,MAAAvB,KAAA,UACA6iB,KAAAF,EAAAG,WACAR,IAAAK,EAAAI,cAGAwjB,cAAA,WACA,GAAAL,GAAA5oB,SACAta,GAAAvB,MAEAuB,EAAAvB,KAAAylC,YAAAlkC,EAIA,IAAAo+B,GAAA,SAAAhK,GACA,GAAA+P,GAAA,SAAA/O,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,iBAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAAxf,EAAAigB,KAKA9O,GAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAAuhC,KAGA/P,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAAuhC,KAGAnkC,GAAAoB,WAAAC,MAAAuB,QAAAw7B,GAGAp+B,EAAAkmB,MAAA7kB,MAAAuB,QAAA,QAAAwhC,GAAApgC,GACAA,EAAA5C,WAAAC,MAAAuB,QAAAw7B,GACAp6B,EAAAkiB,MAAA7kB,MAAAuB,QAAAwhC,OAGAzB,SAAA,SAAAC,EAAAvB,EAAA/gB,EAAAE,GACA,GAAA0iB,GAAA5oB,SAGAmG,cAAAliB,KAAAvB,KAAA,eACA,IAAAukB,GAAAhjB,KAAAvB,KAAA,cACAukB,IACAA,EAAAxV,OAAA,OAAA6U,YAAA,gBAGA,IAAAF,GAAAG,WAAA,WACA,GAAA3O,GAAA3T,KAAAvB,KAAA,YACA6iB,KAAA,EACAN,MAAA,GAEAgC,EAAA/D,EAAAsD,eAAAR,EAAApO,EAAA2N,KAAAW,EAAAtO,EAAAoN,IAAAtf,EAAArB,OACA4iB,IACAhjB,KAAAvB,KAAA,cAAAukB,GACAA,EAAAxV,OAAA,OAAAiV,SAAA,YAEAziB,KAAAvB,KAAA,cAAA,OAEAkkB,KAAA3iB,MAAA,IACAA,MAAAvB,KAAA,cAAA0jB,EAGA,IAAAyd,GAAA,SAAA5wB,EAAAF,GACA,GAAAg3B,GAAA7mB,EAAAwE,OAAAjW,OAAA,0BAAAwB,EAAA5O,OAAA,eAAA0O,EAAA1O,OAAA,KACA0lC,IACAA,EAAArnC,KAAA,aAAAylC,MAAA4B,EAAAnB,GAGAljC,GAAA4B,OAAAP,MAAAuB,QAAA,SAAA2K,GACA4wB,EAAA5wB,EAAAvN,IAIA,IAAAo+B,GAAA,SAAAhK,GACA,GAAA+P,GAAA,SAAA/O,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,aAAAylC,MAAAxf,EAAAigB,GAIA9O,GAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAAuhC,KAGA/P,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAAuhC,KAGAnkC,GAAAoB,WAAAC,MAAAuB,QAAAw7B,GAGAp+B,EAAAkmB,MAAA7kB,MAAAuB,QAAA,QAAAwhC,GAAApgC,GACAA,EAAA5C,WAAAC,MAAAuB,QAAAw7B,GACAp6B,EAAApC,OAAAP,MAAAuB,QAAA,SAAA2K,GACA4wB,EAAA5wB,EAAAvJ,KAEAA,EAAAkiB,MAAA7kB,MAAAuB,QAAAwhC,OAGAnB,QAAA,WAaA,QAAAqB,GAAA/2B,EAAAF,GACA,GAAAg3B,GAAA7mB,EAAAwE,OAAAjW,OAAA,0BAAAwB,EAAA5O,OAAA,eAAA0O,EAAA1O,OAAA,KACA0lC,IACAA,EAAArnC,KAAA,WAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAA4B,EAAAnB,KAYA,QAAAqB,GAAAnQ,GACA,QAAAoQ,GAAApP,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,WAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAAxf,EAAAigB,KAKA9O,EAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA4hC,KAGApQ,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA4hC,KA3CA,GAAAtB,GAAA5oB,UAEAqG,EAAApiB,KAAAvB,KAAA,cACA2jB,KAEAA,EAAA5U,OAAA,OAAA6U,YAAA,iBAGAvT,EAAA7O,SACAgf,EAAAvgB,MAAAkF,WAAAwe,EAAA3U,KAAA,cAAAyV,SAAAzhB,IAWAA,EAAA4B,OAAAP,MAAAuB,QAAA,SAAA2K,GACAhP,KAAA4kC,WAAA51B,EAAA5O,QACA2lC,EAAA/2B,EAAAvN,IACAkhB,KAAA3iB,OAEAkiB,aAAAliB,KAAAvB,KAAA,gBAqBAgD,EAAAoB,WAAAC,MAAAuB,QAAA2hC,GACAvkC,EAAAkmB,MAAA7kB,MAAAuB,QAAA,QAAAwhC,GAAApgC,GACAA,EAAA5C,WAAAC,MAAAuB,QAAA2hC,GACAvgC,EAAApC,OAAAP,MAAAuB,QAAA,SAAA2K,GACA+2B,EAAA/2B,EAAAvJ,KAEAA,EAAAkiB,MAAA7kB,MAAAuB,QAAAwhC,KAGA7lC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,WAGA,IAAAnjC,EAAAvB,KAAA,CACA,GAAAA,GAAA+e,EAAAwE,OAAAjW,OAAA,oBAAA/L,EAAAvB,KAAAE,OAAA,MACAwC,EAAA1C,EAAAsF,UAAA,oBAAA/D,EAAAvB,KAAAE,OAAA,kBAAAqD,MACA4gC,GAAAnkC,EAAAsN,OAAA,OAAAu1B,KAAA,SAAAJ,GAAA,EACAG,EAAAxI,CACA13B,GAAAyB,QAAA,SAAAoB,GACAq9B,GAAAr9B,EAAA+H,OAAA,OAAAu1B,KAAA,UAAA,KAEA7iC,EAAAuM,OAAAqC,GACAA,EAAAsb,UAAA,IAAAia,EAAA,IAAAvB,OAEAh0B,GAAAmyB,SAAAx/B,EAGAwd,GAAAkgB,eAAA19B,OCvOA7D,QAAAC,OAAA,aACAgU,QAAA,qBAAA,UAAA,OAAA,eAAA,SAAAqX,EAAA9c,EAAAsuB,GACA,MAAA,UAAAzb,EAAAjQ,EAAAF,GAGA,QAAAo3B,KACAC,EAAAlnB,EAAAwE,OAAAjW,OAAA,qBAAAwB,EAAA5O,OAAA,MACA4iB,EAAA/D,EAAAwE,OAAAjW,OAAA,oBAAAsB,EAAA1O,OAAA,MACAgmC,EAAAnnB,EAAAwE,OAAAjW,OAAA,0BAAAwB,EAAA5O,OAAA,eAAA0O,EAAA1O,OAAA,KAEA,IAAAimC,GAAAF,EAAA/b,YAAAC,YACAic,EAAApd,EAAA8R,gBAAAhY,EAEAvkB,IACA+8B,MACA1Z,EAAA,EACAE,EAAA,GAEAyZ,IACA3Z,EAAAwkB,EAAAxkB,EAAAukB,EAAAhqB,EACA2F,EAAAskB,EAAAtkB,EAAAqkB,EAAApc,GAEAqR,MAAAtY,EAAAxV,OAAA,OAAAu1B,KAAA,SACArN,OAAA1S,EAAAxV,OAAA,OAAAu1B,KAAA,WApBA,GAAAoD,GAAAnjB,EAAAojB,EAAAG,EAAA/c,EAAA/qB,IAuBAynC,IACA,IAAAM,GAAAtd,EAAAqS,sBAAA98B,EAAA+8B,KAAA/8B,EAAAg9B,GAAAh9B,EAAA68B,MAAA78B,EAAAi3B,OACA,IAAA0Q,EAEAA,EACA3nC,KAAA,OAAAA,GAEA8nC,EAAAH,EACA54B,OAAA,QACAC,MACAg5B,EAAA,IAAAhoC,EAAA+8B,KAAA1Z,EAAA,IAAArjB,EAAA+8B,KAAAxZ,EAAA,IAAAwkB,EAAA1kB,EAAA,IAAA0kB,EAAAxkB,IAEAwH,EAAA+c,EAAAG,iBAAAhM,EAAA,GACA6L,EAAA94B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,IAAAwkB,EAAA1kB,EAAA,IAAA0kB,EAAAxkB,IAEAokB,EACA54B,OAAA,UACAC,MACAk5B,GAAAH,EAAA1kB,EACA8kB,GAAAJ,EAAAxkB,QAEA,CACAukB,EAAAtnB,EAAAwE,OACArjB,KAAA,IAAA3B,EAAA+8B,KAAA1Z,EAAA,IAAArjB,EAAA+8B,KAAAxZ,EAAA,IAAAwkB,EAAA1kB,EAAA,IAAA0kB,EAAAxkB,GACAvU,MACAoxB,KAAA,OACAU,OAAA,UACAiG,YAAA,EACAqB,cAAA,QACAC,eAAA,QACAxH,MAAA,OAEAyH,UAAA,WACA/mC,KAAAyN,MACA+3B,YAAA,MAGAwB,SAAA,WACAhnC,KAAAyN,MACA+3B,YAAA,KAIA,IAAAyB,GAAAhoB,EAAAwE,OACA4b,OAAAmH,EAAA1kB,EAAA0kB,EAAAxkB,EAAA,GACAvU,MACAoxB,KAAA,SAGAsH,GACAn3B,QACAvB,MACA6xB,MAAA,aACA+B,YAAAryB,EAAA5O,OACAghC,UAAAtyB,EAAA1O,SAEA3B,KAAA,OAAAA,GACAgO,OAAA85B,GACA95B,OAAAw6B,GACArZ,aACAkX,YAAA,SAAAT,EAAAvB,GACA,GAAArkC,GAAAuB,KAAAvB,KAAA,QACAyoC,GACAplB,EAAArjB,EAAAg9B,GAAA3Z,EAAAuiB,EACAriB,EAAAvjB,EAAAg9B,GAAAzZ,EAAA8gB,GAEAqE,EAAAje,EAAAqS,sBAAA98B,EAAA+8B,KAAA0L,EAAAzoC,EAAA68B,MAAA78B,EAAAi3B,OACA6Q,GAAA94B,MACAg5B,EAAA,IAAAhoC,EAAA+8B,KAAA1Z,EAAA,IAAArjB,EAAA+8B,KAAAxZ,EAAA,IAAAmlB,EAAArlB,EAAA,IAAAqlB,EAAAnlB,IAEAwH,EAAA+c,EAAAG,iBAAAhM,EAAA,GACA6L,EAAA94B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,IAAAmlB,EAAArlB,EAAA,IAAAqlB,EAAAnlB,IACAilB,EAAAx5B,MACAk5B,GAAAQ,EAAArlB,EACA8kB,GAAAO,EAAAnlB,MAGA+iB,UAAA,SAAAV,EAAAvB,GACA,GAAArkC,GAAAuB,KAAAvB,KAAA,QACA2oC,GACAtlB,EAAArjB,EAAAg9B,GAAA3Z,EAAAuiB,EACAriB,EAAAvjB,EAAAg9B,GAAAzZ,EAAA8gB,GAEAqE,EAAAje,EAAAqS,sBAAA98B,EAAA+8B,KAAA4L,EAAA3oC,EAAA68B,MAAA78B,EAAAi3B,OACA6Q,GAAA94B,MACAg5B,EAAA,IAAAhoC,EAAA+8B,KAAA1Z,EAAA,IAAArjB,EAAA+8B,KAAAxZ,EAAA,IAAAmlB,EAAArlB,EAAA,IAAAqlB,EAAAnlB,IAEAwH,EAAA+c,EAAAG,iBAAAhM,EAAA,GACA6L,EAAA94B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,IAAAmlB,EAAArlB,EAAA,IAAAqlB,EAAAnlB,IACAilB,EAAAx5B,MACAk5B,GAAAQ,EAAArlB,EACA8kB,GAAAO,EAAAnlB,MAGA0iB,QAAA,WACAwB,IACAlmC,KAAAvB,KAAA,OAAAA,KAGA+qB,EAAA+c,EAAAG,iBAAAhM,EAAA,GACA6L,EAAA94B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,IAAAwkB,EAAA1kB,EAAA,IAAA0kB,EAAAxkB,SC9HApkB,QAAAC,OAAA,aACAgU,QAAA,iBAAA,eAAA,UAAA,OAAA,eAAA,oBAAA,SAAAzQ,EAAA8nB,EAAA9c,EAAAsuB,EAAA2M,GACA,MAAA,UAAApoB,EAAAxd,GACAwd,EAAAwhB,aAAAh/B,EAAArB,QACA8oB,EAAAkT,cAAAnd,EAAAvgB,MAEA,IAAAukC,GAAAhkB,EAAAwE,OACA4b,OAAA,EAAA,EAAA3E,GACAjtB,MACAoxB,KAAA,QACAU,OAAA,OACAiG,YAAA,EACAlG,MAAAl+B,EAAAkB,WAAAb,GAAA,cAAA,KACA6lC,QAAA,MAGAC,EAAAtoB,EAAAwE,OACA4b,OAAA,EAAA3E,EAAA,EAAA2M,EAAAA,GACA55B,MACAoxB,KAAA,UACAS,MAAA,eAEAyH,UAAA,WACA/mC,KAAAyN,MACA+5B,EAAAH,EAAA,MAGAL,SAAA,WACAhnC,KAAAyN,MACA+5B,EAAAH,MAGAxC,KACA,SAAAR,EAAAvB,EAAA6D,EAAAC,GACA,GAAAa,GAAAznC,KAAAvB,KAAA,UACAuB,MAAAvB,KAAA,QAAAgP,MACAg5B,EAAA,IAAAgB,EAAA3lB,EAAA,IAAA2lB,EAAAzlB,EAAA,KAAAylB,EAAA3lB,EAAAuiB,GAAA,KAAAoD,EAAAzlB,EAAA8gB,KAGA5gB,aAAAliB,KAAAvB,KAAA,eACA,IAAAukB,GAAAhjB,KAAAvB,KAAA,cACAukB,IACAA,EAAAxV,OAAA,OAAA6U,YAAA,gBAGA,IAAAF,GAAAG,WAAA,WACA,GAAAkH,GAAAN,EAAAa,iBAAA4c,EAAAC,GACA5jB,EAAA/D,EAAAsD,eAAAiH,EAAA1H,EAAA0H,EAAAxH,EACA,IAAAgB,EAAA,CACAhjB,KAAAvB,KAAA,cAAAukB,EACA,IAAAR,GAAAQ,EAAAxV,OAAA,MACAgV,GAAAC,SAAA,UAEA,IAAA3T,GAAAmQ,EAAAvgB,MAAAkF,WAAAof,EAAAvV,KAAA,aACAhM,GAAAimC,iBAAA54B,EAAAlN,OACA4gB,EAAAC,SAAA,aAGAziB,MAAAvB,KAAA,cAAA,OAEAkkB,KAAA3iB,MAAA,IACAA,MAAAvB,KAAA,cAAA0jB,IAEA,WACA,GAAAwlB,GAAA34B,EAAAob,YAAAC,YACAod,GACA3lB,EAAA6lB,EAAAtrB,EACA2F,EAAA2lB,EAAA1d,EAAAyQ,EAAA,EAAA2M,EAEArnC,MAAAvB,KAAA,UAAAgpC,EACA,IAAA3B,GAAA7mB,EAAAwE,OACArjB,KAAA,IAAAqnC,EAAA3lB,EAAA,IAAA2lB,EAAAzlB,EAAA,IAAAylB,EAAA3lB,EAAA,IAAA2lB,EAAAzlB,GACAvU,MACAoxB,KAAA,OACAU,OAAA,UACAiG,YAAA,EACAqB,cAAA,QACAC,eAAA,QACAQ,QAAA,IAEAtnC,MAAAvB,KAAA,OAAAqnC,IAEA,WACA,GAAA9iB,GAAAhjB,KAAAvB,KAAA,cACA,IAAAukB,EAAA,CACA,IAAAA,EAAAxV,OAAA,OAAA2T,SAAA,SAAA,CAEA,GAAAymB,GAAA3oB,EAAAvgB,MAAAkF,WAAAof,EAAAvV,KAAA,aACAhM,GAAAimC,iBAAAE,EAAAhmC,OAIAH,EAAAomC,YAAAD,GAKA5kB,EAAAxV,OAAA,OAAA6U,YAAA,iBAGAriB,KAAAvB,KAAA,QAAAwB,SACAiiB,aAAAliB,KAAAvB,KAAA,gBAEAuB,KAAA4kC,WAAA,QACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,WACA5kC,KAAA4kC,WAAA,iBAIAa,EAAAxmB,EAAAwE,OACAjR,KAAA,GAAA,EAAA/Q,EAAAG,MACA6L,MACAoxB,KAAAzyB,EAAA2B,SAAAtM,EAAAqL,SAAA,OAAA,OACAgyB,WAAA,SACAQ,MAAA,OACAsD,YAAA,qBAGA8C,EAAAzmB,EAAAwE,OACAjR,KAAA,EAAA,GAAA/Q,EAAAQ,eAAAL,MACA6L,MACAoxB,KAAA,QACAC,WAAA,SACA8D,YAAA,qBAGA5zB,EAAAiQ,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,iBACA0B,YAAAv/B,EAAArB,SAEAqM,OAAAw2B,GACAx2B,OAAAg5B,GACAh5B,OAAAi5B,GACAj5B,OAAA86B,GACA3Z,WAAAnsB,GACA0oB,YACAia,SAAA,WACA,GAAAO,GAAA5oB,SACAta,GAAA2mB,SAAAtlB,MAAAuB,QAAA,SAAAqzB,GACA,GAAAoO,GAAA7mB,EAAAwE,OAAAjW,OAAA,0BAAA/L,EAAArB,OAAA,eAAAs3B,EAAAt3B,OAAA,KACA0lC,IACAA,EAAArnC,KAAA,eAAAylC,MAAA4B,EAAAnB,OAIAD,QAAA,WACA,GAAAC,GAAA5oB,SACAta,GAAA2mB,SAAAtlB,MAAAuB,QAAA,SAAAqzB,GACA,GAAAoO,GAAA7mB,EAAAwE,OAAAjW,OAAA,0BAAA/L,EAAArB,OAAA,eAAAs3B,EAAAt3B,OAAA,KACA0lC,IACAA,EAAArnC,KAAA,WAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAA4B,EAAAnB,SAKA1D,SAAAx/B,EAWA,OATAwd,GAAAkgB,eAAA19B,GAEA8lC,EAAAnC,WAAA,SAAArhC,GACAA,EAAAkhC,cAAA,IAEAsC,EAAAxJ,UAAA,SAAAh6B,GACAA,EAAAkhC,cAAA,IAGAj2B,MC1KApR,QAAAC,OAAA,aACAgU,QAAA,qBAAA,YAAA,UAAA,OAAA,WAAA,eAAA,eAAA,cAAA,cAAA,SAAA1Q,EAAA+nB,EAAA9c,EAAAlO,EAAAkD,EAAA/C,EAAAm8B,EAAAF,GACA,MAAA,UAAArb,EAAAxd,GACA,GAAAqmC,GAAAv1B,CACA0M,GAAAwhB,aAAAh/B,EAAArB,QACA8oB,EAAAkT,cAAAnd,EAAAvgB,MAEA,IAAAwB,GAAA+e,EAAAwE,OAAAjW,OAAA,wBAAA/L,EAAAK,aAAA1B,OAAA,MACAuiC,EAAAziC,EAAAsN,OAAA,OAAAu1B,KAAA,SAAA,GACAuC,EAAApc,EAAA0R,gBAAAn5B,GACAsmC,EAAA3mC,EAAAo0B,kBAAA/zB,EAAAK,cACAmhC,EAAAhkB,EAAAwE,OACA8hB,KAAA,EAAA,EAAA5C,EAAA2C,EAAA,GACA73B,MACAoxB,KAAA,QACAsC,YAAA/0B,EAAA2B,SAAAtM,EAAAqL,SAAA,EAAA,IACAyyB,OAAA,QACAiG,YAAA,IACAlG,MAAAl+B,EAAAkB,WAAAb,GAAA,cAAA,OAGAgkC,EAAAxmB,EAAAwE,OACAjR,KAAAmwB,EAAA,EAAA2C,EAAA,EAAA7jC,EAAAG,MACA6L,MACAoxB,KAAA,QACAC,WAAA,SACAQ,MAAA,OACAsD,YAAA,kBAAAmF,EAAA,MAGArC,EAAAzmB,EAAAwE,OACAjR,KAAAmwB,EAAA,EAAA2C,EAAA,EAAA,GAAA7jC,EAAAQ,eAAAL,MACA6L,MACAoxB,KAAA,QACAC,WAAA,SACA8D,YAAA,kBAAAmF,EAAA,MAGAlS,EAAA5W,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,gBACA0B,YAAAv/B,EAAArB,SAEAqM,OAAAw2B,GACAx2B,OAAAg5B,GACAh5B,OAAAi5B,GAEA1C,EAAA,EACAgF,EAAA,EACAC,EAAA,CACAxmC,GAAAQ,eAAA44B,SAAA/3B,MAAAuB,QAAA,SAAAq9B,GACA,GAAAwG,GAAAjpB,EAAAwE,OACA8hB,MAAA,EAAA,EAAA,GAAA/K,EAAA,GAAA,GACA/sB,MACAoxB,KAAA,UACAU,OAAA,UACAiG,YAAA,IAEAuB,UAAA,WACA/mC,KAAAyN,MACA+3B,YAAA,MAGAwB,SAAA,WACAhnC,KAAAyN,MACA+3B,YAAA,MAGAzH,UAAA,SAAAh6B,GACAA,EAAAkhC,cAAA,IAEAG,WAAA,SAAArhC,GACAA,EAAAkhC,cAAA,IAEAJ,KACA,SAAAR,EAAAvB,EAAA6D,EAAAC,GACA,GAAAuB,GAAAnoC,KAAAvB,KAAA,WACA09B,GAAAra,EAAA,EAAAE,EAAA,EACAmmB,GAAArmB,EAAAqmB,EAAArmB,EAAAuiB,EACAlI,EAAAra,EAAAqmB,EAAArmB,EAAAuiB,GAAA8D,EAAArmB,GAAAqmB,EAAArmB,EAAAuiB,IAAA,EAEAlI,EAAAra,EAAAqmB,EAAArmB,GAAAqmB,EAAArmB,EAAAuiB,EAAA8D,EAAArmB,GAAA,EAGAqa,EAAAna,GAAAmmB,EAAAnmB,GAAAmmB,EAAAnmB,EAAA8gB,EAAAqF,EAAAnmB,EAAAmmB,EAAAnmB,EAAA8gB,GAAA,GACA9iC,KAAAvB,KAAA,WAAAgP,MACAg5B,EAAA,IAAA0B,EAAArmB,EAAA,IAAAqmB,EAAAnmB,EAAA,KAAAma,EAAAra,EAAA,IAAAqa,EAAAna,EAAA,KAAAmmB,EAAArmB,EAAAuiB,GAAA,KAAA8D,EAAAnmB,EAAA8gB,KAGA5gB,aAAAliB,KAAAvB,KAAA,kBACA,IAAAq9B,GAAA97B,KAAAvB,KAAA,cACAq9B,IACAA,EAAAtuB,OAAA,QAAA6U,YAAA,gBAEA,IAAA0Z,GAAA/7B,KAAAvB,KAAA,cACAs9B,IACAA,EAAAvuB,OAAA,OAAA6U,YAAA,gBAGA,IAAAF,GAAAG,WAAA,WACA,GAAAkH,GAAAN,EAAAa,iBAAA4c,EAAAC,GACA9K,EAAA7c,EAAAukB,eAAAha,EAAA1H,EAAA0H,EAAAxH,EACA,IAAA8Z,EAAA,CACA97B,KAAAvB,KAAA,cAAA,MACAuB,KAAAvB,KAAA,cAAAq9B,EACA,IAAAsM,GAAAtM,EAAAtuB,OAAA,OACA46B,GAAA3lB,SAAA,WAEAqZ,EAAA3a,SAAA,aACAinB,EAAA3lB,SAAA,aAGA,CACAziB,KAAAvB,KAAA,cAAA,KACA,IAAAs9B,GAAA9c,EAAAokB,eAAA8E,EAAArmB,EAAAuiB,EAAA8D,EAAAnmB,EAAA8gB,EACA,IAAA/G,EAAA,CACA/7B,KAAAvB,KAAA,cAAAs9B,EACA,IAAAsM,GAAAtM,EAAAvuB,OAAA,MACA66B,GAAA5lB,SAAA,UAEA,IAAAqG,GAAA7J,EAAAvgB,MAAAkF,WAAAm4B,EAAAtuB,KAAA,eACArM,EAAA2nB,eAAAtnB,EAAAogC,iBAAAH,EAAA9/B,MAAAknB,IACA1nB,EAAAshB,aAAAoG,EAAA7mB,eAAAR,EAAAK,eACAumC,EAAA5lB,SAAA,aAGAziB,MAAAvB,KAAA,cAAA,QAGAkkB,KAAA3iB,MAAA,IACAA,MAAAvB,KAAA,iBAAA0jB,IAEA,WACA,GAAA+Z,GAAA3pB,EAAA6X,YAAAC,YACA4R,EAAA/S,EAAA8R,gBAAAnF,GACAsS,GACArmB,EAAAoa,EAAA7f,EAAA4f,EAAAna,EACAE,EAAAka,EAAAjS,EAAAgS,EAAAja,GAAAwY,EAAA,GAAA,EAAA,EAEAx6B,MAAAvB,KAAA,UAAA0pC,EACA,IAAAtR,GAAA5X,EAAAwE,OACArjB,KAAA,IAAA+nC,EAAArmB,EAAA,IAAAqmB,EAAAnmB,EAAA,IAAAmmB,EAAArmB,EAAA,IAAAqmB,EAAAnmB,GACAvU,MACAoxB,KAAA,OACAU,OAAA,UACAiG,YAAA,EACAqB,cAAA,QACAC,eAAA,QACAQ,QAAA,IAEAtnC,MAAAvB,KAAA,UAAAo4B,IAEA,WACA3U,aAAAliB,KAAAvB,KAAA,kBAEA,IAAA0B,GAAAsB,EAAAogC,iBAAAH,EAAA9/B,KACAzB,KACAA,EAAAjC,EAAAoqC,aACAnoC,EAAAyB,KAAA8/B,EAAA9/B,KACAzB,EAAAyhC,YAAAF,EACAjgC,EAAA8mC,YAAApoC,GAGA,IAAAqoC,GAAAxoC,KAAAvB,KAAA,cACA,IAAA+pC,EAAA,CACA,GAAA1f,GAAA7J,EAAAvgB,MAAAkF,WAAA4kC,EAAA/6B,KAAA,aACA,IAAA+6B,EAAAh7B,OAAA,OAAA2T,SAAA,SAQA2H,IAAA1nB,EAAAshB,aAAAoG,EAAA7mB,eAAAR,EAAAK,eACAzD,EAAAc,OACAE,MAAA,gBACAC,QAAA,WAAAwpB,EAAA7mB,eAAAL,KAAA,4CAAAR,EAAA+zB,aAAA1zB,EAAAK,aAAAG,gBAAA8J,KAAA,IAAA,YACAvM,MAAA,UAXA,IAAAspB,EAAA,CACA,GAAA+N,GAAA34B,EAAAuqC,gBACA5R,GAAAN,IAAAzN,EACA+N,EAAA12B,KAAAA,EACA8e,EAAAvgB,MAAAgqC,aAAA7R,GAaA2R,EAAAh7B,OAAA,OAAA6U,YAAA,qBACA,CACA,GAAAsmB,GAAA3oC,KAAAvB,KAAA,cACA,IAAAkqC,EAAA,CACA,IAAAA,EAAAn7B,OAAA,QAAA2T,SAAA,SAAA,CACA,GAAAynB,GAAAD,EAAAl7B,KAAA,aACAo7B,EAAA5pB,EAAAvgB,MAAAkF,WAAA+kC,EAAAloC,SAAAgN,KAAA,cACAq7B,EAAAD,EAAAlH,iBAAAiH,EACAE,KACAA,EAAA5qC,EAAAoqC,aACAQ,EAAAlnC,KAAAgnC,EACAE,EAAAlH,YAAAiH,EAAA5mC,eAAA0/B,iBAAAiH,GACAC,EAAAE,YAAAD,IAGA3nC,EACA4F,MACAnG,YAAA,yCACAC,WAAA,sBACA+Q,SACA+W,UAAAxoB,EACAyoB,QAAAkgB,KAGA7b,OAAA/kB,KAAA,SAAA8gB,GACA,GAAAA,EAAA,CACA,GAAA6N,GAAA34B,EAAAuqC,gBACA5R,GAAAN,IAAAvN,EACA6N,EAAA12B,KAAAA,EACA8e,EAAAvgB,MAAAgqC,aAAA7R,EAEA,IAAAmS,GAAA9qC,EAAAuqC,gBACAO,GAAAzS,IAAAvN,EACAggB,EAAA7oC,KAAA2oC,EACA7pB,EAAAvgB,MAAAgqC,aAAAM,MAIAL,EAAAn7B,OAAA,QAAA6U,YAAA,kBAIAriB,KAAAvB,KAAA,WAAAwB,SAEAD,KAAA4kC,WAAA,WACA5kC,KAAA4kC,WAAA,kBACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,aAGApyB,EAAAyM,EAAAwE,OACAjR,KAAA,EAAAgoB,EAAA,EAAAkH,EAAA9/B,KAAA+I,OAAA,EAAA,IACA8C,MACAoxB,KAAA,QACAx/B,MAAAqiC,EAAA9/B,OAEA6K,OAAAixB,KAAAh3B,MAAA,UAAAg7B,EAAA9/B,KAAA,YAEA2Q,GAAA0M,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,gBACA2J,YAAAvH,EAAA9/B,OAEA6K,OAAAy7B,GACAz7B,OAAA+F,GACA4X,UAAA,IAAA4Y,EAAA,IAAAgF,GAEAnS,EAAAppB,OAAA8F,GAEAy1B,GAAAxN,IAGA/4B,EAAAQ,eAAA64B,SAAAh4B,MAAAuB,QAAA,SAAAq9B,GACA,GAAAwG,GAAAjpB,EAAAwE,OACA8hB,MAAA,EAAA,EAAA,GAAA/K,EAAA,GAAA,GACA/sB,MACAoxB,KAAA,UACAU,OAAA,UACAiG,YAAA,IAEAuB,UAAA,WACA/mC,KAAAyN,MAAA+3B,YAAA,MAEAwB,SAAA,WACAhnC,KAAAyN,MAAA+3B,YAAA,MAEAzH,UAAA,SAAAh6B,GACAA,EAAAkhC,cAAA,IAEAG,WAAA,SAAArhC,GACAA,EAAAkhC,cAAA,IAEAJ,KACA,SAAAR,EAAAvB,EAAA6D,EAAAC,GACA,GAAAuB,GAAAnoC,KAAAvB,KAAA,WACA09B,GACAra,EAAA,EACAE,EAAA,EAEAmmB,GAAArmB,EAAAqmB,EAAArmB,EAAAuiB,EACAlI,EAAAra,EAAAqmB,EAAArmB,EAAAuiB,GAAA8D,EAAArmB,GAAAqmB,EAAArmB,EAAAuiB,IAAA,EAEAlI,EAAAra,EAAAqmB,EAAArmB,GAAAqmB,EAAArmB,EAAAuiB,EAAA8D,EAAArmB,GAAA,EAGAqa,EAAAna,GAAAmmB,EAAAnmB,GAAAmmB,EAAAnmB,EAAA8gB,EAAAqF,EAAAnmB,EAAAmmB,EAAAnmB,EAAA8gB,GAAA,GACA9iC,KAAAvB,KAAA,WAAAgP,MACAg5B,EAAA,IAAA0B,EAAArmB,EAAA,IAAAqmB,EAAAnmB,EAAA,KAAAma,EAAAra,EAAA,IAAAqa,EAAAna,EAAA,KAAAmmB,EAAArmB,EAAAuiB,GAAA,KAAA8D,EAAAnmB,EAAA8gB,KAGA5gB,aAAAliB,KAAAvB,KAAA,kBACA,IAAAq9B,GAAA97B,KAAAvB,KAAA,cACAq9B,IACAA,EAAAtuB,OAAA,QAAA6U,YAAA,gBAEA,IAAA0Z,GAAA/7B,KAAAvB,KAAA,cACAs9B,IACAA,EAAAvuB,OAAA,OAAA6U,YAAA,gBAGA,IAAAF,GAAAG,WAAA,WACA,GAAAkH,GAAAN,EAAAa,iBAAA4c,EAAAC,GACA9K,EAAA7c,EAAAukB,eAAAha,EAAA1H,EAAA0H,EAAAxH,EACA,IAAA8Z,EACA97B,KAAAvB,KAAA,cAAA,MACAuB,KAAAvB,KAAA,cAAAq9B,GACAA,EAAA3a,SAAA,YACA2a,EAAAtuB,OAAA,QAAAiV,SAAA,iBAEAqZ,EAAAtuB,OAAA,QAAAiV,SAAA,eAEA,CACAziB,KAAAvB,KAAA,cAAA,KACA,IAAAs9B,GAAA9c,EAAAokB,eAAA8E,EAAArmB,EAAAuiB,EAAA8D,EAAAnmB,EAAA8gB,EACA,IAAA/G,EAAA,CACA/7B,KAAAvB,KAAA,cAAAs9B,EACA,IAAAsM,GAAAtM,EAAAvuB,OAAA,MACA66B,GAAA5lB,SAAA,UAEA,IAAAqG,GAAA7J,EAAAvgB,MAAAkF,WAAAm4B,EAAAtuB,KAAA,eACArM,EAAA2nB,eAAAtnB,EAAAkgC,iBAAAD,EAAA9/B,MAAAknB,IACA1nB,EAAAshB,aAAAoG,EAAA7mB,eAAAR,EAAAK,eACAumC,EAAA5lB,SAAA,aAGAziB,MAAAvB,KAAA,cAAA,QAGAkkB,KAAA3iB,MAAA,IACAA,MAAAvB,KAAA,iBAAA0jB,IAEA,WACA,GAAA+Z,GAAA4L,EAAA1d,YAAAC,YACA4R,EAAA/S,EAAA8R,gBAAAnF,GACAsS,GACArmB,EAAAoa,EAAA7f,EAAA4f,EAAAna,EACAE,EAAAka,EAAAjS,EAAAgS,EAAAja,GAAAwY,EAAA,GAAA,EAAA,EAEAx6B,MAAAvB,KAAA,UAAA0pC,EACA,IAAAtR,GAAA5X,EAAAwE,OACArjB,KAAA,IAAA+nC,EAAArmB,EAAA,IAAAqmB,EAAAnmB,EAAA,IAAAmmB,EAAArmB,EAAA,IAAAqmB,EAAAnmB,GACAvU,MACAoxB,KAAA,OACAU,OAAA,UACAiG,YAAA,EACAqB,cAAA,QACAC,eAAA,QACAQ,QAAA,IAEAtnC,MAAAvB,KAAA,UAAAo4B,IAEA,WACA3U,aAAAliB,KAAAvB,KAAA,kBAEA,IAAA0B,GAAAsB,EAAAkgC,iBAAAD,EAAA9/B,KACAzB,KACAA,EAAAjC,EAAAoqC,aACAnoC,EAAAyB,KAAA8/B,EAAA9/B,KACAzB,EAAAyhC,YAAAF,EACAjgC,EAAAsnC,YAAA5oC,GAGA,IAAAqoC,GAAAxoC,KAAAvB,KAAA,cACA,IAAA+pC,EAAA,CACA,GAAA1f,GAAA7J,EAAAvgB,MAAAkF,WAAA4kC,EAAA/6B,KAAA,aACA,IAAA+6B,EAAAh7B,OAAA,OAAA2T,SAAA,SAQA2H,IAAA1nB,EAAAshB,aAAAoG,EAAA7mB,eAAAR,EAAAK,eACAzD,EAAAc,OACAE,MAAA,gBACAC,QAAA,WAAAwpB,EAAA7mB,eAAAL,KAAA,4CAAAR,EAAA+zB,aAAA1zB,EAAAK,aAAAG,gBAAA8J,KAAA,IAAA,YACAvM,MAAA,UAXA,IAAAspB,EAAA,CACA,GAAA+N,GAAA34B,EAAAuqC,gBACA5R,GAAAN,IAAAzN,EACA+N,EAAA12B,KAAAA,EACA8e,EAAAvgB,MAAAgqC,aAAA7R,GAaA2R,EAAAh7B,OAAA,OAAA6U,YAAA,qBACA,CACA,GAAAsmB,GAAA3oC,KAAAvB,KAAA,cACA,IAAAkqC,EAAA,CACA,IAAAA,EAAAn7B,OAAA,QAAA2T,SAAA,SAAA,CACA,GAAAynB,GAAAD,EAAAl7B,KAAA,aACAo7B,EAAA5pB,EAAAvgB,MAAAkF,WAAA+kC,EAAAloC,SAAAgN,KAAA,cACAq7B,EAAAD,EAAAhH,iBAAA+G,EACAE,KACAA,EAAA5qC,EAAAoqC,aACAQ,EAAAlnC,KAAAgnC,EACAE,EAAAlH,YAAAiH,EAAA5mC,eAAA4/B,iBAAA+G,GACAC,EAAAN,YAAAO,IAGA3nC,EACA4F,MACAnG,YAAA,yCACAC,WAAA,sBACA+Q,SACA+W,UAAAxoB,EACAyoB,QAAAkgB,KAGA7b,OAAA/kB,KAAA,SAAA8gB,GACA,GAAAA,EAAA,CACA,GAAA6N,GAAA34B,EAAAuqC,gBACA5R,GAAAN,IAAAvN,EACA6N,EAAA12B,KAAAA,EACA8e,EAAAvgB,MAAAgqC,aAAA7R,EAEA,IAAAmS,GAAA9qC,EAAAuqC,gBACAO,GAAAzS,IAAAvN,EACAggB,EAAA7oC,KAAA2oC,EACA7pB,EAAAvgB,MAAAgqC,aAAAM,MAIAL,EAAAn7B,OAAA,QAAA6U,YAAA,kBAIAriB,KAAAvB,KAAA,WAAAwB,SAEAD,KAAA4kC,WAAA,WACA5kC,KAAA4kC,WAAA,kBACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,aAGApyB,EAAAyM,EAAAwE,OACAjR,MAAA,EAAAgoB,EAAA,EAAAkH,EAAA9/B,KAAA+I,OAAA,EAAA,IACA8C,MACAoxB,KAAA,QACAC,WAAA,MACAz/B,MAAAqiC,EAAA9/B,OAEA6K,OAAAixB,KAAAh3B,MAAA,UAAAg7B,EAAA9/B,KAAA,YAEAkmC,GAAA7oB,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,gBACA2J,YAAAvH,EAAA9/B,OAEA6K,OAAAy7B,GACAz7B,OAAA+F,GACA4X,UAAA,KAAAuY,EAAAK,GAAA,IAAAiF,GAEApS,EAAAppB,OAAAq7B,GAEAG,GAAAzN,IAGA3E,EAAAjI,WAAAnsB,GACA0oB,YACA0Z,UAAA,WACA,GAAAziB,GAAArc,SAAAsc,eAAA,mBACArhB,MAAAvB,KAAA,UACA6iB,KAAAF,EAAAG,WACAR,IAAAK,EAAAI,cAGAwjB,cAAA,WACA,GAAAL,GAAA5oB,SAEA/b,MAAAvB,KAAA,aAAAgD,EAAAK,cACAL,EAAAK,aAAAonC,iBAAAznC,EAGA,IAAAo+B,GAAA,SAAA1/B,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,iBAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAAxf,EAAAigB,OAKAljC,GAAAo5B,SAAA/3B,MAAAuB,QAAAw7B,GACAp+B,EAAAq5B,SAAAh4B,MAAAuB,QAAAw7B,KAEAuE,SAAA,SAAAC,EAAAvB,EAAA/gB,EAAAE,GACA,GAAA0iB,GAAA5oB,SAGAmG,cAAAliB,KAAAvB,KAAA,eACA,IAAAukB,GAAAhjB,KAAAvB,KAAA,cACAukB,IACAA,EAAAxV,OAAA,OAAA6U,YAAA,gBAGA,IAAAF,GAAAG,WAAA,WACA,GAAA3O,GAAA3T,KAAAvB,KAAA,UACAukB,EAAA/D,EAAAsD,eAAAR,EAAApO,EAAA2N,KAAAW,EAAAtO,EAAAoN,IAAAtf,EAAArB,OACA4iB,IACAhjB,KAAAvB,KAAA,cAAAukB,GACAA,EAAAxV,OAAA,OAAAiV,SAAA,YAEAziB,KAAAvB,KAAA,cAAA,OAEAkkB,KAAA3iB,MAAA,IACAA,MAAAvB,KAAA,cAAA0jB,EAGA,IAAA0d,GAAA,SAAA1/B,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,aAAAylC,MAAAxf,EAAAigB,KAIAljC,GAAAo5B,SAAA/3B,MAAAuB,QAAAw7B,GACAp+B,EAAAq5B,SAAAh4B,MAAAuB,QAAAw7B,KAEA6E,QAAA,WACA,GAAAtiB,GAAApiB,KAAAvB,KAAA,cACA2jB,IAEAA,EAAA5U,OAAA,OAAA6U,YAAA,iBAEAwT,EAAA51B,SACAgf,EAAAvgB,MAAAkF,WAAAwe,EAAA3U,KAAA,cAAAuD,cAAAvP,KAGAo0B,EAAA51B,SACAD,KAAAvB,KAAA,cAAAuS,cAAAvP,IAGAygB,aAAAliB,KAAAvB,KAAA,gBAEAuB,KAAA4kC,WAAA,cACA5kC,KAAA4kC,WAAA,UACA5kC,KAAA4kC,WAAA,eACA5kC,KAAA4kC,WAAA,gBAGA,IAAAhiC,GAAA1C,EAAAsF,UAAA,wBAAA/D,EAAAK,aAAA1B,OAAA,kBAAAqD,MACA4gC,GAAAnkC,EAAAsN,OAAA,OAAAu1B,KAAA,SAAAJ,GAAA,EACAG,EAAAxI,CASA,OARA13B,GAAAyB,QAAA,SAAAoB,GACAq9B,GAAAr9B,EAAA+H,OAAA,OAAAu1B,KAAA,UAAA,KAEAlN,EAAAzL,UAAA,IAAAia,EAAA,IAAAvB,GACA5iC,EAAAuM,OAAAopB,GAEA5W,EAAAkgB,eAAA19B,GAEAo0B,MCjjBAj4B,QAAAC,OAAA,aACAgU,QAAA,mBAAA,eAAA,UAAA,OAAA,iBAAA,SAAAzQ,EAAA8nB,EAAA9c,EAAAquB,GACA,MAAA,UAAAxb,EAAAxd,GACAwd,EAAAwhB,aAAAh/B,EAAArB,QACA8oB,EAAAkT,cAAAnd,EAAAvgB,MAEA,IAAAukC,GAAAhkB,EAAAwE,OACA4b,OAAA,EAAA,EAAA5E,GACAhtB,MACAoxB,KAAA,UACAU,OAAAnzB,EAAA2B,SAAAtM,EAAAqL,SAAA,OAAA,OACA04B,YAAA,EACAlG,MAAAl+B,EAAAkB,WAAAb,GAAA,cAAA,KACA6lC,QAAA,IACAjoC,MAAAoC,EAAAG,KAAA,KAAAH,EAAAQ,eAAAL,OAoBAsN,EAAA+P,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,gBACA0B,YAAAv/B,EAAArB,SAEAqM,OAAAw2B,GAGArV,WAAAnsB,GACA0oB,YACAia,SAAA,WACA,GAAAO,GAAA5oB,SACAta,GAAA2pB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GAEA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,GAAAjmB,KAAA,eAAAylC,MAAAxf,EAAAigB,OAGAD,QAAA,WACA,GAAAC,GAAA5oB,SAGAta,GAAA2pB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAnS,GAAAzF,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KACAskB,IACAA,EAAAjmB,KAAA,WAAA4F,QAAA,SAAA4/B,GACAA,EAAAC,MAAAxf,EAAAigB,SAKA1D,SAAAx/B,EAEAwhC,GACAkG,UAAA,SAAA9sB,EAAAsqB,EAAAC,GACA1kB,aAAAliB,KAAAvB,KAAA,YACA,IAAA0jB,GAAAG,WAAA,WACA,GACAwc,GAAAhd,EADA0H,EAAAN,EAAAa,iBAAA4c,EAAAC,EAAA,GAEAtL,EAAArc,EAAAwE,OAAA0X,UAAAG,KACA9R,GAAA1H,EAAAwZ,EAAA,GACAxZ,IAAA,EAAA2Y,GACAqE,EAAA,QAEAhd,EAAA,EAAA2Y,EACAqE,EAAA,QAEA,IAAApa,GAAAxV,EAAA1B,OAAA,QACAkX,GACAA,EAAAjX,MAAAqU,EAAAA,EAAAgd,WAAAA,IAEA5vB,EAAAzC,OAAAwS,EAAAwE,OACAjR,KAAAsP,EAAA,EAAArgB,EAAAG,KAAA,KAAAH,EAAAQ,eAAAL,MACA6L,MACAoxB,KAAAzyB,EAAA2B,SAAAtM,EAAAqL,SAAA,OAAA,OACAgyB,WAAAA,EACAQ,MAAA,WAGA,IACAt/B,MAAAvB,KAAA,WAAA0jB,KAEA6kB,SAAA,WACA9kB,aAAAliB,KAAAvB,KAAA,YACA,IAAAimB,GAAAxV,EAAA1B,OAAA,QACAkX,IACAA,EAAAzkB,WAIAgf,EAAAkgB,eAAA19B,OCzGA7D,QAAAC,OAAA,aACAgU,QAAA,mBAAA,UAAA,iBAAA,SAAAqX,EAAAuR,GACA,MAAA,UAAAxb,EAAA4X,GACA,GAAAA,EAAAN,KAAAM,EAAA12B,KAAA,CACA,GAAA27B,GAAA7c,EAAAwE,OAAAjW,OAAA,oBAAAqpB,EAAA12B,KAAA2B,aAAA1B,OAAA,uBAAAy2B,EAAA12B,KAAAyB,KAAA,MACAm6B,EAAA9c,EAAAwE,OAAAjW,OAAA,oBAAAqpB,EAAAN,IAAAn2B,OAAA,MACAgpC,EAAAnqB,EAAAwE,OAAAjW,OAAA,uBAAAqpB,EAAAz2B,OAAA,KAEA,IAAA07B,GAAAC,EAAA,CACA,GAAAsN,GAAAngB,EAAA2S,qBAAAC,EAAAC,EACA,IAAAqN,EAAA,CACAA,EAAA3qC,KAAA,SAAA4qC,EACA,IAAAC,GAAAF,EACA57B,OAAA,OACAC,MACAg5B,EAAA,IAAA4C,EAAAvgB,KAAAhH,EAAA,IAAAunB,EAAAvgB,KAAA9G,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,IAEAunB,EAAAD,EAAA5C,iBAAAjM,EAAA,EACA6O,GAAA77B,MAAAg5B,EAAA,IAAA8C,EAAAznB,EAAA,IAAAynB,EAAAvnB,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,QACA,CACA,GAAAwnB,GAAAvqB,EAAAwE,OACArjB,KAAA,IAAAipC,EAAAvgB,KAAAhH,EAAA,IAAAunB,EAAAvgB,KAAA9G,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,GACAvU,MACAoxB,KAAA,OACAU,OAAA,aAAA1I,EAAA12B,KAAA8oB,iBAAA,UAAA,UACAuc,YAAA,EACAqB,cAAA,QACAC,eAAA,QACAQ,QAAA,GACAhI,MAAA,OAEAyH,UAAA,WACA/mC,KAAAyN,MACA65B,QAAA,IACA9B,YAAA,MAGAwB,SAAA,WACAhnC,KAAAyN,MACA65B,QAAA,GACA9B,YAAA,MAIAiE,EAAAD,EAAA9C,iBAAAjM,EAAA,EACA+O,GAAA/7B,MAAAg5B,EAAA,IAAAgD,EAAA3nB,EAAA,IAAA2nB,EAAAznB,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,IAEA/C,EAAAwE,OACAzU,QACAvB,MACA6xB,MAAA,UACA0B,YAAAnK,EAAAz2B,SAEA3B,KAAA,SAAA4qC,GACA58B,OAAA+8B,GACA5b,aACAoX,cAAA,WACAhlC,KAAA2gB,SAAA1B,EAAAwE,UAEAqhB,YAAA,SAAAT,EAAAvB,GACA,GAAAuG,GAAArpC,KAAAvB,KAAA,UACAirC,EAAAL,EAAAvgB,KAAAhH,EAAAuiB,EACAsF,EAAAN,EAAAvgB,KAAA9G,EAAA8gB,CAEAuG,GAAAlpC,KAAA2hB,EAAA4nB,EACAL,EAAAlN,OAAAra,EAAA4nB,GAAAL,EAAAlpC,KAAA2hB,EAAA4nB,GAAA,EAEAL,EAAAlN,OAAAra,EAAAunB,EAAAlpC,KAAA2hB,GAAA4nB,EAAAL,EAAAlpC,KAAA2hB,GAAA,EAGAunB,EAAAlN,OAAAna,GAAAqnB,EAAAlpC,KAAA6hB,GAAA2nB,EAAAN,EAAAlpC,KAAA6hB,EAAA2nB,GAAA,GAEAH,EAAA/7B,MACAg5B,EAAA,IAAAiD,EAAA,IAAAC,EAAA,KAAAN,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,GAEA,IAAAwH,GAAAggB,EAAA9C,iBAAAjM,EAAA,EACA+O,GAAA/7B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAAqnB,EAAAlpC,KAAA2hB,EAAA,IAAAunB,EAAAlpC,KAAA6hB,MAEA+iB,UAAA,SAAAV,EAAAvB,GACA,GAAAuG,GAAArpC,KAAAvB,KAAA,UACAmrC,EAAAP,EAAAlpC,KAAA2hB,EAAAuiB,EACAwF,EAAAR,EAAAlpC,KAAA6hB,EAAA8gB,CAEA8G,GAAAP,EAAAvgB,KAAAhH,EACAunB,EAAAlN,OAAAra,EAAAunB,EAAAvgB,KAAAhH,GAAA8nB,EAAAP,EAAAvgB,KAAAhH,GAAA,EAEAunB,EAAAlN,OAAAra,EAAA8nB,GAAAP,EAAAvgB,KAAAhH,EAAA8nB,GAAA,EAGAP,EAAAlN,OAAAna,GAAA6nB,GAAAR,EAAAvgB,KAAA9G,EAAA6nB,EAAAR,EAAAvgB,KAAA9G,GAAA,GAEAwnB,EAAA/7B,MACAg5B,EAAA,IAAA4C,EAAAvgB,KAAAhH,EAAA,IAAAunB,EAAAvgB,KAAA9G,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAA4nB,EAAA,IAAAC,GAEA,IAAArgB,GAAAggB,EAAA9C,iBAAAjM,EAAA,EACA+O,GAAA/7B,MAAAg5B,EAAA,IAAAjd,EAAA1H,EAAA,IAAA0H,EAAAxH,EAAA,KAAAqnB,EAAAlN,OAAAra,EAAA,IAAAunB,EAAAlN,OAAAna,EAAA,IAAA4nB,EAAA,IAAAC,MAEAnF,QAAA,WACA,GAAA5I,GAAA7c,EAAAwE,OAAAjW,OACA,oBAAAqpB,EAAA12B,KAAA2B,aAAA1B,OAAA,uBACAy2B,EAAA12B,KAAAyB,KAAA,MACAm6B,EAAA9c,EAAAwE,OAAAjW,OAAA,oBAAAqpB,EAAAN,IAAAn2B,OAAA,KACAJ,MAAAvB,KAAA,SAAAyqB,EAAA2S,qBAAAC,EAAAC,aCtGAn+B,QAAAC,OAAA,aACAiN,UAAA,iBAAA,WACA,OACAg/B,QAAA,UACAz9B,KAAA,SAAArB,EAAAkf,EAAAwJ,EAAAqW,GACAA,EAAAC,SAAAxnC,KAAA,SAAAqJ,GACA,MAAAA,KAEAk+B,EAAAE,YAAAznC,KAAA,SAAAqJ,GACA,MAAAq+B,YAAAr+B,SCTA,WAMA,QAAAs+B,GAAAzf,EAAA9iB,EAAA1J,EAAAksC,GAqCA,QAAAhsB,GAAA/d,GACA,GAAAF,EAEAA,GADAE,EAAAF,MAAAE,EAAAF,KAAAuD,OAAA,EACAuf,SAAA5iB,EAAAF,KAAA,IAEA,UAAAE,EAAAgqC,SACA,GAEA,IAGA5rB,SAAAzW,IAAA,gBAAA3H,EAAAiqC,UACA7rB,SAAAzW,IAAA,gBAAA7H,GACAse,SAAAzW,IAAA,eAAA,WAAA3H,EAAAgqC,UACAE,EAAAlqC,EACAuH,EAAAI,IAAA,WAAA3H,EAAAoU,YAGA,QAAAwJ,KACA,MAAAssB,GAGA,QAAAC,KACA,MAAA9f,GAAA+f,KAAAC,sBAAA1e,UAAAG,OAGA,QAAAwe,GAAA3e,GACA,MAAAtB,GAAA+f,KAAAC,sBAAA97B,KAAAqd,sBAAAD,IACA9jB,KAAA,SAAAqX,GAUA,MATAA,GAAAtL,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAtS,KAAAuS,EAAAvS,MACA,EAEAsS,EAAAtS,KAAAuS,EAAAvS,KACA,EAEA,IAEA2d,EAAAxc,IAAA6nC,KAIA,QAAAC,GAAA7e,EAAApqB,GACA,MAAA8oB,GAAA+f,KAAAC,sBAAA97B,KAAAsd,yBAAAF,EAAApqB,IACAsG,KAAA,SAAAqX,GACA,MAAAA,GAAAxc,IAAA6nC,KAIA,QAAAE,GAAA9e,EAAApqB,EAAAM,GACA,MAAAwoB,GAAA+f,KAAAC,sBAAAte,GAAAC,YAAAL,EAAApqB,EAAAM,IACAgG,KAAA,SAAAqd,GACA,MAAAA,GAAAxiB,IAAAgoC,KAIA,QAAAC,GAAAhf,EAAApqB,EAAAM,GACA,MAAAwoB,GAAA+f,KAAAC,sBAAAte,GAAAE,WAAAN,EAAApqB,EAAAM,IACAgG,KAAA,SAAAqd,GACA,MAAAA,GAAAxiB,IAAAgoC,KAIA,QAAAH,GAAAh8B,GACA,IACAA,EAAAlQ,MAAAG,EAAAE,oBAAA6P,EAAAlQ,OAAAM,IAAA,GACA4P,EAAA7M,KAAAkpC,EAAAr8B,EAAAlQ,OACAkQ,EAAA3E,YAAAihC,EAAAt8B,EAAAlQ,OACA,MAAAO,GACA2P,EAAAzP,MAAA,wBACAyP,EAAA7M,KAAAopC,EAAAv8B,EAAAlQ,OACAkQ,EAAA3E,YAAAmhC,EAAAx8B,EAAAlQ,OAEA,MAAAkQ,GAGA,QAAAm8B,GAAA3e,GACA,IACAA,EAAA1tB,MAAAG,EAAAE,oBAAAqtB,EAAA1tB,OAAAM,IAAA,GACA,MAAAC,GACAmtB,EAAAjtB,MAAA,wBAEA,MAAAitB,GAGA,QAAA6e,GAAAvsC,GACA,MAAA,yBAAAA,EAAAu2B,gBACA,OACA,8BAAAv2B,EAAAu2B,gBACA,YACA,4BAAAv2B,EAAAu2B,gBACA,UACA,0BAAAv2B,EAAAu2B,gBACA,QADA,OAKA,QAAAiW,GAAAxsC,GACA,GAAA62B,GAAA72B,EAAAiN,iBAAA,cACA,OAAA4pB,GACAA,EAAA1pB,MAEA,KAIA,QAAAs/B,GAAAzsC,GACA,MAAAA,GAAA4gC,MAAA1gB,WAAA,wBACA,OACAlgB,EAAA4gC,MAAA1gB,WAAA,6BACA,YACAlgB,EAAA4gC,MAAA1gB,WAAA,2BACA,UACAlgB,EAAA4gC,MAAA1gB,WAAA,yBACA,QADA,OAKA,QAAAwsB,GAAA1sC,GACA,GAAA2sC,GAAA3sC,EAAA4sC,SAAAxsB,KAAA,SAAAyW,GACA,MAAA,gBAAAA,EAAA3zB,MAEA,OAAAypC,GAAAA,EAAAx/B,MAAA,KA9JA,GAAA0+B,GAAA,KACA1rC,EAAAX,EAAAY,mBAGAysC,EAAA3jC,EAAA5I,IAAA,WACA,IAAAusC,EACA,IACAntB,EAAA,GAAAD,KAAAotB,IACA,MAAApX,GACA91B,aAAAc,OACAE,MAAA,mBACAC,QAAA,iEACAE,MAAA,UAIA4e,GAAA,GAAAD,KAAAisB,GAGA,QACAnsB,OAAAA,EACAG,OAAAA,EACAwsB,cAAAA,EACA5e,WACAG,IAAAqe,GAEA57B,MACAqd,sBAAA0e,EACAze,yBAAA2e,GAEAze,IACAC,YAAAye,EACAxe,WAAA0e,IAtCAptC,QAAAC,OAAA,aACAgU,QAAA,YAAAs4B,GAEAA,EAAA9e,SAAA,KAAA,UAAA,WAAA,2BCJAztB,QAAAC,OAAA,aACAiN,UAAA,kBAAA,UAAA,SAAA7M,GACA,OACA8M,SAAA,IACAC,OAAA,EACAqB,KAAA,SAAArB,EAAA0Z,GAKA,QAAA8mB,KACA9mB,EAAAjY,OAAA+rB,GAGA,QAAAiT,KACAjT,EAAAv4B,SATA,GAAAqc,GAAA,MAAAjS,KAAAC,MAAA,IAAAD,KAAAE,SAAA,GACAiuB,EAAA14B,OAAA,SAAAwc,GAAAA,EAAAgjB,MAAA,YAAA7yB,OACA3M,OAAA,OAAAw/B,MAAA,mBAAAoM,KAAA,qBAUA7mC,EAAA5G,EAAA0tC,sBAAAH,GACApoB,EAAAnlB,EAAA2tC,uBAAAH,EACAzgC,GAAAJ,IAAA,WAAA,WACA/F,IACAue,WCtBAxlB,QAAAC,OAAA,aACAgU,QAAA,UAAA,WACA,QAAAg6B,GAAA1gC,GACAnL,KAAAmL,IAAAA,EAkBA,MAfA0gC,GAAA55B,WACA65B,KAAA,SAAA5R,GACAh7B,QAAA6sC,IAAA/rC,KAAAmL,IAAA+uB,IAEA8R,MAAA,SAAA9R,GACAh7B,QAAA8sC,MAAAhsC,KAAAmL,IAAA+uB,IAEA/6B,MAAA,SAAA+6B,GACAh7B,QAAAC,MAAAa,KAAAmL,IAAA+uB,IAEA/yB,KAAA,SAAA+yB,GACAh7B,QAAAiI,KAAAnH,KAAAmL,IAAA+uB,KAIA,GAAA+R,kBAAA,GAAAJ,GAAA,cACAK,SAAAD,iBAAAE,UAAAC,mBAAA,GAAAP,GAAA,eACAI,iBAAAE,UAAAE,qBAAA,GAAAR,GAAA,iBACAI,iBAAAE,UAAAG,wBAAA,GAAAT,GAAA,2BCxBAjuC,QAAAC,OAAA,aACAgU,QAAA,WAAA,WACA,MAAA,IAAA06B,gBAAA16B,QAAA26B,wBCFA5uC,QAAAC,OAAA,aACAiN,UAAA,gBAAA,UAAA,SAAA7M,GACA,OACA8M,SAAA,IACA++B,QAAA,UACA9+B,OACAvJ,SAAA,YACAgrC,aAAA,iBAEApgC,KAAA,SAAArB,EAAA0Z,EAAAgP,EAAA5I,GACAA,EAAAkf,SAAAxnC,KAAA,SAAAqJ,GACA,GACA6Y,GADAhmB,EAAAT,EAAAW,UAGA,QAAAoM,EAAAyhC,gBACA,IAAA,OACA/nB,EAAAhmB,EAAA6R,cAAA1E,EACA,MACA,KAAA,QACA6Y,EAAAhmB,EAAA8R,eAAA3E,EACA,MACA,KAAA,UACA6Y,EAAAhmB,EAAA+R,aAAA5E,EACA,MACA,KAAA,YACA6Y,EAAA1Z,EAAAvJ,WAAAK,aAAA6O,mBAAA9E,GAiBA,MAbA6Y,GAEAA,EAAAtkB,SAAA4K,EAAAvJ,WAAArB,OAEA0qB,EAAA4hB,aAAA,iBAAA,GAGA5hB,EAAA4hB,aAAA,iBAAA,GAIA5hB,EAAA4hB,aAAA,iBAAA,GAEA7gC,SC1CAjO,QAAAC,OAAA,aACAgU,QAAA,aAAA,WAAA,eAAA,SAAA3T,EAAAkD,GACA,OAKAiM,iBAAA,SAAA5L,GAEAA,EAAA6L,WAAA7L,EAAA6L,YAAApP,EAAA05B,mBAAAC,qBAAA,OACAp2B,EAAAQ,eAAAsL,gBACA9L,EAAAQ,eAAAsL,eAAAipB,WACA1zB,MAAAuB,QAAA,SAAAoJ,GACA,GAAAE,EACA,IAAAvM,EAAA2M,SAAAN,EAAAqY,mBASA,CAGA,OAAA1kB,EAAAse,sBAAAje,EAAAQ,iBACA,IAAA,UACAR,EAAA2pB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAA,EAAA12B,OACAsB,EAAA4mB,2BAAAwO,EAAA12B,KAAA2B,aAAAA,aAAAF,MAAA,CACA,GAAAilB,GAAA3oB,EAAAyuC,0BACA9lB,GAAAjlB,KAAAi1B,EAAA12B,KAAA2B,aAAAA,aAAAF,KACAH,EAAAmrC,sBAAA/lB,KAIA,MAEA,KAAA,QACAplB,EAAA2mB,SAAAtlB,MAAAuB,QAAA,SAAAyK,GACA,IAAArN,EAAA4mB,2BAAAvZ,EAAAlN,MAAA,CACA,GAAAilB,GAAA3oB,EAAAyuC,0BACA9lB,GAAAjlB,KAAAkN,EAAAlN,KACAH,EAAAmrC,sBAAA/lB,MAMAplB,EAAAmlB,mBAAA9jB,MAAAuB,QAAA,SAAAwiB,GACAlZ,EAAAkZ,EAAAjZ,eAAAH,EAAA7L,MACA+L,IACAA,EAAAzP,EAAA0N,cACA+B,EAAA/L,KAAA6L,EAAA7L,KACA+L,EAAA9B,MAAA4B,EAAAO,aACA6Y,EAAA7B,UAAArX,UAxCAA,GAAAlM,EAAA6L,WAAAM,eAAAH,EAAA7L,MACA+L,IACAA,EAAAzP,EAAA0N,cACA+B,EAAA/L,KAAA6L,EAAA7L,KACA+L,EAAA9B,MAAA4B,EAAAO,aACAvM,EAAA6L,WAAA0X,UAAArX,OA+CA4c,yBAAA,SAAA9oB,GACAA,EAAAQ,eAAAsL,gBACA9L,EAAAQ,eAAAsL,eAAAipB,WACA1zB,MAAAuB,QAAA,SAAAoJ,GACA,GAAAE,EACA,IAAAvM,EAAA2M,SAAAN,EAAAqY,mBAAA,CAGA,OAAA1kB,EAAAse,sBAAAje,EAAAQ,iBACA,IAAA,UACAR,EAAA2pB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA,GAAAA,EAAA12B,OACAsB,EAAA4mB,2BAAAwO,EAAA12B,KAAA2B,aAAAA,aAAAF,MAAA,CACA,GAAAilB,GAAA3oB,EAAAyuC,0BACA9lB,GAAAjlB,KAAAi1B,EAAA12B,KAAA2B,aAAAA,aAAAF,KACAH,EAAAmrC,sBAAA/lB,KAIA,MAEA,KAAA,QACAplB,EAAA2mB,SAAAtlB,MAAAuB,QAAA,SAAAyK,GACA,IAAArN,EAAA4mB,2BAAAvZ,EAAAlN,MAAA,CACA,GAAAilB,GAAA3oB,EAAAyuC,0BACA9lB,GAAAjlB,KAAAkN,EAAAlN,KACAH,EAAAmrC,sBAAA/lB,MAMAplB,EAAAmlB,mBAAA9jB,MAAAuB,QAAA,SAAAwiB,GACAlZ,EAAAkZ,EAAAjZ,eAAAH,EAAA7L,MACA+L,IACAA,EAAAzP,EAAA0N,cACA+B,EAAA/L,KAAA6L,EAAA7L,KACA+L,EAAA9B,MAAA4B,EAAAO,aACA6Y,EAAA7B,UAAArX,cC1GA/P,QAAAC,OAAA,aAAAgU,QAAA,WAAA,WAAA,WAAA,eAAA,YAAA,KAAA,eAAA,eAAA,aAAA,eAAA,UAAA,iBAAA,eAAA,SAAA5Q,EAAA/C,EAAAkD,EAAA+K,EAAA8S,EAAA5gB,EAAA6gB,EAAAiK,EAAAwL,EAAA1pB,EAAAwvB,EAAAC,GACA,QAAAmS,GAAAppB,GAKA,MAAA,UAAAqpB,GAKA,QAAAC,GAAAj+B,GACAA,EAAAjM,WAAAC,MAAAuB,QAAA,SAAAwxB,GACAA,EAAAgF,SAAA/3B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAwE,QACAxE,EAAAigB,cAAArI,OAIAhB,EAAAiF,SAAAh4B,MAAAuB,QAAA,SAAAlE,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAwE,QACAxE,EAAAigB,cAAArI,SAKA/nB,EAAAzL,OAAAP,MAAAuB,QAAA,SAAA2K,GACAiQ,EAAAwE,QACAxE,EAAA8f,gBAAA/vB,EAAAF;GAGAA,EAAA6Y,MAAA7kB,MAAAuB,QAAA0oC,GA1BA,GAAAlmB,GACA8Y,CACAlc,GAAAupB,6BA2BA,oBAAAF,EAAAG,sBAAA,aAAAH,EAAAG,sBACAxpB,EAAAupB,2BAAA,QAGA,KACA,GAAAF,EAAAI,QAAAX,eAAAY,SAAAC,IAAAhhC,KAAAihC,WAAAC,OAAAC,OAEA,MAAAT,EAAA/L,aACA,SAAA+L,EAAAG,sBAAA,UAAAH,EAAAG,sBAAA,WAAAH,EAAAG,sBACAhuB,EAAAwE,QACAxE,EAAAugB,eAAAsN,EAAAU,OAAAV,EAAAW,gBAEAhqB,EAAAupB,2BAAA,aACA,cAAAF,EAAAG,sBACAhuB,EAAAwE,QACAxE,EAAAghB,cAAA6M,EAAAW,gBAIA,UAAAX,EAAAG,sBAAA,eAAAH,EAAAG,sBACAhuB,EAAAwE,QACAxE,EAAAugB,eAAAsN,EAAAU,OAAAV,EAAAW,gBAEAhqB,EAAAupB,2BAAA,aAEA,WAAAF,EAAAG,sBAEAhuB,EAAAwE,QACAxE,EAAA6gB,gBAAAgN,EAAAW,eAAAX,EAAA/L,cAEAla,EAAAimB,EAAAjhC,MAAAwc,2BAAAykB,EAAAU,OAAA5rC,MACAilB,GACAA,EAAAld,UAEA,aAAAmjC,EAAAG,sBACA,SAAAH,EAAAU,OAAAvkB,kBACA6jB,EAAAU,OAAA5mB,mBAAA9jB,MAAAuB,QAAA,SAAAshB,GAIA,IAAA,GAHA+nB,IAAA,EAGAlqC,EAAA,EAAAA,EAAAspC,EAAAU,OAAApiB,SAAA1jB,OAAAlE,IAAA,CACA,GAAAqzB,GAAAiW,EAAAU,OAAApiB,SAAApsB,IAAAwE,EACA,IAAAqzB,EAAA12B,MACA02B,EAAA12B,KAAA2B,aAAAA,aAAAF,OAAA+jB,EAAA/jB,KAAA,CACA8rC,GAAA,CACA,QAKAA,GAEA/nB,EAAAhc,eAOA,IAAAmjC,EAAAI,QAAAX,eAAAY,SAAAC,IAAAhhC,KAAAihC,WAAAC,OAAAK,WAEA,GAAA,MAAAb,EAAA/L,aACA,OAAA+L,EAAAG,sBACA,IAAA,OACAhuB,EAAAwE,QACAxE,EAAA2hB,gBAEA,MAEA,KAAA,QACA3hB,EAAAwE,QACAxE,EAAAyhB,aAEA,MAEA,KAAA,SACAzhB,EAAAwE,QACAxE,EAAA0hB,cAEA,MAEA,KAAA,YACA1hB,EAAAwE,QACAxE,EAAA4hB,qBAKA,QAAAiM,EAAAG,sBACA,IAAA,SACAH,EAAAjhC,MAAA/I,MAAAuB,QAAA,SAAA2K,GACAiQ,EAAAwE,QACAxE,EAAA6gB,gBAAA9wB,EAAA5O,OAAA0sC,EAAA/L,aAEA,IAAAla,GAAA7X,EAAAqZ,2BAAAykB,EAAAU,OAAA5rC,KACAilB,IACAA,EAAAld,UAGA,MAEA,KAAA,WACAmjC,EAAAjhC,MAAA/I,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAwE,QACAxE,EAAAghB,cAAApJ,EAAAz2B,QAEAy2B,EAAAN,KAAAM,EAAA12B,MACA02B,EAAAltB,eAUA,IAAAmjC,EAAAI,QAAAX,eAAAY,SAAAC,IAAAhhC,KAAAihC,WAAAC,OAAAM,IAEA,GAAA,MAAAd,EAAA/L,aACA,OAAA+L,EAAAG,sBACA,IAAA,OAEAhuB,EAAAwE,QACAxE,EAAA7O,cAAA08B,EAAAjhC,MAEA,MAEA,KAAA,QACA,IAAA,QAEAoT,EAAAwE,SACAxE,EAAA+f,WAAA8N,EAAAjhC,OACA8zB,EAAAv+B,EAAAg1B,eAAA0W,EAAAjhC,OACA8zB,GACA1gB,EAAAygB,YAAAC,EAAAv/B,QAGA,MAEA,KAAA,SAEA6e,EAAAwE,QACAxE,EAAA9O,YAAA28B,EAAAjhC,MAEA,MAEA,KAAA,YAEAoT,EAAAwE,QACAxE,EAAAigB,cAAA4N,EAAAjhC,WAKA,QAAAihC,EAAAG,sBACA,IAAA,SAEAhuB,EAAAwE,QACAxE,EAAA8f,gBAAA+N,EAAAjhC,MAAAihC,EAAAU,OAEA,MAEA,KAAA,aAEAvuB,EAAAwE,QACAxE,EAAAggB,gBAAA6N,EAAAjhC,OAGA8zB,EAAAv+B,EAAAg1B,eAAA0W,EAAAjhC,OACAoT,EAAAwE,QACAxE,EAAAygB,YAAAC,EAAAv/B,QAEA2sC,EAAApN,EACA,MAEA,KAAA,QAEA1gB,EAAAwE,QACAxE,EAAA+f,WAAA8N,EAAAjhC,OAIAihC,EAAAjhC,MAAAhJ,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA5W,EAAAwE,QACAxE,EAAAggB,gBAAApJ,KAGAiX,EAAAjhC,MAAA8b,MAAA7kB,MAAAmR,KAAA,SAAAC,EAAAC,GAEA,MAAA/S,GAAAo0B,kBAAArhB,GAAA/S,EAAAo0B,kBAAAthB,KACA7P,QAAA,QAAAwpC,GAAAC,GACA7uB,EAAAwE,QACAxE,EAAA+f,WAAA8O,GAEAA,EAAAjrC,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA5W,EAAAwE,QACAxE,EAAAggB,gBAAApJ,KAGAiY,EAAAnmB,MAAA7kB,MAAAuB,QAAAwpC,KAGAlO,EAAAv+B,EAAAg1B,eAAA0W,EAAAU,QACAvuB,EAAAwE,QACAxE,EAAAygB,YAAAC,EAAAv/B,QAEA2sC,EAAApN,EACA,MAEA,KAAA,WAEAxzB,EAAAoe,yBAAAuiB,EAAAU,QACA/pB,EAAAupB,2BAAA,WACA,MAEA,KAAA,WACAvpB,EAAAupB,2BAAA,WACA,MAEA,KAAA,WACAF,EAAAjhC,MAAAjK,OAAAunB,GAAA,UAAA2jB,EAAAU,OAAAvkB,kBACAhK,EAAAwE,QACAxE,EAAA8iB,WAAA+K,EAAAU,OAAApsC,EAAA2M,SAAA++B,EAAAjhC,MAAAA,YAOA,IAAAihC,EAAAI,QAAAX,eAAAY,SAAAC,IAAAhhC,KAAAihC,WAAAC,OAAAS,IACA,OAAAjB,EAAAG,sBACA,IAAA,OAEA,UAAAH,EAAAU,OAAAvkB,mBAEA6jB,EAAAU,OAAAnqC,OAAAP,MAAAuB,QAAA,SAAA2K,GACA6X,EAAA7X,EAAAqZ,2BAAAykB,EAAAW,gBACA5mB,IACAA,EAAAjlB,KAAAkrC,EAAAU,OAAA5rC,QAIAkrC,EAAAU,OAAA3qC,WAAAC,MAAAuB,QAAA,SAAAwxB,GACA,QAAAmY,GAAA7tC,GACAA,EAAAirB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACAA,EAAAN,MACA1P,EAAAgQ,EAAAN,IAAAlO,2BAAAykB,EAAAW,gBACA5mB,IACAA,EAAAjlB,KAAAkrC,EAAAU,OAAA5rC,SAMAi0B,EAAAgF,SAAA/3B,MAAAuB,QAAA2pC,GACAnY,EAAAiF,SAAAh4B,MAAAuB,QAAA2pC,MAGA/uB,EAAAwE,QACAxE,EAAA6hB,eAAAgM,EAAA/L,aAAA+L,EAAAU,OAEA,MAEA,KAAA,QAEA,aAAAV,EAAAU,OAAAvkB,kBAAA6jB,EAAAU,OAAA5rC,OAAAsd,GACAD,EAAAwE,QACAxE,EAAAqiB,eAAAwL,EAAAU,OAAA1rC,cAEA,UAAAgrC,EAAAU,OAAA1rC,aAAAmnB,iBACA8jB,EAAAD,EAAAU,OAAA1rC,cACA,WAAAgrC,EAAAU,OAAA1rC,aAAAmnB,iBACA6jB,EAAAU,OAAA1rC,aAAAsmB,SAAAtlB,MAAAuB,QAAA,SAAAyK,GACAmQ,EAAAwE,QACAxE,EAAA8f,gBAAA+N,EAAAU,OAAA1rC,aAAAgN,KAGA,SAAAg+B,EAAAU,OAAA1rC,aAAAmnB,kBACA6jB,EAAAU,OAAA1rC,aAAAspB,SAAAtoB,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAwE,QACAxE,EAAAigB,cAAArI,MAIA,aAAAiW,EAAAU,OAAAvkB,kBAAA6jB,EAAAU,OAAA5rC,OAAAunB,EAEA,UAAA2jB,EAAAU,OAAA1rC,aAAAmnB,kBACAhK,EAAAwE,QACAxE,EAAA8iB,WAAA+K,EAAAU,OAAA1rC,aAAAV,EAAA2M,SAAA++B,EAAAU,OAAA3hC,QAGA,eAAAihC,EAAAU,OAAA1rC,aAAAmnB,iBACAhK,EAAAwE,QACAxE,EAAAkgB,eAAA2N,EAAAU,OAAA1rC,aAAAA,cAEA,aAAAgrC,EAAAU,OAAAvkB,kBAAA6jB,EAAAU,OAAA5rC,OAAA+yB,GACAlR,EAAAupB,2BAAA,WAEA,MAEA,KAAA,UAEA/tB,EAAAwE,QACAxE,EAAA6hB,eAAAgM,EAAA/L,aAAA+L,EAAAU,OAEA,MAEA,KAAA,iBACA,GAAA,OAAAV,EAAAjhC,MACA,OAAAihC,EAAAU,OAAAvkB,kBACA,IAAA,aAEAhK,EAAAwE,QACAxE,EAAAsiB,yBAAAuL,EAAAU,OAAAV,EAAAW,kBAgBA,MAAAxuC,GACAZ,EAAAc,OACAE,MAAA,QACAC,QAAA,2BAEAJ,QAAAC,MAAAF,EAAAG,SAKA,QAAA6uC,KACAjuC,KAAAtB,MAAAR,EAAAgwC,sBAAArW,qBAAA,GACA35B,EAAAiwC,KAAAnuC,KAAAtB,OACAsB,KAAAwrC,sBACAxrC,KAAAyrC,uBACAzrC,KAAAouC,6BAAA,EACApuC,KAAAquC,wBACAruC,KAAAsuC,qBACAtuC,KAAAuuC,eACAC,eAAA3B,EAAA7sC,OAEAif,EAAA1f,SAAAS,KAAAtB,OAgRA,MA7QAuvC,GAAAh8B,WAKArT,SAAA,WACA,MAAAoB,MAAAtB,OAOAa,SAAA,SAAAb,EAAAwL,GACAlK,KAAAwrC,mBAAAnnC,QAAA,SAAA4/B,GACAA,MAEA3hB,WAAA,WACA,GAAAnjB,EACA,KACAsvC,iBAAA/vC,GACAsB,KAAAtB,MAAAA,EACAR,EAAAiwC,KAAAnuC,KAAAtB,OAEAsB,KAAAtB,MAAAgwC,qBAAA1uC,KAAAuuC,eAEAtvB,EAAA1f,SAAAb,GAEAsB,KAAA2uC,0BACA,MAAA1vC,GACAE,EAAAF,UAEAE,IACAD,QAAAC,MAAA,mDACAD,QAAAC,MAAAA,EAAAC,QAEAY,KAAAyrC,oBAAApnC,QAAA,SAAA4/B,GACAA,MAEA/5B,GACAjJ,EAAArD,QAAAgxC,KAAA,KAAA1mC,KAAA,WACAgC,EAAA/K,OAIAwjB,KAAA3iB,MAAA,KAOAqH,MAAA,SAAA3I,GACAsB,KAAAtB,MAAAmwC,wBAAA7uC,KAAAuuC,cACA,IAAAjnC,GAAApJ,EAAAqJ,oBACAD,GAAAD,MAAArH,KAAAtB,MAAAA,GAAA8I,QAAAxH,KAAAtB,OACAR,EAAAiwC,KAAAnuC,KAAAtB,OACAsB,KAAAtB,MAAAgwC,qBAAA1uC,KAAAuuC,eACAtvB,EAAA1f,SAAAS,KAAAtB,OACAsB,KAAA2jB,aAGAgoB,sBAAA,SAAA1H,GACA,GAAAj0B,GAAAhQ,KAAAwrC,mBAAAhpC,KAAAyhC,GAAA,CACA,OAAA,YACAjkC,KAAAwrC,mBAAApmC,OAAA4K,EAAA,IACA2S,KAAA3iB,OAGA4rC,uBAAA,SAAA3H,GACA,GAAAj0B,GAAAhQ,KAAAyrC,oBAAAjpC,KAAAyhC,GAAA,CACA,OAAA,YACAjkC,KAAAyrC,oBAAArmC,OAAA4K,EAAA,IACA2S,KAAA3iB,OASA8E,oBAAA,SAAAwX,EAAAwyB,GAMA,MALA9uC,MAAAsuC,kBAAAhyB,KACAtc,KAAAsuC,kBAAAhyB,OAEAtc,KAAAsuC,kBAAAhyB,GAAA9Z,KAAAssC,GAEA,WACA9uC,KAAAsuC,kBAAAhyB,IACAtc,KAAAsuC,kBAAAhyB,GAAAlX,OAAApF,KAAAsuC,kBAAAhyB,GAAAnX,QAAA2pC,GAAA,IAEAnsB,KAAA3iB,OAYAmjB,uBAAA,SAAA7G,EAAAwyB,EAAAC,GACA/uC,KAAAquC,qBAAA/xB,KACAtc,KAAAquC,qBAAA/xB,MAEA,IAAA3a,IACAotC,OAAAA,EACAD,SAAAA,EAIA,OAFA9uC,MAAAquC,qBAAA/xB,GAAA9Z,KAAAb,GAEA,WACA3B,KAAAquC,qBAAA/xB,IACAtc,KAAAquC,qBAAA/xB,GAAAlX,OAAApF,KAAAquC,qBAAA/xB,GAAAnX,QAAAxD,GAAA,IAEAghB,KAAA3iB,OAMAgtC,2BAAA,SAAAze,GACAvuB,KAAAouC,6BACAvuC,OAAAH,KAAAM,KAAAquC,sBAAAhqC,QAAA,SAAAiY,GACAtc,KAAAquC,qBAAA/xB,GAAAjY,QAAA,SAAA1C,GACAA,EAAAotC,OACAzyB,IAAAiS,GACA5sB,EAAAmtC,WAGAntC,EAAAmtC,cAGAnsB,KAAA3iB,QAIA2uC,wBAAA,WACA9uC,OAAAH,KAAAM,KAAAsuC,mBAAAjqC,QAAA,SAAAiY,GACAtc,KAAAsuC,kBAAAhyB,GAAAjY,QAAA,SAAAyqC,GACAA,OAEAnsB,KAAA3iB,QAGAgvC,4BAAA,WACAhvC,KAAAouC,6BAAA,GAGAa,2BAAA,WACAjvC,KAAAouC,6BAAA,GAGAc,mBAAA,WACA,GAAA5yB,EACA,KAAAA,IAAAtc,MAAAquC,2BACAruC,MAAAquC,qBAAA/xB,EAEA,KAAAA,IAAAtc,MAAAsuC,wBACAtuC,MAAAsuC,kBAAAhyB,IAIAvb,2BAAA,SAAAub,SACAtc,MAAAquC,qBAAA/xB,IAGA6yB,wBAAA,SAAA7yB,SACAtc,MAAAsuC,kBAAAhyB,IAOAsI,eAAA,WACA,QAAAqc,GAAAx/B,EAAAsR,GACA,GAAAwiB,GAAA9zB,EAAAkK,iBAAAuT,EACAqW,GAMAA,EAAA1pB,MAAAhD,KAAAC,UAAAiK,IALAwiB,EAAAr3B,EAAA0N,cACA2pB,EAAA3zB,KAAAsd,EACAqW,EAAA1pB,MAAAhD,KAAAC,UAAAiK,GACAtR,EAAAqK,YAAAypB,IAMA,GAAA6Z,GAAA1U,EAAA,EACA16B,MAAAtB,MAAA2E,OAAAP,MAAAuB,QAAA,SAAA2K,GACAiyB,EAAAjyB,GACA8S,EAAAstB,EACAptB,EAAA0Y,EAAA,KAEA0U,GAAA,EAAA1U,EAAA,IAGA,IAAA2U,GAAA5U,EAAA,EACAz6B,MAAAtB,MAAA4E,KAAAR,MAAAuB,QAAA,SAAAkyB,GACA0K,EAAA1K,GACAzU,EAAAutB,EACArtB,EAAA,MAEAqtB,GAAA,EAAA5U,EAAA,IAGA,IAAA6U,GAAA,EACAtvC,MAAAtB,MAAAyE,MAAAL,MAAAuB,QAAA,SAAAyK,GACA,IAAAA,EAAA5O,KAAA,CAEA,GAAAw1B,GAAAt0B,EAAAo0B,kBAAA1mB,EACAmyB,GAAAnyB,GACAgT,EAAAwtB,EACAttB,EAAA,MAEAstB,GAAA,IAAA,GAAA5Z,MAQA/R,UAAA,WACA1E,EAAAwE,SACAzjB,KAAAtB,MAAA4E,KAAAR,MAAAuB,QAAA,SAAA5C,GACAwd,EAAA7O,cAAA3O,KAGAzB,KAAAtB,MAAAyE,MAAAL,MAAAmR,KAAA,SAAAC,EAAAC,GAEA,MAAA/S,GAAAo0B,kBAAArhB,GAAA/S,EAAAo0B,kBAAAthB,KACA7P,QAAA,SAAA5C,GACAwd,EAAA+f,WAAAv9B,GACAA,EAAAoB,WAAAC,MAAAuB,QAAA,SAAA5C,GACAwd,EAAAggB,gBAAAx9B,OAIAzB,KAAAtB,MAAA2E,OAAAP,MAAAuB,QAAA,SAAA5C,GACAwd,EAAA9O,YAAA1O,GACAA,EAAA2mB,SAAAtlB,MAAAuB,QAAA,SAAAyK,GACAmQ,EAAA8f,gBAAAt9B,EAAAqN,OAIA9O,KAAAtB,MAAA6wC,UAAAzsC,MAAAuB,QAAA,SAAAwyB,GACA5X,EAAAigB,cAAArI,KAGA5X,EAAAykB,QACA1jC,KAAAtB,MAAA8O,OAAA,oBAAA2b,EAAA,KAAArmB,MAAAuB,QAAA,SAAAkxB,GACAtW,EAAA8iB,WAAAxM,EAAAzzB,aAAAV,EAAAuB,SAAA4yB,EAAAzzB,mBAQA4lB,eAAA,WAEA,OAAA,IAIA,GAAAumB,MCppBA,WAcA,QAAAuB,KAWA,QAAAzhC,GAAAJ,GACA,MAAA,SAAAA,GAAAA,KAAA,GAAAA,EAAA,EAXA,GAAAmd,GAAA9qB,IAKA,IAHA8qB,EAAAsV,UAAA,EACAtV,EAAA/c,SAAAA,EAEA+c,EAAAxd,YAAAwd,EAAAxd,WAAAxL,aAAA,CACA,GAAA6L,GAAAmd,EAAAxd,WAAAxL,aAAA6J,iBAAA,cACAmf,GAAAsV,SAAAzyB,GAAA,cAAAA,EAAA9B,OApBAjO,QAAAC,OAAA,aACAuR,UAAA,cACAxO,YAAA,4CACAwqB,UACAxpB,KAAA,IACA8xB,MAAA,IACApmB,WAAA,IACAmiC,SAAA,KAEA5uC,WAAA2uC,OCVA,WAUA,QAAAE,GAAAvxC,GAMA,QAAAk3B,GAAAjJ,GACA,GAAAiJ,EACA,IAAAjJ,EAAAiJ,SAEAA,EADA,OAAAjJ,EAAAiJ,SACA,aAEAjJ,EAAAiJ,aAGA,IAAAjJ,EAAAkJ,gBAAA,CACA,GAAAtiB,GAAAoZ,EAAAkJ,gBAAA,YAAAzpB,KAEAwpB,GADA,OAAAriB,EACA,aAEAA,EAIA,MAAAqiB,GAvBA,GAAAvK,GAAA9qB,IAEA8qB,GAAAK,QAAAhtB,EAAA8f,SACA6M,EAAAuK,SAAAA,EAbAz3B,QAAAC,OAAA,aACAuR,UAAA,WACAxO,YAAA,2CACAwqB,UAAA7F,IAAA,KACA1kB,WAAA6uC,IAGAA,EAAArkB,SAAA,gBCPAztB,QACAC,OAAA,aACAwnC,SAAA,UAAA,UACAA,SAAA,WAAA,sBACAA,SAAA,eAAA,gBACAA,SAAA,aAAA,cACAA,SAAA,UAAA,WACAA,SAAA,eAAA,gBACAA,SAAA,uBAAA,gCCTAznC,QAAAC,OAAA,aACAyC,QAAA,iBAAA,qBAAA,kBAAA,sBAAA,uBAAA,SAAAC,EAAAovC,EAAAC,EAAAC,EAAAC,GACAH,EAAAI,UAAA,KAEAxvC,EACAC,MAAA,OACAwvC,UAAA,EACA3vC,IAAA,kBACAK,OACAuvC,WACArvC,YAAA,yBACAC,WAAA,aACA2iB,aAAA,SAKAosB,EAAApd,SAAA,iHAEAqd,EAAAK,YACAC,WAAA,OAGAL,EAAAI,YACAE,SAAA,GACAC,gBAAA,EACA7wC,MAAA,MAGAif,SAAAzW,IAAA,SACAmmC,KAAA,cACAmC,IAAA,WAGA,WAAA1yC,QAAAC,OAAA,aAAAC,KAAA,iBAAA,SAAAyyC,GAAAA,EAAAC,IAAA,+BAAA,k8G/DqsUAD,EAAeC,IAAI,mCAAmC,4pBACtDD,EAAeC,IAAI,+BAA+B,k8BAClDD,EAAeC,IAAI,2BAA2B,63CAC9CD,EAAeC,IAAI,+BAA+B,i5BAClDD,EAAeC,IAAI,iCAAiC,umDACpDD,EAAeC,IAAI,qBAAqB,wjFACxCD,EAAeC,IAAI,yBAAyB,k/CAC5CD,EAAeC,IAAI,6BAA6B,ylCAChDD,EAAeC,IAAI,6BAA6B,43MAChDD,EAAeC,IAAI,2CAA2C;AAC9DD,EAAeC,IAAI,4CAA4C,41FAC/DD,EAAeC,IAAI,0CAA0C,6bAC7DD,EAAeC,IAAI,gDAAgD,gyCACnED,EAAeC,IAAI,mCAAmC,uqBACtDD,EAAeC,IAAI,8BAA8B,+LACjDD,EAAeC,IAAI,yCAAyC,ouDAC5DD,EAAeC,IAAI,qCAAqC,qlGACxDD,EAAeC,IAAI,kCAAkC,oqKACrDD,EAAeC,IAAI,uCAAuC,65EAC1DD,EAAeC,IAAI,yCAAyC,sYAC5DD,EAAeC,IAAI,kCAAkC,sxCACrDD,EAAeC,IAAI,4CAA4C,srCAC/DD,EAAeC,IAAI,0CAA0C,q4FAC7DD,EAAeC,IAAI,0CAA0C,gsNAC7DD,EAAeC,IAAI,sCAAsC","file":"app/app-235403518a.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc overview\n * @name editorApp\n * @description\n * # editorApp\n *\n * Main module of the application.\n */\nangular\n  .module('editorApp', [\n    'ngAnimate',\n    'ngTouch',\n    'ui.router',\n    'ui.bootstrap',\n    'ui.codemirror',\n    'ui-notification',\n    'cfp.hotkeys',\n    'ngDragDrop',\n    'hljs',\n    'infinite-scroll'\n  ])\n  .run(function ($rootScope, $stateParams, kEditor, kFactory, kRegistry, kWs, Notification, VERSION) {\n    $rootScope.VERSION = VERSION;\n\n    $rootScope.dndLoad = function (filename, data) {\n      var oldModel = kEditor.getModel();\n      var loader = kFactory.createJSONLoader();\n      var model;\n      try {\n        model = loader.loadModelFromString(data).get(0);\n      } catch (err) {\n        console.error('[app.dndLoad()] Error loading model file'); // eslint-disable-line\n        console.error(err.stack); // eslint-disable-line\n        Notification.error({\n          title: 'Open from file (dnd)',\n          message: 'Unable to load a model from <strong>' + filename + '</strong>'\n        });\n        kEditor.setModel(oldModel);\n        return;\n      }\n\n      kEditor.setModel(model, function (err) {\n        if (err) {\n          Notification.error({\n            title: 'Open from file (dnd)',\n            message: 'Unable to load model from <strong>' + filename + '</strong><br/>' + err.message,\n            delay: 15000\n          });\n        } else {\n          Notification.success({\n            title: 'Open from file (dnd)',\n            message: 'Model loaded from <strong>' + filename + '</strong>'\n          });\n        }\n      });\n    };\n\n    $rootScope.keys = function (obj) {\n      if (angular.isObject(obj)) {\n        return Object.keys(obj);\n      }\n      return false;\n    };\n\n    // fade out the loading container when bootstrap is done\n    jQuery('#bootstrap-container').fadeOut(function () {\n      this.remove();\n      if ($stateParams.host) {\n        kWs.getModel($stateParams.host, $stateParams.port || 9000, $stateParams.path || '', function (err, model, url) {\n          if (err) {\n            Notification.error({\n              title: 'Open from node',\n              message: 'Unable to load model from <strong>' + url + '</strong>'\n            });\n          } else {\n            kEditor.setModel(model);\n            Notification.success({\n              title: 'Open from node',\n              message: 'Model loaded from <strong>' + url + '</strong>'\n            });\n          }\n        });\n      }\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n\t.config(function ($stateProvider) {\n  $stateProvider\n\t\t\t.state('treeview', {\n  parent: 'app',\n  url: '/treeview',\n  views: {\n    'content@': {\n      templateUrl: 'app/treeview/treeview.html',\n      controller: 'TreeViewCtrl'\n    }\n  },\n  onExit: function (kEditor) {\n    kEditor.removeModelUpdateListeners('treeview');\n  }\n});\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:TreeViewCtrl\n * @description\n * # TreeViewCtrl\n * Controller of the editorApp treeview page\n */\nangular.module('editorApp').controller('TreeViewCtrl', function($scope, $timeout, $filter, $uibModal, kEditor, kModelHelper, kFactory, kWs, kFilterParser, saveFile, hotkeys, Notification) {\n  function transformComponentToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      kevsName: instance.eContainer().name + '.' + instance.name,\n      type: 'component',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformNodeToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'node',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      folded: kModelHelper.isFolded(instance),\n      selected: kModelHelper.isSelected(instance),\n      children: instance.components.array.map(transformComponentToTreeItem)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformGroupToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'group',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformChannelToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'channel',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformModelToTree(model) {\n    return model.nodes.array.map(transformNodeToTreeItem).concat(model.groups.array.map(transformGroupToTreeItem)).concat(model.hubs.array.map(transformChannelToTreeItem));\n  }\n\n  function expandItemByPath(path) {\n    for (var i = 0; i < $scope.items.length; i++) {\n      if ($scope.items[i].path === path) {\n        if ($scope.items[i].folded) {\n          $scope.items[i].folded = false;\n          kModelHelper.setFolded(kEditor.getModel().findByPath($scope.items[i].path), false);\n        }\n        return;\n      }\n    }\n  }\n\n  function processModel() {\n    $scope.nbInstances = 0;\n    $scope.selectedItems = [];\n    $scope.items = transformModelToTree(kEditor.getModel());\n  }\n\n  $scope.items = [];\n  $scope.limit = 30;\n  $scope.nbInstances = 0;\n  $scope.showTags = true;\n  $scope.selectedItems = [];\n  $scope.filterExpr = '';\n  $scope.filterComparator = false;\n  $scope.treeReverse = false;\n  $scope.query = null;\n\n  var unregister = kEditor.addNewModelListener('treeview', processModel);\n  processModel();\n\n  var ctrlPressed = false;\n  function onKeyDown(evt) {\n    ctrlPressed = evt.ctrlKey;\n  }\n\n  function onKeyUp(evt) {\n    ctrlPressed = evt.ctrlKey;\n  }\n\n  document.addEventListener('keydown', onKeyDown);\n  document.addEventListener('keyup', onKeyUp);\n\n  $scope.loadMore = function() {\n    if ($scope.items.length > $scope.limit) {\n      $scope.limit += 10;\n    }\n  };\n\n  $scope.onClick = function(item) {\n    var selected = item.selected;\n    if (!ctrlPressed) {\n      if (selected && $scope.selectedItems.length > 1 && $scope.selectedItems.indexOf(item) !== -1) {\n        selected = !selected;\n      }\n      $scope.selectedItems.forEach(function(item) {\n        kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), false);\n        item.selected = false;\n      });\n      $scope.selectedItems.length = 0;\n    }\n    kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), !selected);\n    item.selected = !selected;\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    } else {\n      $scope.selectedItems.splice($scope.selectedItems.indexOf(item), 1);\n    }\n  };\n\n  $scope.onExpand = function(item) {\n    item.folded = !item.folded;\n    kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), item.folded);\n  };\n\n  $scope.collapse = function() {\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        item.folded = true;\n        kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), true);\n      }\n    });\n  };\n\n  $scope.expand = function() {\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        item.folded = false;\n        kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), false);\n      }\n    });\n  };\n\n  $scope.selectAll = function() {\n    $scope.selectedItems.length = 0;\n    $scope.items.forEach(function(item) {\n      item.selected = true;\n      var instance = kEditor.getModel().findByPath(item.path);\n      kModelHelper.setSelected(instance, true);\n      $scope.selectedItems.push(item);\n      if (item.children) {\n        item.children.forEach(function(child) {\n          child.selected = true;\n          item.folded = false;\n          kModelHelper.setFolded(instance, false);\n          kModelHelper.setSelected(kEditor.getModel().findByPath(child.path), true);\n          $scope.selectedItems.push(child);\n        });\n      }\n    });\n  };\n\n  function selectByType(type) {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    $scope.items.forEach(function(item) {\n      if (item.type === type) {\n        item.selected = true;\n        $scope.selectedItems.push(item);\n        kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), true);\n      }\n    });\n  }\n\n  $scope.selectNodes = function() {\n    selectByType('node');\n  };\n\n  $scope.selectGroups = function() {\n    selectByType('group');\n  };\n\n  $scope.selectChannels = function() {\n    selectByType('channel');\n  };\n\n  $scope.selectComponents = function() {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        if (item.children) {\n          item.children.forEach(function(child) {\n            item.folded = false;\n            child.selected = true;\n            kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), false);\n            kModelHelper.setSelected(kEditor.getModel().findByPath(child.path), true);\n            $scope.selectedItems.push(child);\n          });\n        }\n      }\n    });\n  };\n\n  $scope.selectByTag = function(items) {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    items.forEach(function(item) {\n      item.selected = true;\n      $scope.selectedItems.push(item);\n      var instance = kEditor.getModel().findByPath(item.path);\n      kModelHelper.setSelected(instance, true);\n      if (item.type === 'component') {\n        expandItemByPath(instance.eContainer().path());\n      }\n    });\n  };\n\n  $scope.clearSelected = function() {\n    $scope.selectedItems.forEach(function clear(item) {\n      item.selected = false;\n      kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), false);\n      if (item.children) {\n        item.children.forEach(clear);\n      }\n    });\n    $scope.selectedItems.length = 0;\n  };\n\n  $scope.toggleTags = function() {\n    $scope.showTags = !$scope.showTags;\n  };\n\n  $scope.reverseSort = function() {\n    $scope.treeReverse = !$scope.treeReverse;\n  };\n\n  $scope.createItem = function(type, instance, parentNode) {\n    switch (type) {\n      case 'node':\n        $scope.items.push(transformNodeToTreeItem(instance));\n        break;\n\n      case 'group':\n        $scope.items.push(transformGroupToTreeItem(instance));\n        break;\n\n      case 'channel':\n        $scope.items.push(transformChannelToTreeItem(instance));\n        break;\n\n      case 'component':\n        for (var i = 0; i < $scope.items.length; i++) {\n          if ($scope.items[i].path === parentNode.path()) {\n            $scope.items[i].children.push(transformComponentToTreeItem(instance));\n            break;\n          }\n        }\n        break;\n    }\n  };\n\n  $scope.clearFilter = function() {\n    $scope.query = null;\n    $scope.filterExpr = '';\n    $scope.filterError = null;\n  };\n\n  var filterTimeout;\n  $scope.onFilterExprChanged = function() {\n    $timeout.cancel(filterTimeout);\n    filterTimeout = $timeout(function() {\n      $scope.parseFilterExpr();\n    }, 300);\n  };\n\n  $scope.parseFilterExpr = function() {\n    if ($scope.filterExpr.length === 0) {\n      $scope.query = null;\n      $scope.filterError = null;\n    } else {\n      try {\n        $scope.query = kFilterParser.parse($scope.filterExpr);\n        $scope.filterError = null;\n      } catch (err) {\n        $scope.query = null;\n        $scope.filterError = err.name + ': \"' + err.found + '\" at col.' + err.location.start.column;\n      }\n    }\n  };\n\n  $scope.open = function(evt) {\n    evt.preventDefault();\n\n    $scope.onFileLoaded = function(filename, data) {\n      $timeout(function() {\n        $scope.loading = true;\n        $timeout(function() {\n          var oldModel = kEditor.getModel();\n          try {\n            var loader = kFactory.createJSONLoader();\n            var model = loader.loadModelFromString(data).get(0);\n            kEditor.setModel(model);\n            Notification.success({\n              title: 'Open from file',\n              message: 'Model loaded from <strong>' + filename + '</strong>'\n            });\n          } catch (err) {\n\t\t\t\t\t\tconsole.warn('[treeview.controller.open()] Error loading model file'); // eslint-disable-line\n\t\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n            Notification.error({\n              title: 'Open from file',\n              message: 'Unable to load a model from <strong>' + filename + '</strong>'\n            });\n            kEditor.setModel(oldModel);\n          } finally {\n            $scope.loading = false;\n          }\n        });\n      });\n    };\n    jQuery('input#file').click();\n  };\n\n  $scope.merge = function(evt) {\n    evt.preventDefault();\n    $scope.onFileLoaded = function mergeModel(filename, data) {\n      $timeout(function() {\n        $scope.loading = true;\n        $timeout(function() {\n          try {\n            var loader = kFactory.createJSONLoader();\n            var compare = kFactory.createModelCompare();\n            var model = loader.loadModelFromString(data).get(0);\n            compare.merge(model, kEditor.getModel()).applyOn(model);\n            kEditor.setModel(model);\n            Notification.success({\n              title: 'Merge from file',\n              message: 'Model merged with <strong>' + filename + '</strong>'\n            });\n          } catch (err) {\n\t\t\t\t\t\tconsole.warn('[treeview.controller.merge()] Error loading model file'); // eslint-disable-line\n\t\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n            Notification.error({\n              title: 'Merge from file',\n              message: 'Unable to merge the model with <strong>' + filename + '</strong>'\n            });\n          } finally {\n            $scope.loading = false;\n          }\n        });\n      });\n    };\n    jQuery('input#file').click();\n  };\n\n  $scope.openFromNode = function(evt) {\n    evt.preventDefault();\n\n    $uibModal.open({\n      templateUrl: 'app/components/util/host-port-path.modal.html',\n      size: 'md',\n      controller: function($scope, $uibModalInstance, storage) {\n        $scope.title = 'Open from node';\n        $scope.action = 'Open';\n        $scope.host = storage.get('previous-host', '127.0.0.1');\n        $scope.port = 9000;\n        $scope.path = '/';\n\n        $scope.onHostChange = function (newVal) {\n          storage.set('previous-host', newVal);\n        };\n\n        $uibModalInstance.rendered.then(function() {\n          $timeout(function() {\n            jQuery('#host').focus();\n          }, 250);\n        });\n\n        $scope.confirm = function() {\n          $scope.closeError();\n\n          kWs.getModel($scope.host, $scope.port, $scope.path, function(err, model, url) {\n            if (err) {\n              $timeout(function() {\n                $scope.error = err.message;\n              });\n            } else {\n              kEditor.setModel(model);\n              Notification.success({\n                title: $scope.title,\n                message: 'Model loaded from <strong>' + url + '</strong>'\n              });\n              $uibModalInstance.close();\n            }\n          });\n        };\n\n        $scope.closeError = function() {\n          $scope.error = null;\n        };\n      }\n    });\n  };\n\n  $scope.mergeFromNode = function(evt) {\n    evt.preventDefault();\n\n    $uibModal.open({\n      templateUrl: 'app/components/util/host-port-path.modal.html',\n      size: 'md',\n      controller: function($scope, $uibModalInstance, kWs, storage) {\n        $scope.title = 'Merge from node';\n        $scope.action = 'Merge';\n        $scope.host = storage.get('previous-host', '127.0.0.1');\n        $scope.port = 9000;\n        $scope.path = '/';\n\n        $scope.onHostChange = function (newVal) {\n          storage.set('previous-host', newVal);\n        };\n\n        $uibModalInstance.rendered.then(function() {\n          $timeout(function() {\n            jQuery('#host').focus();\n          }, 250);\n        });\n\n        $scope.confirm = function() {\n          $scope.closeError();\n\n          kWs.getModel($scope.host, $scope.port, $scope.path, function(err, model, url) {\n            if (err) {\n              $timeout(function() {\n                $scope.error = err.message;\n              });\n            } else {\n              var compare = kFactory.createModelCompare();\n              compare.merge(model, kEditor.getModel()).applyOn(model);\n              kEditor.setModel(model);\n              Notification.success({\n                title: $scope.title,\n                message: 'Model merged with <strong>' + url + '</strong>'\n              });\n              $uibModalInstance.close();\n            }\n          });\n        };\n\n        $scope.closeError = function() {\n          $scope.error = null;\n        };\n      }\n    });\n  };\n\n  $scope.save = function(evt, filename) {\n    evt.preventDefault();\n    var serializer = kFactory.createJSONSerializer();\n\n    try {\n\t\t\t// serialize model\n      var modelStr = serializer.serialize(kEditor.getModel());\n\t\t\t// prettify model\n      modelStr = JSON.stringify(JSON.parse(modelStr), null, 4);\n\t\t\t// download model on client\n      saveFile.save(modelStr, filename, '.json', 'application/json');\n    } catch (err) {\n      Notification.error({title: 'Save', message: 'Unable to serialize model to JSON'});\n    }\n  };\n\n  $scope.deleteAll = function(evt) {\n    evt.preventDefault();\n    $scope.deleteInstances(evt);\n    kEditor.getModel().removeAllPackages();\n  };\n\n  $scope.deleteInstances = function(evt) {\n    evt.preventDefault();\n    var model = kEditor.getModel();\n    model.removeAllNodes();\n    model.removeAllGroups();\n    model.removeAllHubs();\n    model.removeAllMBindings();\n    model.removeAllRepositories();\n    processModel();\n  };\n\n  $scope.deleteSelection = function(evt) {\n    evt.preventDefault();\n    var selection = kModelHelper.getSelection(kEditor.getModel());\n    if (selection.length === 0) {\n      Notification.warning({title: 'Delete selection', message: 'Nothing selected'});\n    } else {\n      selection.forEach(function(instance) {\n        instance.delete();\n      });\n      processModel();\n    }\n  };\n\n  $scope.toggleShortcutHelp = function() {\n    hotkeys.toggleCheatSheet();\n  };\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+o', description: 'Open a model from a file', callback: $scope.open});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+m', description: 'Merge a model from a file with current model in editor', callback: $scope.merge});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+o', description: 'Open a model from a node', callback: $scope.openFromNode});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+m', description: 'Merge a model from a node with current model in editor', callback: $scope.mergeFromNode});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+g', description: 'Connect to a Web Socket server and stay synced with it', callback: $scope.connectSync});\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+s',\n    description: 'Save the current model into a JSON file',\n    callback: function(evt) {\n      evt.preventDefault();\n      var saveFile = $scope.save;\n      $uibModal.open({\n        templateUrl: 'app/components/util/filename.modal.html',\n        size: 'sm',\n        controller: function($scope, $uibModalInstance) {\n          $scope.title = 'Save model';\n          $scope.body = 'Would you like to save your current model to a file?';\n          $scope.filename = 'model' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n          $uibModalInstance.rendered.then(function() {\n            $timeout(function() {\n              jQuery('#filename').focus();\n            }, 250);\n          });\n\n          $scope.save = function() {\n            function endsWith(str, suffix) {\n              return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n            var suffix = '.json';\n            if (endsWith($scope.filename, suffix)) {\n              $scope.filename = $scope.filename.substr(0, $scope.filename.length - suffix.length);\n            }\n            saveFile(evt, $scope.filename);\n            $uibModalInstance.close();\n          };\n        }\n      });\n    }\n  });\n\n  hotkeys.bindTo($scope).add({combo: 'alt+shift+d', description: 'Delete everything in the current model', callback: $scope.deleteAll});\n\n  hotkeys.bindTo($scope).add({combo: 'alt+shift+i', description: 'Delete instances in the current model', callback: $scope.deleteInstances});\n\n  hotkeys.bindTo($scope).add({combo: 'del', description: 'Delete selected instances in the current model', callback: $scope.deleteSelection});\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+a',\n    description: 'Select all instances',\n    callback: function(evt) {\n      evt.preventDefault();\n      $scope.selectAll();\n    }\n  });\n\n  $scope.$on('$destroy', function() {\n    unregister();\n    document.removeEventListener('keydown', onKeyDown);\n    document.removeEventListener('keyup', onKeyUp);\n    $timeout.cancel(filterTimeout);\n  });\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('tabTags', function () {\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: 'app/treeview/tab-tags/tab-tags.html',\n      controller: function ($scope, kEditor, kFactory, kModelHelper, KWE_TAG) {\n        $scope.tag = '';\n        $scope.tags = [];\n\n        function processTags() {\n          $scope.tags = [];\n\n          $scope.selectedItems.forEach(function (item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            kModelHelper.getTags(instance).forEach(function (tag) {\n              if ($scope.tags.indexOf(tag) === -1) {\n                $scope.tags.push(tag);\n              }\n            });\n          });\n        }\n\n        /**\n         * This does not mutate the given str\n         */\n        function removeTagFromStr(tag, str) {\n          var tags = str.split(',');\n          var i = tags.indexOf(tag);\n          if (i !== -1) {\n            tags.splice(i, 1);\n          }\n          return tags;\n        }\n\n        processTags();\n        var unwatchItems = $scope.$watchCollection('selectedItems', processTags);\n        $scope.$on('$destroy', unwatchItems);\n\n        $scope.addTag = function () {\n          if ($scope.tag.trim().length > 0 && $scope.tag.indexOf(',') === -1) {\n            $scope.tag = $scope.tag.trim();\n            $scope.selectedItems.forEach(function (item) {\n              var instance = kEditor.getModel().findByPath(item.path);\n              var tagMeta = instance.findMetaDataByID(KWE_TAG);\n              if (!tagMeta) {\n                tagMeta = kFactory.createValue();\n                tagMeta.name = KWE_TAG;\n                tagMeta.value = '';\n                instance.addMetaData(tagMeta);\n              }\n              var tags = kModelHelper.getTags(instance);\n              if (tags.indexOf($scope.tag) === -1) {\n                // add tag to instance in model\n                tags.push($scope.tag);\n                // add tag in view\n                item.tags.push($scope.tag);\n              }\n              if ($scope.tags.indexOf($scope.tag) === -1) {\n                // add tag in tag list in view\n                $scope.tags.push($scope.tag);\n              }\n              tagMeta.value = tags.join(',');\n            });\n            $scope.tag = '';\n          }\n        };\n\n        $scope.validate = function () {\n          if ($scope.tag.indexOf(',') !== -1) {\n            $scope.error = 'Character \",\" is not allowed in a tag';\n          } else {\n            $scope.error = null;\n          }\n        };\n\n        $scope.removeTag = function (tag) {\n          $scope.tags.splice($scope.tags.indexOf(tag), 1);\n          $scope.selectedItems.forEach(function (item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            var tagMeta = instance.findMetaDataByID(KWE_TAG);\n            if (tagMeta) {\n              var newTags = removeTagFromStr(tag, tagMeta.value);\n              tagMeta.value = newTags.join(',');\n              item.tags = newTags;\n            }\n          });\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp').directive('tabParams', function($timeout, kEditor, kModelHelper, kInstance, util) {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'app/treeview/tab-params/tab-params.html',\n    link: function($scope) {\n      function convertType(type) {\n        switch (type) {\n          case 'LONG':\n          case 'DOUBLE':\n          case 'FLOAT':\n          case 'SHORT':\n          case 'INT':\n            return 'number';\n\n          case 'BOOLEAN':\n            return 'boolean';\n\n          default:\n            return 'text';\n        }\n      }\n\n      function process() {\n        $scope.message = null;\n        $scope.error = false;\n        $scope.length = {};\n        $scope.prepend = {};\n        $scope.append = {};\n        $scope.min = {};\n        $scope.max = {};\n        $scope.each = {};\n        $scope.toggleEachFlag = false;\n        $scope.state = {\n          started: null\n        };\n        $scope.nets = [];\n\n        var model = kEditor.getModel();\n        if ($scope.selectedItems.length > 1) {\n          var first = model.findByPath($scope.selectedItems[0].path);\n          $scope.types = [first.name + ': ' + kModelHelper.getFqn(first.typeDefinition)];\n          for (var i = 1; i < $scope.selectedItems.length; i++) {\n            var prev = model.findByPath($scope.selectedItems[i - 1].path),\n              curr = model.findByPath($scope.selectedItems[i].path);\n            if (kModelHelper.getFqn(prev.typeDefinition) !== kModelHelper.getFqn(curr.typeDefinition)) {\n              $scope.types.push(curr.name + ': ' + kModelHelper.getFqn(curr.typeDefinition));\n              $scope.error = true;\n              return;\n            }\n          }\n        }\n\n        $scope.selectedItems.forEach(function(item) {\n          var instance = kEditor.getModel().findByPath(item.path);\n          kInstance.initDictionaries(instance);\n        });\n\n        $scope.util = util;\n        $scope.instance = model.findByPath($scope.selectedItems[0].path);\n        if ($scope.selectedItems.length === 1) {\n          $scope.state.started = $scope.instance.started;\n        } else {\n          $scope.state.started = null;\n        }\n        $scope.type = $scope.instance.typeDefinition;\n        $scope.typeName = kModelHelper.getFqn($scope.type);\n        $scope.dictionary = [];\n        if ($scope.type.dictionaryType) {\n          $scope.dictionary = $scope.type.dictionaryType.select('attributes[fragmentDependant=false]').array.map(function(attr) {\n            var type = convertType(attr.datatype.name());\n            var value;\n            if ($scope.selectedItems.length === 1 && $scope.instance.dictionary) {\n              var val = $scope.instance.dictionary.findValuesByID(attr.name);\n              if (val) {\n                switch (type) {\n                  case 'number':\n                    value = +val.value;\n                    break;\n                  default:\n                    value = val.value;\n                    break;\n                }\n              }\n            }\n            var newAttr = {\n              name: attr.name,\n              optional: kModelHelper.isTruish(attr.optional),\n              defaultValue: attr.defaultValue,\n              type: type,\n              value: value\n            };\n            return newAttr;\n          });\n        }\n\n        if ($scope.instance.networkInformation) {\n          $scope.instance.networkInformation.array.forEach(function(net) {\n            $scope.nets.push({\n              name: net.name,\n              values: net.values.array.map(function(val) {\n                return {name: val.name, value: val.value};\n              })\n            });\n          });\n        }\n      }\n\n      process();\n      var unwatchItems = $scope.$watchCollection('selectedItems', process);\n      $scope.$on('$destroy', unwatchItems);\n\n      $scope.applyToAllInstances = function() {\n        try {\n          $scope.selectedItems.forEach(function(item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            instance.started = $scope.state.started;\n            $scope.dictionary.forEach(function(attr) {\n              var val = instance.dictionary.findValuesByID(attr.name);\n              if ($scope.each[attr.name]) {\n                $scope.random(attr);\n              }\n              val.value = attr.value;\n            });\n          });\n          $scope.dictionary.forEach(function(attr) {\n            attr.value = null;\n          });\n          process();\n          $scope.message = {\n            type: 'success',\n            content: 'Success'\n          };\n        } catch (err) {\n          $scope.message = {\n            type: 'danger',\n            content: 'Error (check console for more information)'\n          };\n\t\t\t\t\tconsole.error('[treeview.tab-params.applyToAllInstances()] Error'); // eslint-disable-line\n\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n        }\n\n        $timeout(function() {\n          $scope.message = null;\n        }, 1500);\n      };\n\n      $scope.random = function(attr) {\n        switch (attr.type) {\n          case 'text':\n            attr.value = $scope.prepend[attr.name] + util.randomString($scope.length[attr.name]) + $scope.append[attr.name];\n            break;\n\n          case 'number':\n            attr.value = util.randomNumber($scope.min[attr.name], $scope.max[attr.name]);\n            break;\n\n          case 'boolean':\n            attr.value = util.randomBoolean() + '';\n            break;\n        }\n      };\n\n      $scope.allRandom = function() {\n        $scope.dictionary.forEach($scope.random);\n      };\n\n      $scope.toggleEach = function() {\n        $scope.toggleEachFlag = !$scope.toggleEachFlag;\n        Object.keys($scope.each).forEach(function(name) {\n          $scope.each[name] = $scope.toggleEachFlag;\n        });\n      };\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('tabCreate', function ($timeout, $filter, kFactory, kEditor, kInstance, kModelHelper, util, KWE_TAG) {\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: 'app/treeview/tab-create/tab-create.html',\n      link: function ($scope) {\n        $scope.$on('$destroy', $scope.$watchCollection('selectedItems', function () {\n          $scope.verifyName();\n        }));\n\n        $scope.namePattern = '{metatype}{index}';\n        $scope.state = {\n          started: true\n        };\n        $scope.tags = '';\n\n        function createTdefItem(tdef) {\n          return { name: kModelHelper.getFqn(tdef), tdef: tdef };\n        }\n\n        $scope.verifyName = function () {\n          var i, name;\n          switch ($scope.selectedType) {\n            case 'node':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findNodesByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a node named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'group':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findGroupsByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a group named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'channel':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findHubsByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a channel named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'component':\n              if ($scope.selectedItems.length === 0) {\n                $scope.message = {\n                  type: 'danger',\n                  content: 'You must select node instances in the tree view in order to add components'\n                };\n                return;\n              } else {\n                for (i = 0; i < $scope.instancesCount; i++) {\n                  name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                  for (var j = 0; j < $scope.selectedItems.length; j++) {\n                    var node = kEditor.getModel().findNodesByID($scope.selectedItems[j].name);\n                    if (node) {\n                      if (node.findComponentsByID(name)) {\n                        $scope.message = {\n                          type: 'danger',\n                          content: 'There is already a component named \"' + name + '\" in node \"' + node.name + '\"'\n                        };\n                        return;\n                      }\n                    } else {\n                      $scope.message = {\n                        type: 'danger',\n                        content: '\"' + $scope.selectedItems[j].name + '\" is not a node instance'\n                      };\n                      return;\n                    }\n                  }\n                }\n              }\n              break;\n          }\n\n          $scope.message = null;\n        };\n\n        function process() {\n          var model = kEditor.getModel();\n          $scope.tags = '';\n          $scope.name = '';\n          $scope.types = ['node', 'group', 'channel', 'component'];\n          $scope.instanceTypes = {\n            node: kModelHelper.getNodeTypes(model).map(createTdefItem),\n            group: kModelHelper.getGroupTypes(model).map(createTdefItem),\n            channel: kModelHelper.getChannelTypes(model).map(createTdefItem),\n            component: kModelHelper.getComponentTypes(model).map(createTdefItem)\n          };\n          $scope.selectedType = $scope.types[0];\n          if ($scope.instanceTypes[$scope.selectedType].length > 0) {\n            $scope.selectedInstanceType = $scope.instanceTypes[$scope.selectedType][0];\n          }\n          $scope.availableNodes = $scope.items.filter(function (item) {\n            return item.type === 'node';\n          });\n          $scope.selectedNode = $scope.availableNodes[0];\n          $scope.instancesCount = 1;\n          $scope.verifyName();\n        }\n\n        process();\n        var unregister = kEditor.addNewModelListener('treeview', process);\n        var unwatchItems = $scope.$watchCollection('items', process);\n        $scope.$on('$destroy', function () {\n          unregister();\n          unwatchItems();\n        });\n\n        function createInstances() {\n          var instances = [];\n          for (var i = 0; i < $scope.instancesCount; i++) {\n            var name = $filter('namingPattern')($scope.namePattern, {\n              index: i,\n              metatype: $scope.selectedType\n            });\n            var instance;\n            switch ($scope.selectedType) {\n              case 'node':\n                instance = kFactory.createContainerNode();\n                break;\n              case 'group':\n                instance = kFactory.createGroup();\n                break;\n              case 'channel':\n                instance = kFactory.createChannel();\n                break;\n              case 'component':\n                instance = kFactory.createComponentInstance();\n                break;\n            }\n            instance.name = name;\n            instance.typeDefinition = $scope.selectedInstanceType.tdef;\n            instance.started = $scope.state.started;\n            kInstance.initDictionaries(instance);\n            var tags = $scope.tags.split(',')\n              .map(function (tag) { return tag.trim(); })\n              .filter(function (tag) { return tag.length > 0; })\n              .join(',');\n            var tagsMeta = kFactory.createValue();\n            tagsMeta.name = KWE_TAG;\n            tagsMeta.value = tags;\n            instance.addMetaData(tagsMeta);\n            instances.push(instance);\n          }\n          return instances;\n        }\n\n        $scope.create = function () {\n          var model = kEditor.getModel();\n          switch ($scope.selectedType) {\n            case 'node':\n              createInstances().forEach(function (instance) {\n                model.addNodes(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'group':\n              createInstances().forEach(function (instance) {\n                model.addGroups(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'channel':\n              createInstances().forEach(function (instance) {\n                model.addHubs(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'component':\n              $scope.selectedItems.forEach(function (item) {\n                // create component instances for the node\n                var node = model.findNodesByID(item.name);\n                createInstances().forEach(function (instance) {\n                  node.addComponents(instance);\n                  $scope.createItem($scope.selectedType, instance, node);\n                });\n              });\n              break;\n          }\n        };\n\n        $scope.onTypeChange = function () {\n          $scope.verifyName();\n        };\n\n        $scope.areInstanceTypesValid = function () {\n          if ($scope.selectedType === 'component') {\n            if ($scope.availableNodes.length > 0) {\n              return $scope.instanceTypes[$scope.selectedType].length > 0;\n            } else {\n              return false;\n            }\n          } else {\n            return $scope.instanceTypes[$scope.selectedType].length > 0;\n          }\n        };\n\n        $scope.isValid = function () {\n          if ($scope.selectedType === 'component') {\n            if (!$scope.selectedNode) {\n              return false;\n            }\n          }\n          return !$scope.message &&\n            $scope.namePattern.trim().length > 0 &&\n            $scope.selectedType.length > 0 &&\n            $scope.instancesCount > 0 &&\n            $scope.selectedInstanceType;\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n\t.directive('tabActions', function ($filter, $uibModal, kEditor) {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'app/treeview/tab-actions/tab-actions.html',\n    link: function ($scope) {\n      function processData() {\n        var model = kEditor.getModel();\n        $scope.groups = model.groups.array;\n        $scope.selectedGroup = $filter('orderBy')($scope.groups, 'name')[0];\n      }\n\n      function processTags() {\n        $scope.tags = {};\n        $scope.items.forEach(function processTag(item) {\n          item.tags.forEach(function (tag) {\n            if (!$scope.tags[tag]) {\n              $scope.tags[tag] = [];\n            }\n            $scope.tags[tag].push(item);\n          });\n          if (item.children) {\n            item.children.forEach(processTag);\n          }\n        });\n        $scope.tagsCount = Object.keys($scope.tags).length;\n      }\n\n      function modelHandler() {\n        processData();\n        processTags();\n      }\n\n      modelHandler();\n      var unwatchItems = $scope.$watchCollection('items', modelHandler);\n      var unwatchTags = $scope.$watch('items', function () {\n        processTags();\n      }, true);\n      $scope.$on('$destroy', function () {\n        unwatchItems();\n        unwatchTags();\n      });\n\n      $scope.openGroupModal = function () {\n        $uibModal.open({\n          templateUrl: 'app/main/instance/group.modal.html',\n          size: 'md',\n          resolve: {\n            group: function () {\n              return $scope.selectedGroup;\n            }\n          },\n          controller: 'GroupModalCtrl'\n        });\n      };\n    }\n  };\n});\n","'use strict';\nangular.module('editorApp').factory('kFilterParser', function () {\n  /* Generated by PEG.js 0.9.0.\n   * @param  {[type]} child  [description]\n   * @param  {[type]} parent [description]\n   * @return {[type]}        [description]\n   */\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ?\n      arguments[1] :\n      {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = {\n        Query: peg$parseQuery\n      },\n      peg$startRuleFunction = peg$parseQuery,\n\n      peg$c0 = \"|\",\n      peg$c1 = {\n        type: \"literal\",\n        value: \"|\",\n        description: \"\\\"|\\\"\"\n      },\n      peg$c2 = function (head, tail) {\n        if (tail.length > 0) {\n          return {\n            type: 'or',\n            content: [head].concat(tail.map(function (e, i) {\n              return tail[i][3];\n            }))\n          };\n        }\n        return head;\n      },\n      peg$c3 = \"&\",\n      peg$c4 = {\n        type: \"literal\",\n        value: \"&\",\n        description: \"\\\"&\\\"\"\n      },\n      peg$c5 = function (head, tail) {\n        if (tail.length > 0) {\n          return {\n            type: 'and',\n            content: [head].concat(tail.map(function (e, i) {\n              return tail[i][3];\n            }))\n          };\n        }\n        return head;\n      },\n      peg$c6 = \"(\",\n      peg$c7 = {\n        type: \"literal\",\n        value: \"(\",\n        description: \"\\\"(\\\"\"\n      },\n      peg$c8 = \")\",\n      peg$c9 = {\n        type: \"literal\",\n        value: \")\",\n        description: \"\\\")\\\"\"\n      },\n      peg$c10 = function (query) {\n        return query;\n      },\n      peg$c11 = {\n        type: \"other\",\n        description: \"name:\"\n      },\n      peg$c12 = \"name:\",\n      peg$c13 = {\n        type: \"literal\",\n        value: \"name:\",\n        description: \"\\\"name:\\\"\"\n      },\n      peg$c14 = function (id) {\n        return { type: 'name', content: id };\n      },\n      peg$c15 = {\n        type: \"other\",\n        description: \"is:\"\n      },\n      peg$c16 = \"is:\",\n      peg$c17 = {\n        type: \"literal\",\n        value: \"is:\",\n        description: \"\\\"is:\\\"\"\n      },\n      peg$c18 = function (id) {\n        return { type: 'is', content: id };\n      },\n      peg$c19 = {\n        type: \"other\",\n        description: \"vers:\"\n      },\n      peg$c20 = \"vers:\",\n      peg$c21 = {\n        type: \"literal\",\n        value: \"vers:\",\n        description: \"\\\"vers:\\\"\"\n      },\n      peg$c22 = \">\",\n      peg$c23 = {\n        type: \"literal\",\n        value: \">\",\n        description: \"\\\">\\\"\"\n      },\n      peg$c24 = \"<\",\n      peg$c25 = {\n        type: \"literal\",\n        value: \"<\",\n        description: \"\\\"<\\\"\"\n      },\n      peg$c26 = \">=\",\n      peg$c27 = {\n        type: \"literal\",\n        value: \">=\",\n        description: \"\\\">=\\\"\"\n      },\n      peg$c28 = \"<=\",\n      peg$c29 = {\n        type: \"literal\",\n        value: \"<=\",\n        description: \"\\\"<=\\\"\"\n      },\n      peg$c30 = function (op, id) {\n        var expr = {\n          type: 'vers',\n          content: id\n        };\n        if (op === '>') {\n          expr.operator = 'gt';\n        }\n        if (op === '<') {\n          expr.operator = 'lt';\n        }\n        if (op === '>=') {\n          expr.operator = 'ge';\n        }\n        if (op === '<=') {\n          expr.operator = 'le';\n        }\n        return expr;\n      },\n      peg$c31 = {\n        type: \"other\",\n        description: \"tag:\"\n      },\n      peg$c32 = \"tag:\",\n      peg$c33 = {\n        type: \"literal\",\n        value: \"tag:\",\n        description: \"\\\"tag:\\\"\"\n      },\n      peg$c34 = function (id) {\n        return { type: 'tag', content: id };\n      },\n      peg$c35 = {\n        type: \"other\",\n        description: \"bound:\"\n      },\n      peg$c36 = \"bound:\",\n      peg$c37 = {\n        type: \"literal\",\n        value: \"bound:\",\n        description: \"\\\"bound:\\\"\"\n      },\n      peg$c38 = \":\",\n      peg$c39 = {\n        type: \"literal\",\n        value: \":\",\n        description: \"\\\":\\\"\"\n      },\n      peg$c40 = function (target, id) {\n        return { type: 'bound', target: target, content: id };\n      },\n      peg$c41 = {\n        type: \"other\",\n        description: \"identifier or regex\"\n      },\n      peg$c42 = {\n        type: \"other\",\n        description: \"identifier\"\n      },\n      peg$c43 = /^[a-zA-Z0-9.]/,\n      peg$c44 = {\n        type: \"class\",\n        value: \"[a-zA-Z0-9\\\\.]\",\n        description: \"[a-zA-Z0-9\\\\.]\"\n      },\n      peg$c45 = function () {\n        return text();\n      },\n      peg$c46 = {\n        type: \"other\",\n        description: \"regular expression\"\n      },\n      peg$c47 = \"/\",\n      peg$c48 = {\n        type: \"literal\",\n        value: \"/\",\n        description: \"\\\"/\\\"\"\n      },\n      peg$c49 = \"g\",\n      peg$c50 = {\n        type: \"literal\",\n        value: \"g\",\n        description: \"\\\"g\\\"\"\n      },\n      peg$c51 = \"m\",\n      peg$c52 = {\n        type: \"literal\",\n        value: \"m\",\n        description: \"\\\"m\\\"\"\n      },\n      peg$c53 = \"i\",\n      peg$c54 = {\n        type: \"literal\",\n        value: \"i\",\n        description: \"\\\"i\\\"\"\n      },\n      peg$c55 = \"\",\n      peg$c56 = function (pattern, flags) {\n        var value;\n\n        try {\n          value = new RegExp(pattern, flags);\n        } catch (e) {\n          error(e.message);\n        }\n\n        return { type: \"regex\", content: value };\n      },\n      peg$c57 = /^[*\\\\/[]/,\n      peg$c58 = {\n        type: \"class\",\n        value: \"[*\\\\\\\\/[]\",\n        description: \"[*\\\\\\\\/[]\"\n      },\n      peg$c59 = /^[\\\\/[]/,\n      peg$c60 = {\n        type: \"class\",\n        value: \"[\\\\\\\\/[]\",\n        description: \"[\\\\\\\\/[]\"\n      },\n      peg$c61 = \"\\\\\",\n      peg$c62 = {\n        type: \"literal\",\n        value: \"\\\\\",\n        description: \"\\\"\\\\\\\\\\\"\"\n      },\n      peg$c63 = \"[\",\n      peg$c64 = {\n        type: \"literal\",\n        value: \"[\",\n        description: \"\\\"[\\\"\"\n      },\n      peg$c65 = \"]\",\n      peg$c66 = {\n        type: \"literal\",\n        value: \"]\",\n        description: \"\\\"]\\\"\"\n      },\n      peg$c67 = /^[\\]\\\\]/,\n      peg$c68 = {\n        type: \"class\",\n        value: \"[\\\\]\\\\\\\\]\",\n        description: \"[\\\\]\\\\\\\\]\"\n      },\n      peg$c69 = /^[\\n\\r\\u2028\\u2029]/,\n      peg$c70 = {\n        type: \"class\",\n        value: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\",\n        description: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\"\n      },\n      peg$c71 = {\n        type: \"any\",\n        description: \"any character\"\n      },\n      peg$c72 = {\n        type: \"other\",\n        description: \"whitespace\"\n      },\n      peg$c73 = /^[ \\t]/,\n      peg$c74 = {\n        type: \"class\",\n        value: \"[ \\\\t]\",\n        description: \"[ \\\\t]\"\n      },\n\n      peg$currPos = 0,\n      peg$savedPos = 0,\n      peg$posDetailsCache = [\n        {\n          line: 1,\n          column: 1,\n          seenCR: false\n        }\n      ],\n      peg$maxFailPos = 0,\n      peg$maxFailExpected = [],\n      peg$silentFails = 0,\n\n      peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, input.substring(peg$savedPos, peg$currPos), peg$computeLocation(peg$savedPos, peg$currPos));\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n        p,\n        ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0100-\\u0FFF]/g, function (ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1000-\\uFFFF]/g, function (ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n\n        var expectedDescs = new Array(expected.length),\n          expectedDesc,\n          foundDesc,\n          i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1 ?\n          expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] :\n          expectedDescs[0];\n\n        foundDesc = found ?\n          \"\\\"\" + stringEscape(found) + \"\\\"\" :\n          \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(message !== null ?\n        message :\n        buildMessage(expected, found), expected, found, location);\n    }\n\n    function peg$parseQuery() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5,\n        s6,\n        s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseExpr();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c1);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExpr();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 124) {\n              s5 = peg$c0;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c1);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseExpr();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpr() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5,\n        s6,\n        s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseTerm();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 38) {\n            s5 = peg$c3;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c4);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 38) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseTerm();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c5(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseTerm() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c7);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseQuery();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c8;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c9);\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c10(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseFilter();\n      }\n\n      return s0;\n    }\n\n    function peg$parseFilter() {\n      var s0;\n\n      s0 = peg$parseIs();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseVersion();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseBound();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseTag();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseName();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseName() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c13);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifierOrRegex();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c11);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIs() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c16) {\n        s1 = peg$c16;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c17);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifier();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c18(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c15);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVersion() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c20) {\n        s1 = peg$c20;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c23);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c24;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c25);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c26) {\n              s2 = peg$c26;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n              }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c28) {\n                s2 = peg$c28;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c29);\n                }\n              }\n            }\n          }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIdentifierOrRegex();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c30(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c19);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTag() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c32) {\n        s1 = peg$c32;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c33);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifierOrRegex();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c31);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBound() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c36) {\n        s1 = peg$c36;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifier();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c38;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c39);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIdentifierOrRegex();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c40(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c35);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifierOrRegex() {\n      var s0;\n\n      peg$silentFails++;\n      s0 = peg$parseIdentifier();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionLiteral();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c41);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifier() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c43.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c44);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c43.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c44);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c45();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c42);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionLiteral() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c48);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseRegularExpressionBody();\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c48);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 103) {\n              s4 = peg$c49;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c50);\n              }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 109) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c52);\n                }\n              }\n              if (s4 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 105) {\n                  s4 = peg$c53;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c54);\n                  }\n                }\n                if (s4 === peg$FAILED) {\n                  s4 = peg$c55;\n                }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c56(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c46);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionBody() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseRegularExpressionFirstChar();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseRegularExpressionChar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRegularExpressionChar();\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionFirstChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c57.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c58);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRegularExpressionClass();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c59.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c60);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRegularExpressionClass();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionBackslashSequence() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c61;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c62);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionNonTerminator() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parseLineTerminator();\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSourceCharacter();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionClass() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c63;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c64);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseRegularExpressionClassChar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRegularExpressionClassChar();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c65;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c66);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionClassChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c68);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n      }\n\n      return s0;\n    }\n\n    function peg$parseLineTerminator() {\n      var s0;\n\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c70);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSourceCharacter() {\n      var s0;\n\n      if (input.length > peg$currPos) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c71);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0,\n        s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c73.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c74);\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c73.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c74);\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c72);\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos < input.length ?\n        input.charAt(peg$maxFailPos) :\n        null, peg$maxFailPos < input.length ?\n        peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) :\n        peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  return { SyntaxError: peg$SyntaxError, parse: peg$parse };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .filter('doFilter', function () {\n    var query = function () {};\n\n    function test(expected, actual) {\n      if (actual.type && actual.type === 'regex') {\n        return actual.content.test(expected);\n      } else {\n        return expected === actual;\n      }\n    }\n\n    function atomicName(item, expr) {\n      var match = test(item.name, expr.content);\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return test(child.name, expr.content);\n        });\n      }\n      return match;\n    }\n\n    function name(items, expr) {\n      return items.filter(function (item) {\n        return atomicName(item, expr);\n      });\n    }\n\n    function atomicIs(item, expr) {\n      var match;\n      switch (expr.content) {\n        case 'node':\n          match = item.type === 'node';\n          break;\n\n        case 'chan':\n        case 'channel':\n          match = item.type === 'channel';\n          break;\n\n        case 'comp':\n        case 'component':\n          match = item.type === 'component';\n          break;\n\n        case 'group':\n        case 'grp':\n          match = item.type === 'group';\n          break;\n\n        case 'selected':\n          match = item.selected;\n          break;\n\n        case 'folded':\n          match = item.folded;\n          break;\n\n        default:\n          match = false;\n          break;\n      }\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicIs(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function is(items, expr) {\n      return items.filter(function (item) {\n        return atomicIs(item, expr);\n      });\n    }\n\n    function atomicTag(item, expr) {\n      var match = item.tags.some(function (tag) {\n        return test(tag, expr.content);\n      });\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicTag(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function tag(items, expr) {\n      return items.filter(function (item) {\n        return atomicTag(item, expr);\n      });\n    }\n\n    function atomicVers(item, expr) {\n      var match = test(item.version, expr.content);\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicVers(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function vers(items, expr) {\n      return items.filter(function (item) {\n        return atomicVers(item, expr);\n      });\n    }\n\n    function and(items, expr) {\n      var filtered = items;\n      expr.content.forEach(function (expr) {\n        filtered = query(filtered, expr);\n      });\n      return filtered;\n    }\n\n    function or(items, expr) {\n      var alreadyFiltered = [];\n      var filtered = [];\n      expr.content.forEach(function (expr) {\n        var notAddedItems = items.filter(function (item) {\n          return alreadyFiltered.indexOf(item.path) === -1;\n        });\n        var toAdd = query(notAddedItems, expr);\n        toAdd.forEach(function (item) {\n          if (alreadyFiltered.indexOf(item.path) === -1) {\n            alreadyFiltered.push(item.path);\n          }\n        });\n        filtered = filtered.concat(toAdd);\n      });\n      return filtered;\n    }\n\n    query = function (items, expr) {\n      if (items) {\n        if (expr) {\n          switch (expr.type) {\n            case 'name':\n              return name(items, expr);\n\n            case 'is':\n              return is(items, expr);\n\n            case 'tag':\n              return tag(items, expr);\n\n            case 'vers':\n              return vers(items, expr);\n\n            case 'and':\n              return and(items, expr);\n\n            case 'or':\n              return or(items, expr);\n\n            default:\n              return items;\n          }\n        } else {\n          return items;\n        }\n      }\n    };\n\n    return query;\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('settings', {\n        parent: 'app',\n        url: '/settings',\n        views: {\n          'content@': {\n            templateUrl: 'app/settings/settings.html',\n            controller: 'SettingsCtrl'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:SettingsCtrl\n * @description\n * # SettingsCtrl\n * Controller of the editorApp options page\n */\nangular.module('editorApp')\n\t.controller('SettingsCtrl', function ($scope, kScript, kRegistry, storage, Notification) {\n  $scope.registryUrl = kRegistry.getUrl();\n\n  $scope.getUrl = function () {\n    return kRegistry.getUrl();\n  };\n\n  $scope.changeKevoreeRegistry = function () {\n    if ($scope.registryUrl !== kRegistry.getUrl().toString()) {\n      try {\n        var url = new URL($scope.registryUrl);\n        kRegistry.setUrl(url);\n        Notification.success({\n          title: 'Kevoree Registry',\n          message: 'URL successfully updated',\n          delay: 3000\n        });\n      } catch (err) {\n        Notification.error({\n          title: 'Kevoree Registry',\n          message: 'Invalid URL ' + $scope.registryUrl,\n          delay: 3000\n        });\n      }\n    }\n  };\n\n  $scope.canChangeKevoreeRegistry = function () {\n    return $scope.registryUrl !== undefined &&\n\t\t\t\t$scope.registryUrl !== null &&\n\t\t\t\t$scope.registryUrl !== kRegistry.getUrl().toString();\n  };\n\n  $scope.clearKevScriptCache = function () {\n    var prefix = TinyConf.get('cache.root');\n    Object.keys(localStorage).forEach(function (key) {\n      if (key.startsWith(prefix)) {\n        delete localStorage[key];\n      }\n    });\n  };\n\n  $scope.canClearKevScriptCache = function () {\n    var prefix = TinyConf.get('cache.root');\n    return Object.keys(localStorage).find(function (key) {\n      return key.startsWith(prefix);\n    });\n  };\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:NavBarCtrl\n * @description\n * # NavBarCtrl\n * Controller of the editorApp navigation bar\n */\nangular.module('editorApp')\n  .controller('NavBarCtrl', function ($state) {\n    this.isCollapsed = true;\n    this.$state = $state;\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:TypedefsCtrl\n * @description\n * # TypedefsCtrl\n * Controller of the editorApp TypeDefinition sidebar\n */\nangular.module('editorApp')\n    .controller('TypedefsCtrl', function($scope, kEditor, ui, kModelHelper, kFactory, kInstance, Notification, KWE_POSITION) {\n      $scope.packages = {};\n\n      $scope.dragDraggable = {\n        animate: true,\n        placeholder: 'keep',\n        onStart: 'onStart',\n        onDrag: 'onDrag',\n        onStop: 'onStop'\n      };\n\n      $scope.dragOptions = {\n        revert: 'invalid',\n        helper: 'clone',\n        addClasses: false,\n        scroll: false,\n        appendTo: '#tdef-drag-panel',\n        containment: '#tdef-drag-panel',\n        cursor: 'move',\n        cursorAt: {\n          top: -5,\n          right: -5\n        }\n      };\n\n      $scope.hasPackages = function() {\n        return Object.keys($scope.packages).length > 0;\n      };\n\n      $scope.onStart = function(evt, obj) {\n        ui.setDropTarget(null);\n\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          var container = document.getElementById('editor-container');\n          this.offset = {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          };\n\n          var pkgPath = obj.helper[0].dataset.pkgPath;\n          var tdefName = obj.helper[0].innerHTML.trim();\n          var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n          this.typeDef = kModelHelper.findBestVersion(tdefs.array);\n        }\n      };\n\n      $scope.onDrag = function(evt, obj) {\n        ui.mousePos = {\n          x: evt.clientX,\n          y: evt.clientY\n        };\n\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          clearTimeout(this.timeout);\n          if (this.hoveredNode) {\n            this.hoveredNode.select('.bg').removeClass('hovered error');\n          }\n\n          this.timeout = setTimeout(function() {\n            this.hoveredNode = ui.getHoveredNode(\n                        ui.mousePos.x - this.offset.left,\n                        ui.mousePos.y - this.offset.top);\n            if (this.hoveredNode) {\n              var nodeBg = this.hoveredNode.select('.bg');\n              nodeBg.addClass('hovered');\n\n              if (!kModelHelper.isCompatible(this.typeDef, kEditor.getModel().findByPath(this.hoveredNode.attr('data-path')))) {\n                nodeBg.addClass('error');\n                ui.setDropTarget(null);\n              } else {\n                ui.setDropTarget(this.hoveredNode);\n              }\n            } else {\n              ui.setDropTarget(null);\n            }\n          }.bind(this), 100);\n        }\n      };\n\n      $scope.onStop = function(evt, obj) {\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          clearTimeout(this.timeout);\n          if (this.hoveredNode) {\n            if (this.hoveredNode.select('.bg').hasClass('error')) {\n              Notification.warning({\n                title: 'Add component',\n                message: 'Targeted node platform cannot run this TypeDefinition',\n                delay: 5000\n              });\n            }\n            this.hoveredNode.select('.bg').removeClass('hovered error');\n          } else {\n            if (obj.helper.hasClass('tdef-item-component')) {\n              Notification.warning({\n                title: 'Add component',\n                message: 'You have to drop components in nodes',\n                delay: 5000\n              });\n            }\n          }\n\n          delete this.typeDef;\n          delete this.timeout;\n          delete this.offset;\n          delete this.hoveredNode;\n        }\n      };\n\n      $scope.addInstance = function(tdef) {\n        var tdefs = kEditor.getModel().select(tdef.pkgPath + '/typeDefinitions[name=' + tdef.name + ']');\n        tdef = kModelHelper.findBestVersion(tdefs.array);\n        var type = kModelHelper.getTypeDefinitionType(tdef);\n\n        function preProcess(instance) {\n          instance.typeDefinition = tdef;\n          instance.started = true;\n          var pos = kFactory.createValue();\n          pos.name = KWE_POSITION;\n          pos.value = JSON.stringify({\n            x: 100,\n            y: 100\n          });\n          instance.addMetaData(pos);\n          kInstance.initDictionaries(instance);\n        }\n\n        var model = kEditor.getModel();\n        var selectedNodes = ui.getSelectedNodes();\n        var instance;\n        switch (type) {\n          case 'node':\n            if (selectedNodes.length > 0) {\n              selectedNodes.forEach(function(nodeElem) {\n                var node = model.findByPath(nodeElem.attr('data-path'));\n                if (node) {\n                  instance = kFactory.createContainerNode();\n                  instance.name = 'node' + parseInt(Math.random() * 1000, 10);\n                  preProcess(instance);\n                  model.addNodes(instance);\n                  node.addHosts(instance);\n                }\n              });\n            } else {\n              instance = kFactory.createContainerNode();\n              instance.name = 'node' + parseInt(Math.random() * 1000, 10);\n              preProcess(instance);\n              model.addNodes(instance);\n            }\n            break;\n\n          case 'group':\n            instance = kFactory.createGroup();\n            instance.name = 'group' + parseInt(Math.random() * 1000, 10);\n            preProcess(instance);\n            model.addGroups(instance);\n            break;\n\n          case 'component':\n            if (selectedNodes.length > 0) {\n              selectedNodes.forEach(function(nodeElem) {\n                var node = model.findByPath(nodeElem.attr('data-path'));\n                if (node) {\n                  instance = kFactory.createComponentInstance();\n                  instance.name = 'comp' + parseInt(Math.random() * 1000, 10);\n                  preProcess(instance);\n                  node.addComponents(instance);\n                }\n              });\n            } else {\n              Notification.warning({\n                title: 'Add component',\n                message: 'You have to select at least one node',\n                delay: 5000\n              });\n            }\n            break;\n\n          case 'channel':\n            instance = kFactory.createChannel();\n            instance.name = 'chan' + parseInt(Math.random() * 1000, 10);\n            preProcess(instance);\n            model.addHubs(instance);\n            break;\n        }\n      };\n\n        /**\n         * Inflate $scope.packages with value from kEditor.getModel()\n         */\n      function processModel() {\n        $scope.packages = [];\n        var model = kEditor.getModel();\n\n        var pkgsMap = {};\n        model.select('**/typeDefinitions[*]')\n                .array.forEach(function(tdef) {\n                  var pkg = kModelHelper.genPkgName(tdef.eContainer());\n                  pkgsMap[pkg] = pkgsMap[pkg] || {};\n                  pkgsMap[pkg].tdefs = pkgsMap[pkg].tdefs || {};\n\n                  var descMeta = tdef.findMetaDataByID('description');\n                  var descValue = descMeta ? descMeta.value : null;\n                  if (descValue && descValue.length >= 200) {\n                    descValue = descValue.substr(0, 200) + '...';\n                  }\n                  pkgsMap[pkg].tdefs[tdef.name] = {\n                    name: tdef.name,\n                    type: kModelHelper.getTypeDefinitionType(tdef),\n                    pkgPath: tdef.eContainer().path(),\n                    deployUnits: tdef.deployUnits.array,\n                    description: descValue\n                  };\n                });\n\n        Object.keys(pkgsMap).forEach(function(pkgName) {\n          var pkg = {\n            name: pkgName,\n            collapsed: false,\n            tdefs: []\n          };\n          Object.keys(pkgsMap[pkgName].tdefs).forEach(function(tdefName) {\n            pkg.tdefs.push(pkgsMap[pkgName].tdefs[tdefName]);\n          });\n          $scope.packages.push(pkg);\n        });\n      }\n\n        // listen to model changes on the editor\n      var unregister = kEditor.addModelUpdateListener('tdefs', processModel, true);\n      var unregister2 = kEditor.addNewModelListener('tdefs', processModel);\n\n        // process model\n      processModel();\n\n      $scope.$on('$destroy', function() {\n        unregister();\n        unregister2();\n      });\n    });\n","'use strict';\n\nangular.module('editorApp')\n\t.config(function ($stateProvider) {\n  $stateProvider\n\t\t\t.state('main', {\n  parent: 'app',\n  url: '/',\n  views: {\n    'content@': {\n      templateUrl: 'app/main/main.html',\n      controller: 'MainCtrl'\n    },\n    'typedefs@main': {\n      templateUrl: 'app/main/typedefs/typedefs.html',\n      controller: 'TypedefsCtrl'\n    },\n    'editor@main': {\n      templateUrl: 'app/main/editor/editor.html',\n      controller: 'EditorCtrl'\n    },\n    'instance@main': {\n      templateUrl: 'app/main/instance/instance.html',\n      controller: 'InstanceCtrl',\n      controllerAs: 'vm'\n    }\n  },\n  onExit: function (ui) {\n    ui.editor = null;\n  }\n});\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:MainCtrl\n * @description\n * # MainCtrl\n * Controller of the editorApp main content div\n */\nangular.module('editorApp')\n  .controller('MainCtrl', function ($scope, $timeout, $stateParams, $uibModal, kEditor, hotkeys, saveFile, ui, kModelHelper, kFactory, kWs, Notification) {\n    function onModelHandler() {\n      kEditor.drawModel();\n    }\n    var unregister = kEditor.addNewModelListener('main', onModelHandler);\n\n    $scope.synced = false;\n    var syncWS;\n\n    $scope.onFileLoaded = function () {};\n\n    $scope.open = function (evt) {\n      evt.preventDefault();\n\n      $scope.onFileLoaded = function (filename, data) {\n        var oldModel = kEditor.getModel();\n        var loader = kFactory.createJSONLoader();\n        var model;\n        try {\n          model = loader.loadModelFromString(data).get(0);\n        } catch (err) {\n          console.warn('[main.controller.open()] Error loading model file'); // eslint-disable-line\n          console.error(err.stack); // eslint-disable-line\n          Notification.error({\n            title: 'Open from file',\n            message: 'Unable to load a model from <strong>' + filename + '</strong>',\n            delay: 15000\n          });\n          kEditor.setModel(oldModel);\n          return;\n        }\n\n        kEditor.setModel(model, function (err) {\n          if (err) {\n            Notification.error({\n              title: 'Open from file',\n              message: 'Unable to open model <strong>' + filename + '</strong><br/>' + err.message,\n              delay: 15000\n            });\n          } else {\n            Notification.success({\n              title: 'Open from file',\n              message: 'Model loaded from <strong>' + filename + '</strong>'\n            });\n          }\n        });\n      };\n      jQuery('input#file').click();\n    };\n\n    $scope.merge = function (evt) {\n      evt.preventDefault();\n      $scope.onFileLoaded = function mergeModel(filename, data) {\n        var loader = kFactory.createJSONLoader();\n        var compare = kFactory.createModelCompare();\n        var cloner = kFactory.createModelCloner();\n        var model;\n        try {\n          model = loader.loadModelFromString(data).get(0);\n          var currentModel = cloner.clone(kEditor.getModel());\n          compare.merge(currentModel, model).applyOn(currentModel);\n        } catch (err) {\n          console.warn('[main.controller.merge()] Error loading model file'); // eslint-disable-line\n          console.error(err.stack); // eslint-disable-line\n          Notification.error({\n            title: 'Merge from file',\n            message: 'Unable to merge the model with <strong>' + filename + '</strong>',\n            delay: 15000\n          });\n          return;\n        }\n\n        kEditor.setModel(currentModel, function (err) {\n          if (err) {\n            Notification.error({\n              title: 'Merge from file',\n              message: 'Unable to merge model <strong>' + filename + '</strong><br/>' + err.message,\n              delay: 15000\n            });\n          } else {\n            Notification.success({\n              title: 'Merge from file',\n              message: 'Model merged with <strong>' + filename + '</strong>'\n            });\n          }\n        });\n      };\n      jQuery('input#file').click();\n    };\n\n    $scope.openFromNode = function (evt) {\n      evt.preventDefault();\n\n      $uibModal.open({\n        templateUrl: 'app/components/util/host-port-path.modal.html',\n        size: 'md',\n        controller: function ($scope, $uibModalInstance, storage) {\n          $scope.title = 'Open from node';\n          $scope.action = 'Open';\n          $scope.host = storage.get('previous-host', '127.0.0.1');\n          $scope.port = 9000;\n          $scope.path = '/';\n\n          $scope.onHostChange = function (newVal) {\n            storage.set('previous-host', newVal);\n          };\n\n          $uibModalInstance.rendered.then(function () {\n            $timeout(function () {\n              jQuery('#host').focus();\n            }, 250);\n          });\n\n          $scope.confirm = function ($event) {\n            if (!$event || ($event && $event.keyCode === 13)) {\n              $scope.closeError();\n\n              kWs.getModel($scope.host, $scope.port, $scope.path, function (err, model, url) {\n                if (err) {\n                  $timeout(function () {\n                    $scope.error = err.message;\n                  });\n                } else {\n                  $uibModalInstance.close();\n                  kEditor.setModel(model, function (err) {\n                    if (err) {\n                      Notification.error({\n                        title: $scope.title,\n                        message: 'Unable to load model from <strong>' + url + '</strong><br/>' + err.message,\n                        delay: 15000\n                      });\n                    } else {\n                      Notification.success({\n                        title: $scope.title,\n                        message: 'Model loaded from <strong>' + url + '</strong>'\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          };\n\n          $scope.closeError = function () {\n            $scope.error = null;\n          };\n        }\n      });\n    };\n\n    $scope.mergeFromNode = function (evt) {\n      evt.preventDefault();\n\n      $uibModal.open({\n        templateUrl: 'app/components/util/host-port-path.modal.html',\n        size: 'md',\n        controller: function ($scope, $uibModalInstance, kWs, storage) {\n          $scope.title = 'Merge from node';\n          $scope.action = 'Merge';\n          $scope.host = storage.get('previous-host', '127.0.0.1');\n          $scope.port = 9000;\n          $scope.path = '/';\n\n          $scope.onHostChange = function (newVal) {\n            storage.set('previous-host', newVal);\n          };\n\n          $uibModalInstance.rendered.then(function () {\n            $timeout(function () {\n              jQuery('#host')\n                .focus();\n            }, 250);\n          });\n\n          $scope.confirm = function ($event) {\n            if (!$event || ($event && $event.keyCode === 13)) {\n              $scope.closeError();\n\n              kWs.getModel($scope.host, $scope.port, $scope.path, function (err, model, url) {\n                if (err) {\n                  $timeout(function () {\n                    $scope.error = err.message;\n                  });\n                } else {\n                  $uibModalInstance.close();\n                  var compare = kFactory.createModelCompare();\n                  var cloner = kFactory.createModelCloner();\n                  var currentModel = cloner.clone(kEditor.getModel());\n                  compare.merge(currentModel, model).applyOn(currentModel);\n                  kEditor.setModel(currentModel, function (err) {\n                    if (err) {\n                      Notification.error({\n                        title: $scope.title,\n                        message: 'Unable to merge model from <strong>' + url + '</strong><br/>' + err.message,\n                        delay: 15000\n                      });\n                    } else {\n                      Notification.success({\n                        title: $scope.title,\n                        message: 'Model merged with <strong>' + url + '</strong>'\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          };\n\n          $scope.closeError = function () {\n            $scope.error = null;\n          };\n        }\n      });\n    };\n\n    $scope.disconnectSync = function () {\n      if (syncWS) {\n        syncWS.close();\n        $timeout(function () {\n          $scope.synced = false;\n        });\n      }\n    };\n\n    $scope.connectSync = function (evt) {\n      evt.preventDefault();\n      if (!$scope.synced) {\n        var parentScope = $scope;\n        $uibModal.open({\n          templateUrl: 'app/components/util/host-port-path.modal.html',\n          size: 'md',\n          controller: function ($scope, $uibModalInstance, storage) {\n            $scope.title = 'Connect sync';\n            $scope.action = 'Sync';\n            $scope.host = storage.get('previous-host', '127.0.0.1');\n            $scope.port = 9000;\n            $scope.path = '/';\n\n            $scope.onHostChange = function (newVal) {\n              storage.set('previous-host', newVal);\n            };\n\n            $uibModalInstance.rendered.then(function () {\n              $timeout(function () {\n                jQuery('#host').focus();\n              }, 250);\n            });\n\n            $scope.confirm = function ($event) {\n              if (!$event || ($event && $event.keyCode === 13)) {\n                $scope.closeError();\n\n                if (!$scope.path) {\n                  $scope.path = '';\n                } else {\n                  if ($scope.path.length === 1 && $scope.path === '/') {\n                    $scope.path = '';\n                  } else if ($scope.path.substr(0, 1) !== '/') {\n                    $scope.path = '/' + $scope.path;\n                  }\n                }\n\n                syncWS = new WebSocket('ws://' + $scope.host + ':' + $scope.port + $scope.path);\n\n                syncWS.addEventListener('open', function () {\n                  $timeout(function () {\n                    parentScope.url = $scope.host + (($scope.port === 80) ? '' : ':' + $scope.port) + $scope.path;\n                    parentScope.synced = true;\n                  });\n                  $uibModalInstance.close();\n                  Notification.success({\n                    title: $scope.title,\n                    message: 'Connected to <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>'\n                  });\n                });\n\n                syncWS.addEventListener('message', function (evt) {\n                  var data = evt.data;\n                  if (data.substr(0, 'push/'.length) === 'push/') {\n                    data = data.substr('push/'.length);\n                  }\n\n                  var loader = kFactory.createJSONLoader();\n                  try {\n                    var model = loader.loadModelFromString(data).get(0);\n                    kEditor.setModel(model, function (err) {\n                      if (err) {\n                        Notification.error({\n                          title: $scope.title,\n                          message: 'Unable to update synced model from <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong><br/>' + err.message,\n                          delay: 15000\n                        });\n                      } else {\n                        Notification.success({\n                          title: $scope.title,\n                          message: 'Model updated from sync with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>'\n                        });\n                      }\n                    });\n                  } catch (err) {\n                    Notification.error({\n                      title: $scope.title,\n                      message: 'Error: unable to load received message as a Kevoree JSON model',\n                      delay: 15000\n                    });\n                  }\n                });\n\n                syncWS.addEventListener('error', function () {\n                  Notification.error({\n                    title: $scope.title,\n                    message: 'Error: unable to sync with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>',\n                    delay: 15000\n                  });\n                });\n\n                syncWS.addEventListener('close', function () {\n                  $timeout(function () {\n                    parentScope.synced = false;\n                  });\n                  Notification.warning({\n                    title: $scope.title,\n                    message: 'Connection with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong> closed'\n                  });\n                });\n              }\n            };\n\n            $scope.closeError = function () {\n              $scope.error = null;\n            };\n          }\n        });\n      } else {\n        Notification.warning({\n          title: 'Connect sync',\n          message: 'You are already synced'\n        });\n      }\n    };\n\n    $scope.save = function (evt, filename) {\n      evt.preventDefault();\n      var serializer = kFactory.createJSONSerializer();\n\n      try {\n        // serialize model\n        var modelStr = serializer.serialize(kEditor.getModel());\n        // prettify model\n        modelStr = JSON.stringify(JSON.parse(modelStr), null, 4);\n        // download model on client\n        saveFile.save(modelStr, filename, '.json', 'application/json');\n      } catch (err) {\n        Notification.error({\n          title: 'Save',\n          message: 'Unable to serialize model to JSON'\n        });\n      }\n    };\n\n    // copy/paste logic\n    var clipboard = [];\n    $scope.copy = function () {\n      clipboard = ui.getSelectedPaths()\n        .filter(function (elem) {\n          return typeof elem === 'string';\n        });\n    };\n    $scope.paste = function () {\n      clipboard.forEach(function (path) {\n        var model = kEditor.getModel();\n        var instance = model.findByPath(path);\n        if (instance) {\n          var clone = kModelHelper.clone(instance);\n          switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n            case 'node':\n              model.addNodes(clone);\n              if (instance.host) {\n                instance.host.addHosts(clone);\n              }\n              break;\n            case 'group':\n              model.addGroups(clone);\n              break;\n            case 'channel':\n              model.addHubs(clone);\n              break;\n            case 'component':\n              instance.eContainer()\n                .addComponents(clone);\n              break;\n          }\n        }\n      });\n      if (clipboard.length > 0) {\n        kEditor.drawModel();\n      }\n    };\n\n    $scope.fixOverlapping = function (evt) {\n      evt.preventDefault();\n      kEditor.fixOverlapping();\n    };\n\n    $scope.deleteAll = function (evt) {\n      evt.preventDefault();\n      $scope.deleteInstances(evt);\n      kEditor.getModel()\n        .removeAllPackages();\n    };\n\n    $scope.deleteInstances = function (evt) {\n      evt.preventDefault();\n      var model = kEditor.getModel();\n      model.removeAllNodes();\n      model.removeAllGroups();\n      model.removeAllHubs();\n      model.removeAllMBindings();\n      model.removeAllRepositories();\n    };\n\n    $scope.deleteSelection = function (evt) {\n      evt.preventDefault();\n      var deletions = ui.deleteSelected();\n      if (deletions === 0) {\n        Notification.warning({\n          title: 'Delete selected',\n          message: 'Nothing selected'\n        });\n      }\n    };\n\n    $scope.toggleShortcutHelp = function () {\n      hotkeys.toggleCheatSheet();\n    };\n\n    //$scope.undo = function (evt) {\n    //    evt.preventDefault();\n    //    console.log('undo');\n    //    Notification.warning({\n    //        title: 'Undo',\n    //        message: 'Not implemented yet',\n    //        delay: 3000\n    //    });\n    //};\n    //$scope.redo = function (evt) {\n    //    evt.preventDefault();\n    //    console.log('redo');\n    //    Notification.warning({\n    //        title: 'Redo',\n    //        message: 'Not implemented yet',\n    //        delay: 3000\n    //    });\n    //};\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+o',\n        description: 'Open a model from a file',\n        callback: $scope.open\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+m',\n        description: 'Merge a model from a file with current model in editor',\n        callback: $scope.merge\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+o',\n        description: 'Open a model from a node',\n        callback: $scope.openFromNode\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+m',\n        description: 'Merge a model from a node with current model in editor',\n        callback: $scope.mergeFromNode\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+g',\n        description: 'Connect to a Web Socket server and stay synced with it',\n        callback: $scope.connectSync\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+s',\n        description: 'Save the current model into a JSON file',\n        callback: function (evt) {\n          evt.preventDefault();\n          var saveFile = $scope.save;\n          $uibModal\n            .open({\n              templateUrl: 'app/components/util/filename.modal.html',\n              size: 'sm',\n              controller: function ($scope, $uibModalInstance) {\n                $scope.title = 'Save model';\n                $scope.body = 'Would you like to save your current model to a file?';\n                $scope.filename = 'model' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n                $uibModalInstance.rendered.then(function () {\n                  $timeout(function () {\n                    jQuery('#filename')\n                      .focus();\n                  }, 250);\n                });\n\n                $scope.save = function () {\n                  function endsWith(str, suffix) {\n                    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n                  }\n                  var suffix = '.json';\n                  if (endsWith($scope.filename, suffix)) {\n                    $scope.filename = $scope.filename.substr(0, $scope.filename.length - suffix.length);\n                  }\n                  saveFile(evt, $scope.filename);\n                  $uibModalInstance.close();\n                };\n              }\n            });\n        }\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+o',\n        description: 'Fix overlapping',\n        callback: $scope.fixOverlapping\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+shift+d',\n        description: 'Delete everything in the current model',\n        callback: $scope.deleteAll\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+shift+i',\n        description: 'Delete instances in the current model',\n        callback: $scope.deleteInstances\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'del',\n        description: 'Delete selected instances in the current model',\n        callback: $scope.deleteSelection\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+a',\n        description: 'Select all instances',\n        callback: function (evt) {\n          evt.preventDefault();\n          ui.selectAll();\n        }\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+c',\n        description: 'Copy the selected instance(s)',\n        callback: $scope.copy\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+v',\n        description: 'Paste the selected instance(s)',\n        callback: $scope.paste\n      });\n\n    //hotkeys.bindTo($scope).add({\n    //    combo: 'ctrl+z',\n    //    description: 'Undo the last modification',\n    //    callback: $scope.undo\n    //});\n    //\n    //hotkeys.bindTo($scope).add({\n    //    combo: 'ctrl+y',\n    //    description: 'Redo the last modification',\n    //    callback: $scope.redo\n    //});\n\n    $scope.$on('$destroy', function () {\n      unregister();\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .controller('InstanceNetworkModalCtrl', function ($scope, $uibModalInstance, $timeout, node, net, kFactory) {\n    $scope.node = node;\n    $scope.net = net;\n    $scope.newVal = {\n      name: null,\n      value: null\n    };\n\n    $scope.addNewVal = function () {\n      if ($scope.newVal.name && $scope.newVal.value) {\n        var val = kFactory.createValue();\n        val.name = $scope.newVal.name;\n        val.value = $scope.newVal.value;\n        $scope.net.addValues(val);\n        $scope.newVal.name = null;\n        $scope.newVal.value = null;\n        jQuery('input#newValName').focus();\n      }\n    };\n\n    $scope.add = function () {\n      node.addNetworkInformation($scope.net);\n      $uibModalInstance.close();\n    };\n\n    $scope.delete = function () {\n      $scope.net.delete();\n      $uibModalInstance.close();\n    };\n\n    $scope.canSave = function () {\n      return net.values.array.length > 0;\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:InstanceCtrl\n * @description\n * # InstanceCtrl\n * Controller of the editorApp instance editor\n */\nangular.module('editorApp')\n  .controller('InstanceCtrl', function ($scope, $timeout, $uibModal, hotkeys, ui, kEditor, kFactory, kInstance, kModelHelper) {\n    var vm = this;\n\n    var timeout;\n    vm.instance = null;\n    vm.type = null;\n    vm.mainCollapsed = false;\n    vm.dicCollapsed = false;\n    vm.netCollapsed = false;\n    vm.descCollapsed = false;\n    vm.fragCollapsed = {};\n\n    /**\n     * Process vm.instance TypeDefinition in order to set default values on the dictionaries\n     **/\n    function processTypeDefinition() {\n      vm.versions = vm.instance.typeDefinition.eContainer()\n        .select('typeDefinitions[name=' + vm.instance.typeDefinition.name + ']').array\n        .map(function (tdef) {\n          return tdef.version;\n        });\n      vm.instance.selectedVersion = vm.instance.typeDefinition.version;\n      vm.dus = vm.instance.typeDefinition.deployUnits.array;\n      var descMeta = vm.instance.typeDefinition.findMetaDataByID('description');\n      if (descMeta) {\n        vm.description = descMeta.value;\n      } else {\n        vm.description = '<em>- none -</em>';\n      }\n      if (vm.instance.typeDefinition.dictionaryType) {\n        vm.dicAttrs = vm.instance.typeDefinition.dictionaryType\n          .select('attributes[fragmentDependant=false]').array;\n        vm.fragDicAttrs = vm.instance.typeDefinition.dictionaryType\n          .select('attributes[fragmentDependant=true]').array;\n      } else {\n        vm.dicAttrs = [];\n        vm.fragDicAttrs = [];\n      }\n\n      // create dictionary values if none set\n      kInstance.initDictionaries(vm.instance);\n    }\n\n    /**\n     * Clean dictionary from unwanted attributes (when a version change occurs, this will strip out\n     * values that depend on unknown attributes in the new version)\n     * @param dic\n     * @param dicType\n     * @param isFragment\n     */\n    function processDictionary(dic, dicType, isFragment) {\n      if (dicType) {\n        dic.values.array.forEach(function (val) {\n          var attr = dicType.select('attributes[name=' + val.name + ']').array[0];\n          if (attr) {\n            if (vm.isTruish(attr.fragmentDependant)) {\n              if (!isFragment) {\n                val.delete();\n              }\n            } else {\n              if (isFragment) {\n                val.delete();\n              }\n            }\n          } else {\n            val.delete();\n          }\n        });\n      }\n    }\n\n    vm.changeName = function (form, name) {\n      if (form.name.$valid) {\n        vm.instance.name = name;\n      }\n    };\n\n    vm.changeVersion = function (version) {\n      if (version) {\n        vm.instance.typeDefinition = vm.instance.typeDefinition.eContainer()\n          .select('**/typeDefinitions[name=' + vm.instance.typeDefinition.name + ',version=' + version + ']').array[0];\n        processDictionary(vm.instance.dictionary, vm.instance.typeDefinition.dictionaryType, false);\n        vm.instance.fragmentDictionary.array.forEach(function (fragDic) {\n          processDictionary(fragDic, vm.instance.typeDefinition.dictionaryType, true);\n        });\n        processTypeDefinition();\n      }\n    };\n\n    vm.hasFragmentDictionary = function () {\n      if (vm.instance && vm.instance.fragmentDictionary) {\n        return vm.instance.fragmentDictionary.size() > 0;\n      } else {\n        return false;\n      }\n    };\n\n    vm.hasNetworkInformation = function () {\n      return vm.instance && (typeof (vm.instance.networkInformation) !== 'undefined');\n    };\n\n    vm.manageNetwork = function (evt, net) {\n      evt.stopPropagation();\n      $uibModal.open({\n        templateUrl: 'app/main/instance/network.modal.html',\n        size: 'md',\n        resolve: {\n          node: function () {\n            return vm.instance;\n          },\n          net: function () {\n            return net;\n          }\n        },\n        controller: 'InstanceNetworkModalCtrl'\n      });\n    };\n\n    vm.addNetwork = function () {\n      var net = kFactory.createNetworkInfo();\n      net.name = 'net' + vm.instance.networkInformation.size();\n\n      $uibModal.open({\n        templateUrl: 'app/main/instance/network.modal.html',\n        size: 'md',\n        resolve: {\n          node: function () {\n            return vm.instance;\n          },\n          net: function () {\n            return net;\n          }\n        },\n        controller: 'InstanceNetworkModalCtrl'\n      });\n    };\n\n    vm.openGroupModal = function () {\n      $uibModal.open({\n        templateUrl: 'app/main/instance/group.modal.html',\n        size: 'md',\n        resolve: {\n          group: function () {\n            return vm.instance;\n          }\n        },\n        controller: 'GroupModalCtrl'\n      });\n    };\n\n    vm.isTruish = kModelHelper.isTruish;\n\n    vm.isReadOnly = function () {\n      // TODO put that code in kModelHelper\n      if (vm.instance) {\n        var val = vm.instance.findMetaDataByID('access_mode');\n        return val && val.value === 'read-only';\n      }\n      return false;\n    };\n\n    vm.isVirtual = function () {\n      return kModelHelper.isVirtual(vm.instance);\n    };\n\n    function processSelection() {\n      $timeout(function () {\n        // do the process in a timeout to be sure it gets $digested\n        vm.instance = null;\n        vm.type = null;\n        vm.versions = [];\n        vm.dus = null;\n        vm.description = '<em>- none -</em>';\n        vm.dicAttrs = [];\n        vm.fragDicAttrs = [];\n        vm.processing = true;\n\n        var selection = kModelHelper.getSelection(kEditor.getModel());\n        if (selection.length === 1) {\n          vm.instance = selection[0];\n          if (vm.instance) {\n            vm.instance.selectedVersion = vm.instance.typeDefinition.version;\n            jQuery('.ui-notification').css('right', '260px');\n            // using preName to prevent user from naming two instances with the same name\n            vm.instance.preName = vm.instance.name;\n            vm.type = kModelHelper.getTypeDefinitionType(vm.instance.typeDefinition);\n            processTypeDefinition();\n            vm.processing = false;\n          }\n        }\n      });\n    }\n\n    processSelection();\n    var unregister = kEditor.addModelUpdateListener('selected', processSelection, true);\n    var unregister2 = kEditor.addNewModelListener('selected', processSelection);\n\n    $scope.$on('$destroy', function () {\n      unregister();\n      unregister2();\n      $timeout.cancel(timeout);\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n    .factory('groupModalHolder', function() {\n      return {\n        host: '127.0.0.1',\n        port: '9000',\n        path: '/'\n      };\n    })\n    .controller('GroupModalCtrl', function($scope, $uibModalInstance, $timeout, group, kEditor, kWs, groupModalHolder) {\n      $scope.type = 'push to';\n      $scope.action = 'push';\n      $scope.group = group;\n      $scope.selectedHost = groupModalHolder.host;\n      $scope.selectedPort = groupModalHolder.port;\n      $scope.selectedPath = groupModalHolder.path;\n      $scope.processing = false;\n      $scope.modelHasErrors = kEditor.modelHasErrors();\n\n      $scope.hosts = {\n        '127.0.0.1': 'default'\n      };\n\n      $scope.ports = {\n        '9000': 'default'\n      };\n\n      $scope.paths = {\n        '/': 'default'\n      };\n\n      $scope.changeHost = function() {\n        groupModalHolder.host = $scope.selectedHost;\n      };\n      $scope.changePort = function() {\n        groupModalHolder.port = $scope.selectedPort;\n      };\n      $scope.changePath = function() {\n        groupModalHolder.path = $scope.selectedPath;\n      };\n\n      if (group.dictionary) {\n        var host = group.dictionary.findValuesByID('host');\n        if (host && !$scope.hosts[host.value]) {\n          $scope.hosts[host.value] = group.name;\n        }\n\n        var port = group.dictionary.findValuesByID('port');\n        if (port && !$scope.ports[port.value]) {\n          $scope.ports[port.value] = group.name;\n        }\n\n        var path = group.dictionary.findValuesByID('path');\n        if (path && !$scope.paths[path.value]) {\n          $scope.paths[path.value] = group.name;\n        }\n      }\n\n      group.subNodes.array.forEach(function(node) {\n        var fragDic = group.findFragmentDictionaryByID(node.name);\n\n        if (fragDic) {\n          var port = fragDic.findValuesByID('port'),\n            path = fragDic.findValuesByID('path');\n\n          if (port && !$scope.ports[port.value]) {\n            $scope.ports[port.value] = node.name;\n          }\n\n          if (path && !$scope.paths[path.value]) {\n            $scope.paths[path.value] = node.name;\n          }\n        }\n\n        node.networkInformation.array.forEach(function(net) {\n          net.values.array.forEach(function(val) {\n            if (!$scope.hosts[val.value]) {\n              $scope.hosts[val.value] = node.name;\n            }\n          });\n        });\n      });\n\n      $scope.closeError = function() {\n        $scope.error = null;\n      };\n\n      $scope.closeModelHasErrorsWarning = function () {\n        $scope.modelHasErrors = null;\n      };\n\n      $scope.closeSuccess = function() {\n        $scope.success = null;\n      };\n\n      var ws;\n      $scope.push = function() {\n        $scope.action = 'pushed to';\n        $scope.error = null;\n        $scope.processing = true;\n        $timeout(function() {\n          ws = kWs.pushModel(\n              kEditor.getModel(),\n              $scope.selectedHost,\n              $scope.selectedPort,\n              $scope.selectedPath,\n              function(err) {\n                $timeout(function() {\n                  if (err) {\n                    $scope.processing = false;\n                    $scope.error = err.message;\n                  } else {\n                    $scope.processing = false;\n                    $scope.success = true;\n                  }\n                });\n              });\n        });\n      };\n\n      $scope.pull = function() {\n        $scope.action = 'pulled from';\n        $scope.error = null;\n        $scope.processing = true;\n        ws = kWs.getModel(\n            $scope.selectedHost,\n            $scope.selectedPort,\n            $scope.selectedPath,\n            function(err, model) {\n              $timeout(function() {\n                if (err) {\n                  $scope.processing = false;\n                  $scope.error = err.message;\n                } else {\n                  $scope.processing = false;\n                  $scope.success = true;\n                  kEditor.setModel(model);\n                }\n              });\n            });\n      };\n\n      $scope.close = function() {\n        if (ws) {\n          ws.close();\n        }\n        $uibModalInstance.close();\n      };\n    });\n","'use strict';\n\nangular.module('editorApp')\n  .controller('SelectChanModalCtrl', function ($scope, $uibModalInstance, startPort, endPort, orderByFilter, kInstance, kEditor, kFactory, kModelHelper, KWE_POSITION) {\n    var selected;\n    $scope.instances = orderByFilter(kEditor.getModel().hubs.array.filter(function (chan) {\n      chan.selected = false;\n      return !kModelHelper.isAlreadyBound(endPort, chan) &&\n        !kModelHelper.isAlreadyBound(startPort, chan) &&\n        kModelHelper.isCompatible(chan.typeDefinition, startPort.eContainer().eContainer()) &&\n        kModelHelper.isCompatible(chan.typeDefinition, endPort.eContainer().eContainer());\n    }), 'typeDefinition.name');\n    $scope.types = orderByFilter(kModelHelper.getChannelTypes(kEditor.getModel()).filter(function (type) {\n      type.selected = false;\n      return kModelHelper.isCompatible(type, startPort.eContainer().eContainer()) &&\n        kModelHelper.isCompatible(type, endPort.eContainer().eContainer());\n    }), 'name');\n\n    if ($scope.types.length > 0) {\n      $scope.types[0].selected = true;\n      selected = $scope.types[0];\n    }\n\n    $scope.isValid = function () {\n      for (var i = 0; i < $scope.instances.length; i++) {\n        if ($scope.instances[i].selected) {\n          return true;\n        }\n      }\n\n      for (i = 0; i < $scope.types.length; i++) {\n        if ($scope.types[i].selected) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    $scope.select = function (chan) {\n      if (!chan.selected) {\n        $scope.instances.forEach(function (elem) {\n          if (chan.path() !== elem.path() && elem.selected) {\n            elem.selected = false;\n          }\n        });\n        $scope.types.forEach(function (elem) {\n          if (chan.path() !== elem.path() && elem.selected) {\n            elem.selected = false;\n          }\n        });\n        chan.selected = !chan.selected;\n        selected = chan;\n      }\n    };\n\n    $scope.confirm = function () {\n      var chanInstance;\n      if (selected.getRefInParent() === 'typeDefinitions') {\n        // selected elem is a TypeDefinition => create an instance\n        chanInstance = kFactory.createChannel();\n        chanInstance.name = 'chan' + parseInt(Math.random() * 1000, 10);\n        chanInstance.typeDefinition = selected;\n        chanInstance.started = true;\n        var pos = kFactory.createValue();\n        pos.name = KWE_POSITION;\n        pos.value = JSON.stringify({ x: 100, y: 100 });\n        chanInstance.addMetaData(pos);\n        kInstance.initDictionaries(chanInstance);\n        kEditor.getModel().addHubs(chanInstance);\n      } else {\n        chanInstance = selected;\n      }\n      $uibModalInstance.close(chanInstance);\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:EditorCtrl\n * @description\n * # EditorCtrl\n * Controller of the editorApp editor\n */\nangular.module('editorApp')\n  .controller('EditorCtrl', function ($scope, kEditor, ui, uiUtils, kModelHelper, kFactory, kInstance, hotkeys, Notification, KWE_POSITION, KWE_FOLDED) {\n    // init the UI kFactory\n    ui.init();\n\n    // process model to create the instance UIs\n    kEditor.drawModel();\n\n    $scope.dropDroppable = {\n      onDrop: 'onDrop'\n    };\n    $scope.dropOptions = {\n      accept: function (obj) {\n        var accept = false;\n        var pkgPath = obj[0].dataset.pkgPath;\n        var tdefName = obj[0].innerHTML.trim();\n        var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n        var tdef = kModelHelper.findBestVersion(tdefs.array);\n        var type = kModelHelper.getTypeDefinitionType(tdef);\n\n        if (type === 'component') {\n          accept = ui.getDropTarget();\n        } else {\n          accept = true;\n        }\n\n        // TODO improve to handle TypeDef checks\n        return accept;\n      }\n    };\n\n    /**\n     * Adds a new instance to the model based on the dropped TypeDefinition\n     * @param evt\n     * @param obj\n     */\n    $scope.onDrop = function (evt, obj) {\n      var pkgPath = angular.element(obj.draggable).scope().tdef.pkgPath;\n      var tdefName = angular.element(obj.draggable).scope().tdef.name;\n      var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n      var tdef = kModelHelper.findBestVersion(tdefs.array);\n      var type = kModelHelper.getTypeDefinitionType(tdef);\n      var m = ui.editor.transform().localMatrix;\n\n      function preProcess(instance) {\n        instance.typeDefinition = tdef;\n        instance.started = true;\n        var pos = kFactory.createValue();\n        pos.name = KWE_POSITION;\n        var pt = uiUtils.getPointInEditor(ui.mousePos.x, ui.mousePos.y);\n        pos.value = JSON.stringify({\n          x: pt.x - m.e,\n          y: pt.y - m.f\n        });\n        instance.addMetaData(pos);\n        kInstance.initDictionaries(instance);\n      }\n\n      var model = kEditor.getModel();\n      var dropTarget = ui.getDropTarget();\n      var instance, node;\n      switch (type) {\n        case 'node':\n          instance = kFactory.createContainerNode();\n          instance.name = 'node' + parseInt(Math.random() * 1000, 10);\n          preProcess(instance);\n          model.addNodes(instance);\n          if (dropTarget) {\n            node = model.findByPath(dropTarget.attr('data-path'));\n            if (node) {\n              node.addHosts(instance);\n            }\n          }\n          break;\n\n        case 'group':\n          instance = kFactory.createGroup();\n          instance.name = 'group' + parseInt(Math.random() * 1000, 10);\n          preProcess(instance);\n          kInstance.initFragmentDictionaries(instance);\n          model.addGroups(instance);\n          break;\n\n        case 'component':\n          instance = kFactory.createComponentInstance();\n          instance.name = 'comp' + parseInt(Math.random() * 1000, 10);\n          preProcess(instance);\n          if (dropTarget) {\n            node = model.findByPath(dropTarget.attr('data-path'));\n            if (node) {\n              node.addComponents(instance);\n            }\n          } else {\n            Notification.warning({\n              title: 'Add component',\n              message: 'You have to drop components in nodes',\n              delay: 5000\n            });\n          }\n          break;\n\n        case 'channel':\n          instance = kFactory.createChannel();\n          instance.name = 'chan' + parseInt(Math.random() * 1000, 10);\n          preProcess(instance);\n          kInstance.initFragmentDictionaries(instance);\n          model.addHubs(instance);\n          break;\n      }\n\n      ui.setDropTarget(null);\n      return true;\n    };\n\n    /**\n     * Moves selected instances up, right, down, left\n     * @param {String} axis \"up\", \"down\", \"right\", \"left\"\n     * @param {Number} delta number of pixel to offset from current position\n     */\n    function moveInstance(axis, delta) {\n      return function () {\n        var selected = ui.getSelectedPaths();\n        if (selected) {\n          selected.forEach(function (path) {\n            if (path) {\n              var elem = kEditor.getModel().findByPath(path);\n              if (elem && typeof elem.findMetaDataByID === 'function') {\n                var posMeta = elem.findMetaDataByID(KWE_POSITION);\n                if (posMeta) {\n                  var pt = JSON.parse(posMeta.value);\n                  switch (axis) {\n                    case 'up':\n                      pt.y -= delta;\n                      break;\n\n                    case 'right':\n                      pt.x += delta;\n                      break;\n\n                    case 'down':\n                      pt.y += delta;\n                      break;\n\n                    case 'left':\n                      pt.x -= delta;\n                      break;\n                  }\n                  posMeta.value = JSON.stringify(pt);\n                }\n              }\n            }\n          });\n        }\n      };\n    }\n\n    hotkeys.bindTo($scope).add({\n      combo: 'f',\n      description: 'Fold/Unfold selected node',\n      callback: function () {\n        var selected = ui.getSelectedPaths();\n        if (selected) {\n          selected.forEach(function (path) {\n            if (path) {\n              var elem = kEditor.getModel().findByPath(path);\n              if (kModelHelper.getTypeDefinitionType(elem.typeDefinition) === 'node') {\n                var foldMeta = elem.findMetaDataByID(KWE_FOLDED);\n                if (!foldMeta) {\n                  foldMeta = kFactory.createValue();\n                  foldMeta.name = KWE_FOLDED;\n                  foldMeta.value = true;\n                  elem.addMetaData(foldMeta);\n                } else {\n                  var val = kModelHelper.isTruish(foldMeta.value);\n                  foldMeta.value = !val;\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'up',\n      description: 'Move the selected instances 1 pixel up',\n      callback: moveInstance('up', 1)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'ctrl+up',\n      description: 'Move the selected instances 15 pixel up',\n      callback: moveInstance('up', 15)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'right',\n      description: 'Move the selected instances 1 pixel right',\n      callback: moveInstance('right', 1)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'ctrl+right',\n      description: 'Move the selected instances 15 pixel right',\n      callback: moveInstance('right', 15)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'down',\n      description: 'Move the selected instances 1 pixel down',\n      callback: moveInstance('down', 1)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'ctrl+down',\n      description: 'Move the selected instances 15 pixel down',\n      callback: moveInstance('down', 15)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'left',\n      description: 'Move the selected instances 1 pixel left',\n      callback: moveInstance('left', 1)\n    });\n\n    hotkeys.bindTo($scope).add({\n      combo: 'ctrl+left',\n      description: 'Move the selected instances 15 pixel left',\n      callback: moveInstance('left', 15)\n    });\n  });\n","'use strict';\n(function () {\n\n  angular.module('editorApp')\n    .component('tdefDetail', {\n      templateUrl: 'app/libraries/tdef-detail.html',\n      bindings: {\n        tdef: '<',\n        versions: '<',\n        disabled: '<',\n        onVersionChanged: '&',\n        onAddDusToModel: '&',\n      },\n      controller: TdefDetailController\n    });\n\n  TdefDetailController.$inject = ['$q', 'kRegistry'];\n\n  function TdefDetailController($q, kRegistry) {\n    var ctrl = this;\n\n    ctrl.versions = null;\n    ctrl.selectedVersion = null;\n    ctrl.baseUrl = kRegistry.getUrl();\n    ctrl.$onChanges = $onChanges;\n    ctrl.changeVersion = changeVersion;\n    ctrl.addDusToModel = addDusToModel;\n\n    function $onChanges(changes) {\n      if (changes.versions && changes.versions.currentValue) {\n        ctrl.selectedVersion = ctrl.versions.find(function (tdef) {\n          return ctrl.tdef.version === tdef.version;\n        });\n      }\n    }\n\n    function changeVersion() {\n      if (!ctrl.disabled) {\n        ctrl.onVersionChanged({ tdef: ctrl.selectedVersion });\n      }\n    }\n\n    function addDusToModel(dus) {\n      if (!ctrl.disabled) {\n        ctrl.onAddDusToModel({ dus: dus });\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('libraries', {\n        parent: 'app',\n        url: '/libs',\n        views: {\n          'content@': {\n            templateUrl: 'app/libraries/libraries.html',\n            controller: 'LibrariesCtrl',\n            controllerAs: 'vm'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:LibrariesCtrl\n * @description\n * # LibrariesCtrl\n * Controller of the editorApp registry libraries page\n */\nangular.module('editorApp')\n  .controller('LibrariesCtrl', function ($q, $uibModal, kRegistry, kEditor, kFactory, Notification) {\n    var vm = this;\n    vm.namespaces = [];\n    vm.tdefs = [];\n    vm.selectNs = selectNs;\n    vm.selectTdef = selectTdef;\n    vm.tdefDetail = null;\n    vm.changeTdefVersion = changeTdefVersion;\n    vm.addDusToModel = addDusToModel;\n\n    // initial process: retrieve all namespaces from registry\n    kRegistry.namespace.all()\n      .then(function (namespaces) {\n        vm.namespaces = namespaces.map(function (ns) {\n          if (ns.name === 'kevoree') {\n            ns.active = true;\n          } else {\n            ns.active = false;\n          }\n          return ns;\n        });\n      })\n      .then(updateTdefs);\n\n    function updateTdefs() {\n      vm.tdefs = null;\n      vm.tdefDetail = null;\n      vm.tdefDetailVersions = null;\n      var activeNs = vm.namespaces.find(function (ns) {\n        return ns.active;\n      });\n      if (activeNs) {\n        return getTdefsByNamespace(activeNs)\n          .then(function () {\n            return getTdefVersions(vm.tdefDetail);\n          })\n          .then(function () {\n            return getTdefDus(vm.tdefDetail);\n          });\n      } else {\n        return null;\n      }\n    }\n\n    function getTdefsByNamespace(namespace) {\n      return kRegistry.tdef.getLatestsByNamespace(namespace.name)\n        .then(function (tdefs) {\n          vm.tdefs = tdefs.map(function (tdef, i) {\n            if (i === 0) {\n              tdef.active = true;\n              vm.tdefDetail = tdef;\n            } else {\n              tdef.active = false;\n            }\n            return tdef;\n          });\n        });\n    }\n\n    function getTdefVersions(tdef) {\n      if (tdef) {\n        return kRegistry.tdef.getAllByNamespaceAndName(tdef.namespace, tdef.name)\n          .then(function (tdefs) {\n            vm.tdefDetailVersions = tdefs;\n          });\n      } else {\n        return null;\n      }\n    }\n\n    function getTdefDus(tdef) {\n      if (tdef) {\n        return $q.all([\n          kRegistry.du.getReleases(tdef.namespace, tdef.name, tdef.version),\n          kRegistry.du.getLatests(tdef.namespace, tdef.name, tdef.version)\n        ]).then(function (results) {\n          vm.tdefDetail.releases = transformDUS(results[0]);\n          vm.tdefDetail.latests = transformDUS(results[1]);\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function selectNs(nsClicked) {\n      vm.disabled = true;\n      vm.namespaces.forEach(function (ns) {\n        if (ns.name === nsClicked.name) {\n          ns.active = !ns.active;\n        } else {\n          ns.active = false;\n        }\n      });\n      updateTdefs()\n        .then(function () {\n          vm.disabled = false;\n        });\n    }\n\n    function selectTdef(tdefClicked) {\n      vm.disabled = true;\n      vm.tdefDetail = null;\n      vm.tdefDetailVersions = null;\n      vm.tdefs.forEach(function (tdef) {\n        if (tdef.name === tdefClicked.name) {\n          tdef.active = !tdef.active;\n        } else {\n          tdef.active = false;\n        }\n      });\n      vm.tdefDetail = vm.tdefs.find(function (tdef) {\n        return tdef.active;\n      });\n      changeTdefVersion(vm.tdefDetail)\n        .then(function () {\n          vm.disabled = false;\n        });\n    }\n\n    function transformDUS(dus) {\n      dus.sort(function (a, b) {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return dus.map(function (du) {\n        du.active = false;\n        return du;\n      });\n    }\n\n    function changeTdefVersion(tdef) {\n      if (tdef) {\n        vm.tdefDetail = tdef;\n        return getTdefVersions(tdef)\n          .then(function () {\n            return getTdefDus(tdef);\n          });\n      } else {\n        return $q.resolve();\n      }\n    }\n\n    function addDusToModel(dus) {\n      var model = kEditor.getModel();\n      var tdef = model.select('/packages['+vm.tdefDetail.namespace+']/typeDefinitions[name='+vm.tdefDetail.name+',version='+vm.tdefDetail.version+']').array[0];\n      if (tdef) {\n        $uibModal.open({\n          templateUrl: 'app/libraries/dus.modal.html',\n          size: 'md',\n          resolve: {\n            tdef: function () {\n              return vm.tdefDetail;\n            },\n            currentDus: function () {\n              return tdef.deployUnits.array;\n            },\n            dus: function () {\n              return dus;\n            }\n          },\n          controller: 'DusModalController as vm'\n        }).result.then(function () {\n          // delete the previous deployUnits of the typeDef\n          tdef.deployUnits.array = [];\n          mergeDUSInModel(tdef, dus);\n          Notification.success({\n            title: 'Add to model',\n            message: 'DeployUnits successfully added to <strong>'+tdef.eContainer().name+'.'+tdef.name+'/'+tdef.version+'</strong>'\n          });\n        });\n      } else {\n        // no trace of typeDef in current model\n        var pkg = model.findPackagesByID(vm.tdefDetail.namespace);\n        if (!pkg) {\n          // namespace is not in model yet: add it\n          pkg = kFactory.createPackage().withName(vm.tdefDetail.namespace);\n          model.addPackages(pkg);\n        }\n        pkg.addTypeDefinitions(vm.tdefDetail.model);\n        tdef = model.select('/packages['+vm.tdefDetail.namespace+']/typeDefinitions[name='+vm.tdefDetail.name+',version='+vm.tdefDetail.version+']').array[0];\n        mergeDUSInModel(tdef, dus);\n        Notification.success({\n          title: 'Add to model',\n          message: '<strong>'+tdef.eContainer().name+'.'+tdef.name+'/'+tdef.version+'</strong> successfully added to model'\n        });\n      }\n    }\n\n    function mergeDUSInModel(tdef, dus) {\n      dus.forEach(function (du) {\n        if (!du.error) {\n          // add DeployUnits to package\n          tdef.eContainer().addDeployUnits(du.model);\n          // add DeployUnits to typedef\n          tdef.addDeployUnits(du.model);\n        }\n      });\n    }\n  });\n","'use strict';\n  (function () {\n\n  angular.module('editorApp')\n    .component('klist', {\n      templateUrl: 'app/libraries/klist.html',\n      bindings: {\n        parent: '@', // @ for string constant\n        title: '@',\n        placeholder: '@',\n        props: '<', // < for one-way binding\n        elems: '<', // = for two-way binding\n        onSelect: '&', // & for output func\n        disabled: '<'\n      },\n      controller: KListController,\n    });\n\n  function KListController() {\n    var ctrl = this;\n\n    if (!angular.isDefined(ctrl.props))      { ctrl.props = []; }\n    if (!angular.isDefined(ctrl.selectable)) { ctrl.selectable = true; }\n\n    ctrl.select = function (elem) {\n      if (!ctrl.disabled) {\n        ctrl.onSelect({ elem: elem });\n      }\n    };\n  }\n})();\n","'use strict';\n\n(function () {\n  angular.module('editorApp')\n    .controller('DusModalController', DusModalController);\n\n  DusModalController.$inject = ['tdef', 'currentDus', 'dus'];\n\n  function DusModalController(tdef, currentDus, dus) {\n    var vm = this;\n\n    vm.tdef = tdef;\n    vm.dus = dus;\n    vm.currentDus = currentDus;\n  }\n})();\n","'use strict';\n\n(function () {\n  angular.module('editorApp')\n    .component('dusInstaller', {\n      templateUrl: 'app/libraries/dus-installer.html',\n      bindings: {\n        tag: '@',\n        dus: '<',\n        disabled: '<',\n        onAddToModel: '&'\n      },\n      controller: DusInstallerController,\n    });\n\n  DusInstallerController.$inject = [];\n\n  function DusInstallerController() {\n    var ctrl = this;\n\n    ctrl.addToModel = addToModel;\n\n    function addToModel() {\n      if (!ctrl.disabled) {\n        ctrl.onAddToModel({ dus: ctrl.dus });\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('kevscript', {\n        parent: 'app',\n        url: '/kevscript',\n        views: {\n          'content@': {\n            templateUrl: 'app/kevscript/kevscript.html',\n            controller: 'KevScriptCtrl'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:KevScriptCtrl\n * @description\n * # KevScriptCtrl\n * Controller of the editorApp kevscript editor page\n */\nangular.module('editorApp')\n  .controller('KevScriptCtrl', function ($rootScope, $scope, $uibModal, $timeout, $state, hotkeys, kFactory, kEditor, kScript, saveFile, storage, Notification) {\n    var editor = null;\n    var localModel = null;\n    var modelCompare = kFactory.createModelCompare();\n    var modelCloner = kFactory.createModelCloner();\n\n    function getModel() {\n      if (localModel) {\n        modelCompare.merge(localModel, kEditor.getModel()).applyOn(localModel);\n      } else {\n        localModel = modelCloner.clone(kEditor.getModel());\n      }\n      return localModel;\n    }\n\n    function saveToFile(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      $uibModal\n        .open({\n          templateUrl: 'app/components/util/filename.modal.html',\n          size: 'sm',\n          scope: $scope,\n          controller: function ($scope, $uibModalInstance) {\n            $scope.title = 'Save Kevscript';\n            $scope.body = 'Would you like to save your current KevScript to a file?';\n            $scope.filename = 'script' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n\n            $scope.save = function () {\n              function endsWith(str, suffix) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n              }\n              var suffix = '.kevs';\n              if (endsWith($scope.filename, suffix)) {\n                $scope.filename = $scope.filename.substr(0, $scope.filename.length - '.kevs'.length);\n              }\n              saveFile.save($scope.kevscript, $scope.filename, suffix, 'kevscript');\n              $uibModalInstance.close();\n            };\n          }\n        })\n        .result.finally(function () {\n          if (editor) {\n            editor.focus();\n          }\n        });\n    }\n\n    function openFromFile(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      jQuery('input#kevscript-upload').click();\n    }\n\n    $scope.kevscript = '';\n    $scope.processing = false;\n    $scope.message = null;\n    $scope.ctxVars = {};\n    $scope.error = null;\n    $scope.lintWarnings = [];\n    $scope.linting = false;\n    $scope.typing = false;\n    $scope.editorState = 'idle';\n    $scope.editorOptions = {\n      mode: 'kevscript',\n      theme: 'kevscript',\n      lineWrapping: true,\n      lineNumbers: true,\n      styleActiveLine: true,\n      extraKeys: {\n        'Shift-Enter': function () {\n          $scope.merge();\n        },\n        'Ctrl-Space': function (cm) {\n          cm.showHint({\n            hint: CodeMirror.hint.kevscript,\n            getModel: getModel,\n            completeSingle: false,\n            alignWithWord: false\n          });\n        },\n        'Ctrl-S': saveToFile,\n        'Ctrl-O': openFromFile\n      },\n      gutters: ['CodeMirror-lint-markers'],\n      lint: {\n        getAnnotations: CodeMirror.lint.kevscript(kScript, getModel, $scope.ctxVars),\n        async: true\n      }\n    };\n\n    $scope.dndLoad = function (filename, data) {\n      if (filename.endsWith('.kevs')) {\n        $scope.kevscript = data;\n      } else {\n        $scope.kevscript = '';\n        $rootScope.dndLoad(filename, data);\n      }\n    };\n\n    $scope.editorLoaded = function (_editor) {\n      editor = _editor;\n      CodeMirror.hint.kevscript.async = true;\n      editor.on('beforeChange', function () {\n        $timeout(function () {\n          $scope.editorState = 'typing';\n          $scope.error = null;\n          $scope.lintWarnings = [];\n        });\n      });\n      editor.on('lintStart', function () {\n        $timeout(function () {\n          $scope.editorState = 'linting';\n        });\n      });\n      editor.on('lintDone', function (result) {\n        $timeout(function () {\n          $scope.editorState = 'idle';\n          $scope.model = result.model;\n          $scope.error = result.error;\n          $scope.lintWarnings = result.warnings;\n          $scope.linting = false;\n          if (!result.error) {\n            localModel = result.model;\n          }\n        });\n      });\n      editor.focus();\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.uploadKevscript = function () {\n      var kevscriptUpload = jQuery('#kevscript-upload');\n      kevscriptUpload.on('change', function (event) {\n        var reader = new FileReader();\n        reader.onloadend = function () {\n          $scope.kevscript = editor.setValue(reader.result);\n        };\n        reader.readAsBinaryString(event.target.files[0]);\n      });\n      kevscriptUpload.trigger('click');\n    };\n\n    $scope.closeMessage = function () {\n      $scope.message = null;\n    };\n\n    $scope.isMergeable = function () {\n      return $scope.editorState === 'idle' &&\n        !$scope.processing &&\n        !$scope.error &&\n        $scope.kevscript.trim().length > 0;\n    };\n\n    $scope.clearCtxVars = function () {\n      Object.keys($scope.ctxVars).forEach(function (key) {\n        delete $scope.ctxVars[key];\n      });\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.addCtxVar = function (ctxVar) {\n      if (ctxVar.key && ctxVar.value) {\n        $scope.ctxVars[ctxVar.key] = ctxVar.value;\n        ctxVar.key = '';\n        ctxVar.value = '';\n        CodeMirror.signal(editor, 'change', editor);\n      }\n    };\n\n    $scope.onFileLoaded = function (filename, data) {\n      $scope.kevscript = data;\n    };\n\n    $scope.removeCtxVar = function (key) {\n      delete $scope.ctxVars[key];\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.merge = function () {\n      if (!$scope.processing) {\n        $scope.processing = true;\n        $timeout(function () {\n          kEditor.setModel($scope.model, function (err) {\n            $scope.processing = false;\n            if (err) {\n              $scope.error = err;\n            } else {\n              editor.setValue('');\n              Notification.success({\n                title: 'KevScript',\n                message: 'Successfully merged'\n              });\n            }\n          });\n        });\n      }\n    };\n\n    $scope.model2kevs = function () {\n      try {\n        var modelStr = kScript.parseModel(kEditor.getModel());\n        editor.setValue(modelStr);\n      } catch (err) {\n        console.warn('[kevscript.controller.model2kevs()] Error creating Kevscript from model'); // eslint-disable-line\n        console.error(err.stack); // eslint-disable-line\n        Notification.error({\n          title: 'KevScript parser',\n          message: 'Unable to convert current model to KevScript',\n          delay: 5000\n        });\n      }\n    };\n\n    $scope.save = saveToFile;\n    $scope.open = openFromFile;\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+o',\n        description: 'Open a KevScript from a file',\n        callback: $scope.open\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+s',\n        description: 'Save current KevScript to a file',\n        callback: $scope.save\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'shift+enter',\n        description: 'Merges current KevScript to model',\n        callback: function () {\n          if ($scope.isMergeable()) {\n            $scope.merge();\n          }\n        }\n      });\n\n    $scope.toggleShortcutHelp = function () {\n      hotkeys.toggleCheatSheet();\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n    .factory('util', function () {\n        /**\n         *\n         * @param val\n         * @returns {boolean}\n         */\n      function isTruish(val) {\n        return (val === 'true' || val > 0 || val === true);\n      }\n\n        /**\n         * @param {number} length optional\n         * @returns {string}\n         */\n      function randomString(length) {\n        length = length || 5;\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (var i=0; i < length; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n      }\n\n        /**\n         * @param {number} min val optional (default: 0)\n         * @param {number} max val optional (default: 65535)\n         * @returns {number}\n         */\n      function randomNumber(min, max) {\n        if (typeof min !== 'number') { min = 0; }\n        if (typeof max !== 'number') { max = 65535; }\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n\n        /**\n         * @returns {boolean}\n         */\n      function randomBoolean() {\n        return Math.random() < 0.5;\n      }\n\n        /**\n         * @param {array}\n         * @returns {array} unique (using \"===\" check) items array\n         */\n      function arrayUnique(array) {\n        var a = array.concat();\n        for (var i=0; i<a.length; ++i) {\n          for (var j=i+1; j<a.length; ++j) {\n            if (a[i] === a[j]) {\n              a.splice(j--, 1);\n            }\n          }\n        }\n        return a;\n      }\n\n      return {\n        isTruish: isTruish,\n        randomString: randomString,\n        randomNumber: randomNumber,\n        randomBoolean: randomBoolean,\n        arrayUnique: arrayUnique\n      };\n    });\n","'use strict';\n\nangular.module('editorApp')\n    .filter('trustHtml', function ($sce) {\n      return function (text) {\n        return $sce.trustAsHtml(text);\n      };\n    });\n","'use strict';\n\n(function () {\n  angular.module('editorApp')\n    .component('truncate', {\n      template: '<p class=\"text-justify\" ng-bind-html=\"$ctrl.trustedHtml\"></p><a ng-if=\"$ctrl.expandable\" href ng-click=\"$ctrl.toggle()\">{{ $ctrl.toggleText }}</a>',\n      bindings: {\n        content: '<',\n        length: '<'\n      },\n      controller: TruncateController\n    });\n\n  TruncateController.$inject = ['$sce'];\n\n  function TruncateController($sce) {\n    var ctrl = this;\n\n    ctrl.expanded = false;\n    ctrl.expandable = false;\n    ctrl.toggleText = 'Read more';\n    ctrl.$onChanges = $onChanges;\n    ctrl.toggle = toggle;\n    ctrl.expand = expand;\n    ctrl.reduce = reduce;\n\n    function $onChanges(changes) {\n      if (changes.content.currentValue) {\n        ctrl.expanded = true;\n        if (!angular.isNumber(ctrl.length)) {\n          ctrl.length = 200;\n        }\n        ctrl.expandable = ctrl.content.length > ctrl.length;\n        ctrl.toggleText = 'Reduce';\n        reduce();\n      }\n    }\n\n    function reduce() {\n      var modifiedContent = ctrl.content.substr(0, ctrl.length);\n      if (ctrl.expandable) {\n        modifiedContent += '...';\n      }\n      ctrl.expanded = false;\n      ctrl.toggleText = 'Read more';\n      ctrl.trustedHtml = $sce.trustAsHtml(modifiedContent);\n    }\n\n    function expand() {\n      ctrl.expanded = true;\n      ctrl.toggleText = 'Reduce';\n      ctrl.trustedHtml = $sce.trustAsHtml(ctrl.content);\n    }\n\n    function toggle() {\n      if (ctrl.expanded) {\n        reduce();\n      } else {\n        expand();\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n    .factory('saveFile', function () {\n      return {\n            /**\n             *\n             * @param data data to put into file\n             * @param filename file name without extension (null will use current time in milliseconds)\n             * @param ext file extension starting with a dot (ie. \".json\")\n             * @param type file mimetype (if none given: \"text/plain\")\n             */\n        save: function (data, filename, ext, type) {\n          filename = filename || 'model'+(Math.floor(Math.random() * (1000 - 100)) + 100);\n          ext = ext || '.txt';\n          type = type || 'text/plain';\n\n          var kevsAsBlob = new Blob([data], { type: type });\n\n          var downloadLink = document.createElement('a');\n          downloadLink.download = filename + ext;\n          downloadLink.innerHTML = 'Download File';\n          if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n                    // Chrome allows the link to be clicked\n                    // without actually adding it to the DOM.\n            downloadLink.href = URL.createObjectURL(kevsAsBlob);\n          } else {\n                    // Firefox requires the link to be added to the DOM\n                    // before it can be clicked.\n            downloadLink.href = URL.createObjectURL(kevsAsBlob);\n            downloadLink.onclick = function (e) {\n              document.body.removeChild(e.target);\n            };\n            downloadLink.style.display = 'none';\n            document.body.appendChild(downloadLink);\n          }\n\n          downloadLink.click();\n        }\n      };\n    });\n","'use strict';\n\nangular.module('editorApp').directive('onData', function($parse) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: function(scope, element, attrs) {\n      var fn = $parse(attrs.onData);\n\n      element.on('change', function(evt) {\n        var reader = new FileReader();\n\n        reader.onload = function(onLoadEvt) {\n          scope.$apply(function() {\n            fn(scope, {\n              $data: onLoadEvt.target.result,\n              $name: evt.target.files[0].name\n            });\n          });\n        };\n\n        try {\n          reader.readAsText(evt.target.files[0]);\n        } catch (ignore) { /* noop */ }\n      });\n\n      element.on('click', function() {\n        this.value = null;\n      });\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .filter('namingPattern', function (util) {\n    var rInt = new RegExp('\\\\{randomInt(:(\\\\d+):(\\\\d+))?\\\\}', 'g'),\n      rStr = new RegExp('\\\\{randomStr(:(\\\\d+))?\\\\}', 'g');\n\n    return function (text, map) {\n      if (typeof text === 'string') {\n        if (typeof map === 'object') {\n          Object.keys(map).forEach(function (key) {\n            text = text.replace(new RegExp('{' + key + '}', 'g'), map[key]);\n          });\n        }\n\n        var rIntMatch = rInt.exec(text);\n        var rIntVal = util.randomNumber();\n        if (rIntMatch && rIntMatch[2] && rIntMatch[3]) {\n          rIntVal = util.randomNumber(parseInt(rIntMatch[2], 10), parseInt(rIntMatch[3], 10));\n        }\n        var rStrMatch = rStr.exec(text);\n        var rStrVal = util.randomString();\n        if (rStrMatch && rStrMatch[2]) {\n          rStrVal = util.randomString(parseInt(rStrMatch[2], 10));\n        }\n        return text.replace(rInt, rIntVal)\n          .replace(rStr, rStrVal);\n      } else {\n        throw new Error('namingPattern filter must be applied on string only.');\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kModelHelper', function (kFactory, KWE_POSITION, KWE_TAG, KWE_SELECTED, KWE_FOLDED) {\n    function genNewName(instance, type, count) {\n      if (typeof count === 'undefined') {\n        count = 0;\n      }\n      var newName = instance.name + '_' + count;\n      var conflictInst;\n      switch (type) {\n        case 'node':\n          conflictInst = instance.eContainer().findNodesByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'group':\n          conflictInst = instance.eContainer().findGroupsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'channel':\n          conflictInst = instance.eContainer().findHubsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'component':\n          conflictInst = instance.eContainer().findComponentsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n      }\n      return newName;\n    }\n\n    return {\n      /**\n       *\n       * @param pkg\n       * @returns {*}\n       */\n      genPkgName: function (pkg) {\n        var name = pkg.name;\n\n        function walk(elem) {\n          if (elem.eContainer()) {\n            name = elem.name + '.' + name;\n            walk(elem.eContainer());\n          }\n        }\n        walk(pkg.eContainer());\n        return name;\n      },\n\n      getFqn: function (tdef) {\n        var pkg = this.genPkgName(tdef.eContainer());\n        if (pkg === 'org.kevoree.library') {\n          pkg = '';\n        } else {\n          pkg += '.';\n        }\n        return pkg + tdef.name + '/' + tdef.version;\n      },\n\n      /**\n       *\n       * @param tdef\n       * @returns {*}\n       */\n      getTypeDefinitionType: function (tdef) {\n        if (tdef) {\n          switch (tdef.metaClassName()) {\n            case 'org.kevoree.NodeType':\n              return 'node';\n\n            case 'org.kevoree.GroupType':\n              return 'group';\n\n            case 'org.kevoree.ComponentType':\n              return 'component';\n\n            case 'org.kevoree.ChannelType':\n              return 'channel';\n          }\n        }\n        return null;\n      },\n\n      /**\n       *\n       * @param tdefs\n       * @returns {*}\n       */\n      findBestVersion: function (tdefs) {\n        var best = tdefs[0];\n        for (var i=1; i < tdefs.length; i++) {\n          if (parseInt(best.version, 10) <= parseInt(tdefs[i].version, 10)) {\n            best = tdefs[i];\n          }\n        }\n        return best;\n      },\n\n      /**\n       *\n       * @param tdef\n       * @returns {Array}\n       */\n      getPlatforms: function (tdef) {\n        var platforms = [];\n\n        if (tdef) {\n          tdef.deployUnits.array.forEach(function (du) {\n            var platform = du.findFiltersByID('platform');\n            if (platform && platforms.indexOf(platform.value) === -1) {\n              platforms.push(platform.value);\n            }\n          });\n        }\n\n        return platforms;\n      },\n\n      /**\n       * Returns the list of KWE_TAG from the instance if any\n       * @param instance\n       * @returns {array}\n       */\n      getTags: function (instance) {\n        var tags = [];\n        var meta = instance.findMetaDataByID(KWE_TAG);\n        if (meta && meta.value.length > 0) {\n          tags = meta.value.split(',');\n        }\n        return tags;\n      },\n\n      /**\n       *\n       * @param node\n       * @returns {number}\n       */\n      getNodeTreeHeight: function getNodeTreeHeight(node) {\n        if (node.hosts.size() === 0) {\n          return 0;\n        }\n\n        var heights = node.hosts.array.map(getNodeTreeHeight);\n        var max = 0;\n        heights.forEach(function (height) {\n          if (height > max) {\n            max = height;\n          }\n        });\n        return max + 1;\n      },\n\n      /**\n       * Returns all the node types of the given model\n       */\n      getNodeTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.NodeType';\n        });\n      },\n\n      /**\n       * Returns all the group types of the given model\n       */\n      getGroupTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.GroupType';\n        });\n      },\n\n      /**\n       * Returns all the component types of the given model\n       */\n      getComponentTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.ComponentType';\n        });\n      },\n\n      /**\n       * Returns all the channel types of the given model\n       */\n      getChannelTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.ChannelType';\n        });\n      },\n\n      /**\n       *\n       * @param nodes\n       * @returns {Array}\n       */\n      getNodeTreeHeights: function (nodes) {\n        var heights = [];\n        nodes.forEach(function (node) {\n          var height = this.getNodeTreeHeight(node);\n          if (heights.indexOf(height) === -1) {\n            heights.push(height);\n          }\n        }.bind(this));\n        return heights;\n      },\n\n      /**\n       *\n       * @param comp\n       * @returns {number}\n       */\n      getCompDepth: function (comp) {\n        var depth = 0;\n\n        function walk(node) {\n          if (node.host) {\n            depth += 1;\n            walk(node.host);\n          }\n        }\n        walk(comp.eContainer());\n\n        return depth;\n      },\n\n      getNbInstances: function (model) {\n        return this.getNbNodes(model) +\n          this.getNbGroups(model) +\n          this.getNbChannels(model) +\n          this.getNbComponents(model);\n      },\n\n      getNbNodes: function (model) {\n        return model.nodes.array.length;\n      },\n\n      getNbGroups: function (model) {\n        return model.groups.array.length;\n      },\n\n      getNbChannels: function (model) {\n        return model.hubs.array.length;\n      },\n\n      getNbComponents: function (model) {\n        var count = 0;\n        model.nodes.array.forEach(function (node) {\n          count += node.components.array.length;\n        });\n        return count;\n      },\n\n      /**\n       * Returns the highest node instance containing this component or node\n       * @param instance ContainerNode\n       */\n      getHighestNode: function (instance) {\n        switch (instance.getRefInParent()) {\n          case 'components':\n            return this.getHighestNode(instance.eContainer());\n\n          case 'hosts':\n            return this.getHighestNode(instance.host);\n\n          case 'nodes':\n            if (instance.host) {\n              return this.getHighestNode(instance.host);\n            } else {\n              return instance;\n            }\n        }\n      },\n\n      /**\n       * Checks if tdefSrc is compatible with this node instance\n       * @param tdef\n       * @param node\n       */\n      isCompatible: function (tdef, node) {\n        if (tdef && node) {\n          if (tdef.select('metaData[name=virtual]').array.length > 0) {\n            // tdef is virtual, so it is compatible\n            return true;\n\n          } else {\n            var nodePlatforms = [];\n            node.typeDefinition.deployUnits.array\n              .forEach(function (du) {\n                var filter = du.findFiltersByID('platform');\n                if (filter) {\n                  nodePlatforms.push(filter.value);\n                }\n              });\n\n            for (var i = 0; i < nodePlatforms.length; i++) {\n              if (tdef.select('deployUnits[name=*]/filters[name=platform,value=' + nodePlatforms[i] + ']').array.length > 0) {\n                return true;\n              }\n            }\n          }\n        }\n        return false;\n      },\n\n      /**\n       * Tells whether or not a binding is already made between this port and chan\n       * @param port\n       * @param chan\n       * @returns {boolean}\n       */\n      isAlreadyBound: function (port, chan) {\n        var bound = false;\n        if (port) {\n          for (var i = 0; i < port.bindings.array.length; i++) {\n            if (port.bindings.array[i].hub && (port.bindings.array[i].hub.path() === chan.path())) {\n              return true;\n            }\n          }\n        }\n        return bound;\n      },\n\n      /**\n       * Returns true if the given value is truish (means that it is close to say \"true\")\n       * @param val\n       * @returns {boolean}\n       */\n      isTruish: function (val) {\n        return (val === true || val === 'true' || val > 0);\n      },\n\n      /**\n       * Returns true if the given instance dictionaries are valid\n       * @param instance\n       * @returns {boolean}\n       */\n      isValid: function (instance) {\n        if (instance.typeDefinition &&\n          instance.typeDefinition.dictionaryType &&\n          instance.typeDefinition.dictionaryType.attributes.array.length > 0) {\n          if (instance.dictionary &&\n            instance.dictionary.values.array.length > 0) {\n            for (var i = 0; i < instance.dictionary.values.array.length; i++) {\n              var val = instance.dictionary.values.array[i];\n              var attr = instance.typeDefinition.dictionaryType.findAttributesByID(val.name);\n              if (!this.isValueValid(val, attr)) {\n                return false;\n              }\n            }\n          } else {\n            for (var j = 0; j < instance.typeDefinition.dictionaryType.attributes.array.length; j++) {\n              if (!this.isTruish(instance.typeDefinition.dictionaryType.attributes.array[j].optional)) {\n                return false;\n              }\n            }\n          }\n        }\n\n        return true;\n      },\n\n      /**\n       *\n       *\n       */\n      isValueValid: function (val, attr) {\n        if (!this.isTruish(attr.optional)) {\n          if (typeof val.value === 'undefined' || val.value === null || val.value.length === 0) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      isVirtual: function (elem) {\n        if (elem) {\n          if (elem.metaClassName() === 'org.kevoree.ComponentInstance' ||\n              elem.metaClassName() === 'org.kevoree.ContainerNode' ||\n              elem.metaClassName() === 'org.kevoree.Group' ||\n              elem.metaClassName() === 'org.kevoree.Channel') {\n            return this.isVirtual(elem.typeDefinition);\n          } else if (elem.metaClassName() === 'org.kevoree.ComponentType' ||\n              elem.metaClassName() === 'org.kevoree.NodeType' ||\n              elem.metaClassName() === 'org.kevoree.GroupType' ||\n              elem.metaClassName() === 'org.kevoree.ChannelType') {\n            var virtual = elem.findMetaDataByID('virtual');\n            return virtual !== null;\n          } else if (elem.metaClassName() === 'org.kevoree.MBinding') {\n            if (elem.hub) {\n              return this.isVirtual(elem.hub.typeDefinition);\n            }\n          }\n        }\n        return false;\n      },\n\n      /**\n       * @param channel instance\n       * @returns false if channel is only fragmented on one node\n       */\n      isChannelDistributed: function (channel) {\n        var nodes = {};\n\n        channel.bindings.array.forEach(function (binding) {\n          if (binding.port && binding.port.eContainer()) {\n            var comp = binding.port.eContainer();\n            var node = this.getHighestNode(comp);\n            nodes[node.path()] = true;\n          }\n        }.bind(this));\n\n        return Object.keys(nodes).length > 1;\n      },\n\n      isSelected: function (instance) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_SELECTED);\n          if (meta) {\n            return this.isTruish(meta.value);\n          }\n        }\n        return false;\n      },\n\n      isFolded: function (instance) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_FOLDED);\n          if (meta) {\n            return this.isTruish(meta.value);\n          }\n        }\n        return false;\n      },\n\n      setSelected: function (instance, selected) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_SELECTED);\n          if (!meta) {\n            meta = kFactory.createValue();\n            meta.name = KWE_SELECTED;\n            instance.addMetaData(meta);\n          }\n          meta.value = selected;\n        }\n      },\n\n      setFolded: function (instance, folded) {\n        if (instance) {\n          var meta = instance.findMetaDataByID(KWE_FOLDED);\n          if (!meta) {\n            meta = kFactory.createValue();\n            meta.name = KWE_FOLDED;\n            instance.addMetaData(meta);\n          }\n          meta.value = folded;\n        }\n      },\n\n      isAttributeInType: function (instance, attrName, isFragment) {\n        if (instance.typeDefinition.dictionaryType) {\n          var attr = instance.typeDefinition.dictionaryType.findAttributesByID(attrName);\n          return attr && (attr.fragmentDependant === isFragment);\n        }\n        return false;\n      },\n\n      getSelection: function (model) {\n        return model.select('**/metaData[name=' + KWE_SELECTED + ',value=true]').array.map(function (meta) {\n          return meta.eContainer();\n        });\n      },\n\n      /**\n       *\n       * @param fqn\n       * @returns {string}\n       */\n      fqnToPath: function (fqn) {\n        // check for version\n        fqn = fqn.split('/');\n        var vers;\n        if (fqn.length === 2) {\n          vers = fqn.pop();\n        }\n\n        fqn = fqn[0].split('.');\n        var last = fqn.pop();\n        if (fqn.length === 0) {\n          fqn = 'packages[name=' + last;\n        } else {\n          fqn = 'packages[' + fqn.join(']/packages[') + ']/*[name=' + last;\n        }\n\n        if (vers) {\n          fqn += ',version=' + vers;\n        }\n\n        fqn += ']';\n\n        return fqn;\n      },\n\n      /**\n       *\n       * @param fqn\n       * @returns {string}\n       */\n      pkgFqnToPath: function (fqn) {\n        fqn = fqn.split('.');\n        var last = fqn.pop();\n        if (fqn.length === 0) {\n          return 'packages[' + last + ']';\n        } else {\n          return 'packages[' + fqn.join(']/packages[') + ']/packages[' + last + ']';\n        }\n      },\n\n      /**\n       *\n       * @param instance the instance to clone\n       */\n      clone: function (instance) {\n        var that = this;\n\n        function initClone(clone) {\n          clone.started = instance.started;\n          var instancePosMeta = instance.findMetaDataByID(KWE_POSITION);\n          if (instancePosMeta) {\n            var instancePos = JSON.parse(instancePosMeta.value);\n            var pos = kFactory.createValue();\n            pos.name = KWE_POSITION;\n            pos.value = JSON.stringify({\n              x: instancePos.x + 50,\n              y: instancePos.y + 50\n            });\n            clone.addMetaData(pos);\n          }\n\n          clone.dictionary = that.cloneDictionary(instance.dictionary);\n        }\n\n        var clone;\n        switch (this.getTypeDefinitionType(instance.typeDefinition)) {\n          case 'node':\n            clone = kFactory.createContainerNode();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'node');\n            instance.components.array.forEach(function (comp) {\n              clone.addComponents(that.clone(comp));\n            });\n            instance.hosts.array.forEach(function (subNode) {\n              var clonedNode = that.clone(subNode);\n              instance.eContainer().addNodes(clonedNode);\n              clone.addHosts(clonedNode);\n            });\n            break;\n\n          case 'group':\n            clone = kFactory.createGroup();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'group');\n            break;\n\n          case 'channel':\n            clone = kFactory.createChannel();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'channel');\n            break;\n\n          case 'component':\n            clone = kFactory.createComponentInstance();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'component');\n            break;\n        }\n\n        return clone;\n      },\n\n      /**\n       * @param dic a dictionary\n       */\n      cloneDictionary: function (dic) {\n        var clone = kFactory.createDictionary().withGenerated_KMF_ID('0.0');\n        if (dic) {\n          dic.values.array.forEach(function (val) {\n            var newVal = kFactory.createValue();\n            newVal.name = val.name;\n            newVal.value = val.value;\n            clone.addValues(newVal);\n          });\n        }\n        return clone;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n\t.filter('isCompatible', function (kModelHelper, kEditor) {\n  return function (items, type, nodeName) {\n    if (type === 'component') {\n      return items.filter(function (item) {\n        if (item && item.tdef && nodeName) {\n          var isCompatible = kModelHelper.isCompatible(item.tdef, kEditor.getModel().findNodesByID(nodeName));\n          return isCompatible;\n        } else {\n          return false;\n        }\n      });\n    } else {\n      return items;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('hljs', function () {\n    return {\n      restrict: 'AE',\n      scope: { content: '=' },\n      link: function(scope, element) {\n        // element.addClass('hljs');\n        // element[0].innerHTML = scope.content;\n        hljs.highlightBlock(element[0]);\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('focus', function ($timeout) {\n    return {\n      restrict: 'A',\n      link: function (scope, elem, attrs) {\n        scope.$watch(attrs.focus, function (value) {\n          var delay, show;\n          if (angular.isNumber(value)) {\n            delay = value;\n            show = true;\n          } else {\n            delay = 0;\n            show = Boolean(value);\n          }\n          if (show) {\n            $timeout(function () {\n              elem[0].focus();\n              if (typeof elem[0].select === 'function') {\n                elem[0].select();\n              }\n            }, delay);\n          }\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('dropTarget', function ($parse) {\n    var DND_CLASS = 'dnd-overlay';\n\n    return {\n      restrict: 'A',\n      scope: false,\n      link: function (scope, element, attrs) {\n        var tid;\n        var fn = $parse(attrs.dropTarget);\n        var elem = jQuery(element[0]);\n        var overlay = jQuery('<div class=\"'+DND_CLASS+'\" style=\"display: none;\"><p class=\"center-message\">Drop to load the model</p></div>');\n\n        elem.append(overlay);\n\n        elem.on('dragleave', dragLeaveHandler);\n        elem.on('dragover', dragOverHandler);\n        elem.on('drop', dropHandler);\n\n        scope.$on('$destroy', function() {\n          elem.off('dragleave', dragLeaveHandler);\n          elem.off('dragover', dragOverHandler);\n          elem.off('drop', dropHandler);\n        });\n\n        function dropHandler(event) {\n          var dataTransfer = event.originalEvent.dataTransfer;\n          if (dataTransfer) {\n            if (dataTransfer.files.length) {\n              var file = dataTransfer.files[0];\n              var reader = new FileReader();\n\n              reader.onloadend = function (event) {\n                scope.$apply(function () {\n                  fn(scope, {\n                    $event: event,\n                    $data: event.target.result,\n                    $name: file.name\n                  });\n                });\n              };\n\n              reader.readAsText(file);\n            }\n          }\n\n          event.stopPropagation();\n          event.preventDefault();\n          overlay.hide();\n        }\n\n        function dragOverHandler(event) {\n          clearTimeout(tid);\n          event.stopPropagation();\n          event.preventDefault();\n          overlay.show();\n        }\n\n        function dragLeaveHandler(event) {\n          tid = setTimeout(function () {\n            event.stopPropagation();\n            overlay.hide();\n          }, 200);\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .filter('camelize', function () {\n    return function (text) {\n      if (typeof text === 'string') {\n        return text.replace(/(?:^|[-_])(\\w)/g, function (_, c) {\n          return c ? c.toUpperCase () : '';\n        });\n      } else {\n        throw new Error('Camelize filter must be used on string only');\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('fileread', [function () {\n    return {\n      controller: function ($scope, $element, $attrs) {\n        $element.bind('change', function (event) {\n          var reader = new FileReader();\n          reader.onload = function (loadEvent) {\n            $scope.fileread = loadEvent.target.result;\n            $scope.$eval($attrs.onfileread);\n          };\n          reader.readAsBinaryString(event.target.files[0]);\n        });\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('editorApp')\n\t.service('storage', function () {\n  return {\n    get: function (key, defaultVal) {\n      var val = localStorage.getItem(key);\n      if (val) {\n        return JSON.parse(val).val;\n      } else {\n        return defaultVal;\n      }\n    },\n    set: function (key, val) {\n      localStorage.setItem(key, JSON.stringify({\n        val: val\n      }));\n    },\n    remove: function (key) {\n      localStorage.removeItem(key);\n    },\n    clear: function () {\n      localStorage.clear();\n    },\n    keys: function () {\n      var keys = [];\n      for (var i = 0, len = localStorage.length; i < len; ++i) {\n        keys.push(localStorage.key(i));\n      }\n      return keys;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp').service('kWs', function (kFactory) {\n  function cleanPath(path) {\n    if (!path) {\n      path = '/';\n    } else {\n      if (path.substr(0, 1) !== '/') {\n        path = '/' + path;\n      }\n    }\n    return path;\n  }\n\n  return {\n\n    /**\n     *\n     * @param host\n     * @param port\n     * @param path\n     * @param callback\n     * @returns {WebSocket}\n     */\n    getModel: function (host, port, path, callback) {\n      var answer = false,\n        failed = false,\n        ws = null,\n        timeout = setTimeout(function () {\n          answer = true;\n          failed = true;\n          try {\n            ws.close();\n          } catch (err) { /* ignore */ }\n          var err = new Error('Connection with ws://' + host + ':' + port + path + ' timed out');\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        }, 5000);\n      path = cleanPath(path);\n\n      try {\n        ws = new WebSocket('ws://' + host + ':' + port + path);\n\n        ws.onopen = function () {\n          clearTimeout(timeout);\n          ws.send('pull');\n        };\n\n        ws.onmessage = function (msg) {\n          try {\n            var loader = kFactory.createJSONLoader();\n            var model = loader.loadModelFromString(msg.data).get(0);\n            answer = true;\n            ws.close();\n            setTimeout(function () {\n              // prevent try/catch to catch an error in callback\n              callback(null, model, 'ws://' + host + ':' + port + path);\n            });\n          } catch (err) {\n            clearTimeout(timeout);\n            console.warn('[ws.factory.getModel()] Error parsing model from message:'); // eslint-disable-line\n            console.warn('[ws.factory.getModel()] msg.data=' + msg.data); // eslint-disable-line\n            answer = true;\n            ws.close();\n            callback(new Error('Unable to load received model from ws://' + host + ':' + port + path), null, 'ws://' + host + ':' + port + path);\n          }\n        };\n\n        ws.onerror = function (err) {\n          failed = true;\n          err = new Error('Unable to connect to ws://' + host + ':' + port + path);\n          clearTimeout(timeout);\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        };\n\n        ws.onclose = function () {\n          if (!answer && !failed) {\n            clearTimeout(timeout);\n            var err = new Error('Connection with ws://' + host + ':' + port + path + ' closed');\n            callback(err, null, 'ws://' + host + ':' + port + path);\n          }\n        };\n      } catch (err) {\n        clearTimeout(timeout);\n        callback(new Error('Unable to load received model from ws://' + host + ':' + port + path), null, 'ws://' + host + ':' + port + path);\n      }\n\n      return ws;\n    },\n\n    /**\n     *\n     * @param model\n     * @param host\n     * @param port\n     * @param path\n     * @param callback\n     * @returns {WebSocket|null}\n     */\n    pushModel: function (model, host, port, path, callback) {\n      var modelStr,\n        sent = false,\n        failed = false,\n        ws = null,\n        timeout = setTimeout(function () {\n          sent = true;\n          failed = true;\n          try {\n            ws.close();\n          } catch (err) { /* ignore */ }\n          var err = new Error('Connection with ws://' + host + ':' + port + path + ' timed out');\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        }, 5000);\n\n      try {\n        var serializer = kFactory.createJSONSerializer();\n        modelStr = serializer.serialize(model);\n      } catch (err) {\n        var error = new Error('Unable to serialize current model');\n        callback(error);\n        return null;\n      }\n\n      if (modelStr) {\n        path = cleanPath(path);\n\n        ws = new WebSocket('ws://' + host + ':' + port + path);\n\n        ws.onopen = function () {\n          clearTimeout(timeout);\n          ws.send('push/' + modelStr);\n          sent = true;\n          ws.close();\n          callback();\n        };\n\n        ws.onerror = function (err) {\n          failed = true;\n          err = new Error('Unable to connect to ws://' + host + ':' + port + path);\n          clearTimeout(timeout);\n          callback(err);\n        };\n\n        ws.onclose = function () {\n          if (!sent && !failed) {\n            clearTimeout(timeout);\n            var err = new Error('Connection with ws://' + host + ':' + port + path + ' closed');\n            callback(err, null, 'ws://' + host + ':' + port + path);\n          }\n        };\n      }\n\n      return ws;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiUtils', function (kModelHelper, NODE_HEIGHT, NODE_WIDTH, COMP_HEIGHT, CHANNEL_RADIUS, GROUP_RADIUS) {\n    /**\n     *\n     * @param node\n     * @returns {number}\n     */\n    function getNodeUIHeight(node) {\n      var height = NODE_HEIGHT; // minimum node height\n\n      node.components.array.forEach(function (comp) {\n        height += getCompUIHeight(comp) + 10;\n      });\n\n      node.hosts.array.forEach(function (child) {\n        height += getNodeUIHeight(child) + 10;\n      });\n\n      return height;\n    }\n\n    function getCompUIHeight(comp) {\n      if (comp.typeDefinition.provided.size() === 0 && comp.typeDefinition.required.size() === 0) {\n        return COMP_HEIGHT;\n      } else if (comp.typeDefinition.provided.size() > comp.typeDefinition.required.size()) {\n        return COMP_HEIGHT * comp.typeDefinition.provided.size();\n      } else {\n        return COMP_HEIGHT * comp.typeDefinition.required.size();\n      }\n    }\n\n    /**\n     * Returns the highest node path regarding the given SVG element (supposed to be a .node or a .comp)\n     * @param elem\n     */\n    function getHighestNodePath(elem) {\n      if (elem.parent().hasClass('instance')) {\n        return getHighestNodePath(elem.parent());\n      } else {\n        return elem.attr('data-path');\n      }\n    }\n\n    function getAbsoluteBBox(elem) {\n      var bbox = elem.getBBox();\n\n      function walkUp(elem) {\n        if (elem.parent() && elem.parent().hasClass('instance')) {\n          var parentBox = elem.parent().getBBox();\n          bbox.x += parentBox.x;\n          bbox.y += parentBox.y;\n          walkUp(elem.parent());\n        }\n      }\n      walkUp(elem);\n      return bbox;\n    }\n\n    /**\n     *\n     * @param elem\n     * @param x\n     * @param y\n     * @param m transform matrix (translations & zoom of the editor panel)\n     */\n    function isPointInsideElem(elem, x, y, m) {\n      var bbox = getAbsoluteBBox(elem);\n      bbox.x = (bbox.x * m.a) + m.e;\n      bbox.y = (bbox.y * m.a) + m.f;\n      bbox.width *= m.a;\n      bbox.height *= m.a;\n      return x >= bbox.x &&\n        x <= bbox.x + bbox.width &&\n        y >= bbox.y &&\n        y <= bbox.y + bbox.height;\n    }\n\n    /**\n     * @param x\n     * @param y\n     * @returns { x, y } points within the editor context (equivalent to Chrome's offsetX offsetY)\n     */\n    function getPointInEditor(x, y) {\n      var offset = jQuery('svg#editor').offset();\n      return { x: x - offset.left, y: y - offset.top };\n    }\n\n    function computeWireNodeAnchor(from, to, width, height) {\n      function getHorizontalAlignment() {\n        if (from.x >= to.x + width / 3 && from.x <= to.x + (width / 3) * 2) {\n          return 'middle';\n\n\n        } else if (from.x > to.x + (width / 3) * 2) {\n          return 'right';\n\n        } else {\n          return 'left';\n        }\n      }\n\n      function getVerticalAlignment() {\n        if (from.y >= to.y + height / 3 && from.y <= to.y + (height / 3) * 2) {\n          return 'middle';\n\n        } else if (from.y > to.y + (height / 3) * 2) {\n          return 'bottom';\n\n        } else {\n          return 'top';\n        }\n      }\n\n      var alignment = getVerticalAlignment() + '-' + getHorizontalAlignment();\n      switch (alignment) {\n        default:\n        case 'top-left':\n          return {\n            x: to.x + 2,\n            y: to.y + 2\n          };\n\n        case 'top-middle':\n          return {\n            x: to.x + width / 2,\n            y: to.y\n          };\n\n        case 'top-right':\n          return {\n            x: to.x + width - 2,\n            y: to.y + 2\n          };\n\n        case 'middle-left':\n          return {\n            x: to.x,\n            y: to.y + height / 2\n          };\n\n        case 'middle-right':\n          return {\n            x: to.x + width,\n            y: to.y + height / 2\n          };\n\n        case 'bottom-left':\n          return {\n            x: to.x + 2,\n            y: to.y + height - 2\n          };\n\n        case 'bottom-middle':\n          return {\n            x: to.x + width / 2,\n            y: to.y + height\n          };\n\n        case 'bottom-right':\n          return {\n            x: to.x + width - 2,\n            y: to.y + height - 2\n          };\n      }\n    }\n\n    function computeBindingCoords(portElem, chanElem) {\n      var chanM = chanElem.transform().localMatrix,\n        chan = {\n          x: chanM.e,\n          y: chanM.f\n        },\n        compBox = getAbsoluteBBox(portElem.parent()),\n        portM = portElem.transform().localMatrix,\n        port = {\n          x: compBox.x + portM.e + 2,\n          y: compBox.y + portM.f + COMP_HEIGHT - 5\n        },\n        middle = {\n          x: 0,\n          y: 0\n        };\n\n      if (port.x > chan.x) {\n        middle.x = chan.x + (port.x - chan.x) / 2;\n      } else {\n        middle.x = port.x + (chan.x - port.x) / 2;\n      }\n\n      middle.y = ((port.y >= chan.y) ? port.y : chan.y) + 20;\n\n      return {\n        chan: chan,\n        port: port,\n        middle: middle\n      };\n    }\n\n    /**\n     *\n     * @param model\n     */\n    function updateSVGDefs(model) {\n      var editor = document.getElementById('editor');\n      if (editor) {\n        var defs = editor.getElementsByTagName('defs')[0];\n        var clipPath;\n        if (!document.getElementById('group-clip')) {\n          clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n          clipPath.id = 'group-clip';\n          var grpCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n          grpCircle.setAttribute('cx', 0 + '');\n          grpCircle.setAttribute('cy', 0 + '');\n          grpCircle.setAttribute('r', (GROUP_RADIUS - 4) + '');\n          clipPath.appendChild(grpCircle);\n          defs.appendChild(clipPath);\n        }\n\n        if (!document.getElementById('chan-clip')) {\n          clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n          clipPath.id = 'chan-clip';\n          var chanCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n          chanCircle.setAttribute('cx', 0 + '');\n          chanCircle.setAttribute('cy', 0 + '');\n          chanCircle.setAttribute('r', (CHANNEL_RADIUS - 4) + '');\n          clipPath.appendChild(chanCircle);\n          defs.appendChild(clipPath);\n        }\n\n        var nodeTreeHeights = kModelHelper.getNodeTreeHeights(model.nodes.array);\n        nodeTreeHeights.forEach(function (height) {\n          if (!document.getElementById('node-clip-' + height)) {\n            var nodeClip = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n            nodeClip.id = 'node-clip-' + height;\n            var nodeRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            nodeRect.setAttribute('width', (NODE_WIDTH + (20 * height) - 5) + '');\n            nodeRect.setAttribute('height', '100%');\n            nodeRect.setAttribute('x', 2 + '');\n            nodeRect.setAttribute('y', 0 + '');\n            nodeClip.appendChild(nodeRect);\n            defs.appendChild(nodeClip);\n          }\n\n          if (!document.getElementById('comp-clip-' + height)) {\n            var compClip = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n            compClip.id = 'comp-clip-' + height;\n            var compRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            compRect.setAttribute('width', (NODE_WIDTH + (20 * height) - 60) + '');\n            compRect.setAttribute('height', '100%');\n            compRect.setAttribute('x', 20 + '');\n            compRect.setAttribute('y', 0 + '');\n            compClip.appendChild(compRect);\n            defs.appendChild(compClip);\n          }\n        });\n      }\n    }\n\n    return {\n      getAbsoluteBBox: getAbsoluteBBox,\n      getNodeUIHeight: getNodeUIHeight,\n      getCompUIHeight: getCompUIHeight,\n      getHighestNodePath: getHighestNodePath,\n      isPointInsideElem: isPointInsideElem,\n      computeWireNodeAnchor: computeWireNodeAnchor,\n      computeBindingCoords: computeBindingCoords,\n      updateSVGDefs: updateSVGDefs,\n      getPointInEditor: getPointInEditor\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('ui', function (util, uiUtils, uiCreateGroup, uiCreateGroupWire, uiCreateNode, uiCreateComponent, uiCreateBinding, uiCreateChannel, kModelHelper, kFactory, Notification, KWE_POSITION, NODE_WIDTH, NODE_HEIGHT, INVALID_RADIUS, GROUP_RADIUS, CHANNEL_RADIUS) {\n\n    var ui = {\n      /**\n       * Current editor model\n       */\n      model: null,\n\n      /**\n       * Overed instance (node)\n       */\n      overedInstancePath: null,\n\n      /**\n       * Dragged instance path\n       */\n      draggedInstancePath: null,\n\n      /**\n       * Mouse position holder\n       */\n      mousePos: {\n        x: 0,\n        y: 0\n      },\n\n      /**\n       * Must be called before any other methods\n       */\n      init: function () {\n        var editor = new Snap('svg#editor');\n        editor.zpd({\n          zoomThreshold: [0.2, 1],\n          zoomScale: 0.05\n        });\n        var zpdEditor = this.editor = editor.select('#snapsvg-zpd-' + editor.id);\n        zpdEditor.addClass('zpd');\n        editor.mousedown(function (evt) {\n          if (evt.which === 1) {\n            // remove all selected state\n            editor.selectAll('.selected')\n              .forEach(function (elem) {\n                elem.removeClass('selected');\n                var path = elem.parent().attr('data-path');\n                if (path && path.length > 0) {\n                  var instance = ui.model.findByPath(path);\n                  kModelHelper.setSelected(instance, false);\n                }\n              });\n          }\n        });\n        uiUtils.updateSVGDefs(this.model);\n\n        // create an observer instance\n        var observer = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            if (mutation.attributeName === 'transform') {\n              var matrix = zpdEditor.transform()\n                .localMatrix;\n              editor\n                .select('#coord-text')\n                .attr({\n                  text: '(' + parseInt(matrix.e, 10) + ', ' + parseInt(matrix.f, 10) + ') ' + parseInt(matrix.a * 100, 10) + '%'\n                });\n            }\n          });\n        });\n\n        // pass in the target node, as well as the observer options\n        observer.observe(zpdEditor.node, {\n          attributes: true,\n          childList: false,\n          characterData: false\n        });\n\n        editor.dblclick(function () {\n          zpdEditor.animate({\n            transform: 's1,t0,0'\n          }, 400, mina.ease);\n        });\n\n        editor\n          .text('100%', '100%', '(0, 0) 100%')\n          .attr({\n            id: 'coord-text',\n            fill: '#000',\n            textAnchor: 'end'\n          })\n          .transform('t-5,-5');\n      },\n\n      createGroup: function (instance) {\n        uiCreateGroup(this, instance);\n      },\n\n      createGroupWire: function (group, node) {\n        uiCreateGroupWire(this, group, node);\n      },\n\n      createNode: function (instance) {\n        uiCreateNode(this, instance);\n      },\n\n      createComponent: function (instance) {\n        return uiCreateComponent(this, instance);\n      },\n\n      createBinding: function (instance) {\n        uiCreateBinding(this, instance);\n      },\n\n      createChannel: function (instance) {\n        uiCreateChannel(this, instance);\n      },\n\n      updateValidity: function (instance) {\n        if (this.editor) {\n          var elem = this.editor.select('.instance[data-path=\"' + instance.path() + '\"]');\n          var icon = this.editor.select('.instance[data-path=\"' + instance.path() + '\"] > .invalid-icon');\n          if (kModelHelper.isValid(instance)) {\n            if (icon) {\n              icon.remove();\n            }\n          } else {\n            if (icon) {\n              icon.remove();\n            }\n            icon = this.editor\n              .circle(0, 0, INVALID_RADIUS)\n              .attr({\n                'class': 'invalid-icon',\n                fill: 'red',\n                stroke: 'black',\n                title: 'Invalid dictionary attributes'\n              });\n            var matrix = icon.transform()\n              .localMatrix;\n            switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n              case 'node':\n                matrix.e = elem.getBBox()\n                  .width - (INVALID_RADIUS * 2);\n                matrix.f = INVALID_RADIUS * 2;\n                break;\n\n              case 'group':\n                matrix.f = -GROUP_RADIUS + (INVALID_RADIUS * 2);\n                break;\n\n              case 'channel':\n                matrix.f = -CHANNEL_RADIUS + (INVALID_RADIUS * 2);\n                break;\n\n              case 'component':\n                matrix.e = elem.getBBox()\n                  .width;\n                break;\n            }\n            icon.transform(matrix);\n            elem.append(icon);\n          }\n        }\n      },\n\n      deleteInstance: function (parent, path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          if (elem.hasClass('comp') || elem.hasClass('node')) {\n            var highestNodePath = uiUtils.getHighestNodePath(elem);\n            if (ui.draggedInstancePath === path) {\n              // append it to the editor\n              this.editor.append(elem);\n            } else {\n              this.editor.selectAll('.group-wire[data-to=\"' + path + '\"]')\n                .remove();\n              elem.remove();\n            }\n\n            ui.refreshNode(highestNodePath);\n\n            // refresh all group-wire from this whole node\n            var highestNode = ui.model.findByPath(highestNodePath);\n            if (highestNode) {\n              highestNode.groups.array.forEach(function (group) {\n                ui.createGroupWire(group, highestNode);\n              });\n              highestNode.hosts.array.forEach(function redrawWire(child) {\n                child.groups.array.forEach(function (group) {\n                  ui.createGroupWire(group, child);\n                });\n                child.hosts.array.forEach(redrawWire);\n              });\n\n              // redraw parent bindings\n              highestNode.components.array.forEach(function (comp) {\n                comp.provided.array.forEach(function (port) {\n                  port.bindings.array.forEach(function (binding) {\n                    ui.createBinding(binding);\n                  });\n                });\n                comp.required.array.forEach(function (port) {\n                  port.bindings.array.forEach(function (binding) {\n                    ui.createBinding(binding);\n                  });\n                });\n              });\n\n              // redraw sibling bindings\n              highestNode.hosts.array.forEach(function redrawBindings(child) {\n                child.components.array.forEach(function (comp) {\n                  comp.provided.array.forEach(function (port) {\n                    port.bindings.array.forEach(function (binding) {\n                      ui.createBinding(binding);\n                    });\n                  });\n                  comp.required.array.forEach(function (port) {\n                    port.bindings.array.forEach(function (binding) {\n                      ui.createBinding(binding);\n                    });\n                  });\n                });\n                child.hosts.array.forEach(redrawBindings);\n              });\n            }\n          } else {\n            elem.remove();\n          }\n        }\n      },\n\n      deleteGroupWire: function (groupPath, nodePath) {\n        var elem = this.editor.select('.group-wire[data-from=\"' + groupPath + '\"][data-to=\"' + nodePath + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteBinding: function (bindingPath) {\n        var elem = this.editor.select('.binding[data-path=\"' + bindingPath + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteSelected: function () {\n        var selected = this.getSelected();\n        selected.forEach(function (elem) {\n          var path = elem.attr('data-path');\n          if (path) {\n            var instance = ui.model.findByPath(path);\n            if (instance) {\n              var readOnly = false;\n              if (typeof instance.findMetaDataByID === 'function') {\n                var val = instance.findMetaDataByID('access_mode');\n                readOnly = (val && val.value === 'read-only');\n              }\n              if (readOnly) {\n                Notification.warning({\n                  title: 'Delete instance',\n                  message: 'Cannot delete read-only instance \"' + instance.name + '\"',\n                  delay: 3000\n                });\n              } else {\n                if (instance.hosts) {\n                  // also remove child nodes recursively\n                  instance.hosts.array.forEach(function deleteChild(node) {\n                    node.hosts.array.forEach(deleteChild);\n                    node.delete();\n                  });\n                }\n                instance.delete();\n              }\n            }\n          } else {\n            if (elem.hasClass('group-wire')) {\n              var grp = ui.model.findByPath(elem.attr('data-from')),\n                node = ui.model.findByPath(elem.attr('data-to'));\n              if (node && grp) {\n                node.removeGroups(grp);\n                grp.removeSubNodes(node);\n              }\n            } else {\n              // TODO for component ports wire\n            }\n          }\n        });\n        return selected.length;\n      },\n\n      removeUIElem: function (path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteNodes: function () {\n        this.editor.selectAll('.node')\n          .remove();\n        this.editor.selectAll('.group-wire')\n          .remove();\n      },\n\n      deleteGroups: function () {\n        this.editor.selectAll('.group')\n          .remove();\n        this.editor.selectAll('.group-wire')\n          .remove();\n      },\n\n      deleteChannels: function () {\n        this.editor.selectAll('.chan')\n          .remove();\n      },\n\n      deleteBindings: function () {\n        this.editor.selectAll('.binding')\n          .remove();\n      },\n\n      updateInstance: function (previousPath, instance) {\n        var elem = this.editor.select('.instance[data-path=\"' + previousPath + '\"]');\n        if (elem) {\n          // update data-path and name\n          elem.attr({\n            'data-path': instance.path()\n          });\n          var name = elem.select('text.name');\n          if (name) {\n            name.attr({\n              text: instance.name\n            });\n          }\n\n          // update location only if not a child of someone\n          if (!elem.parent()\n            .hasClass('node')) {\n            elem.relocate(instance);\n          }\n\n          // update children data-path if any\n          if (instance.components || instance.hosts) {\n            instance.components.array.forEach(function (comp) {\n              var compElem = elem.select('.instance[data-path=\"' + previousPath + '/components[' + comp.name + ']\"]');\n              if (compElem) {\n                compElem.attr({\n                  'data-path': comp.path()\n                    .replace(previousPath, instance.path())\n                });\n              }\n            });\n          }\n\n          // update started state\n          if (elem.hasClass('comp')) {\n            elem.select('.bg')\n              .attr({\n                fillOpacity: util.isTruish(instance.started) ? 1 : 0.65\n              });\n          } else {\n            if (name) {\n              name.attr({\n                fill: util.isTruish(instance.started) ? '#fff' : '#000'\n              });\n            }\n          }\n\n          // update group-wire if it is a node\n          if (elem.hasClass('node')) {\n            this.editor\n              .selectAll('.group-wire[data-to=\"' + previousPath + '\"]')\n              .attr({\n                'data-to': instance.path()\n              });\n          }\n\n          if (elem.hasClass('group')) {\n            this.editor\n              .selectAll('.group-wire[data-from=\"' + previousPath + '\"]')\n              .attr({\n                'data-from': instance.path()\n              });\n          }\n        }\n      },\n\n      updatePosition: function (instance) {\n        var elem = this.editor.select('.instance[data-path=\"' + instance.path() + '\"]');\n        if (elem) {\n          if (!elem.parent()\n            .hasClass('node')) {\n            elem.relocate(instance);\n          }\n        }\n      },\n\n      updateCompTypeDefinition: function (comp, oldTypeDef) {\n        oldTypeDef.required.array.forEach(function (oldPortType) {\n          var found = false;\n          comp.typeDefinition.required.array.forEach(function (portType) {\n            if (portType.name === oldPortType.name) {\n              found = true;\n              // port still exists in new typeDef\n              var port = comp.findRequiredByID(portType.name);\n              if (port) {\n                port.portTypeRef = portType;\n              }\n            }\n          });\n          if (!found) {\n            var port = comp.findRequiredByID(oldPortType.name);\n            if (port) {\n              port.bindings.array.forEach(function (binding) {\n                binding.delete();\n              });\n              port.delete();\n            }\n          }\n        });\n\n        oldTypeDef.provided.array.forEach(function (oldPortType) {\n          var found = false;\n          comp.typeDefinition.provided.array.forEach(function (portType) {\n            if (portType.name === oldPortType.name) {\n              found = true;\n              // port still exists in new typeDef\n              var port = comp.findProvidedByID(oldPortType.name);\n              if (port) {\n                port.portTypeRef = portType;\n              }\n            }\n          });\n          if (!found) {\n            var port = comp.findProvidedByID(oldPortType.name);\n            if (port) {\n              port.bindings.array.forEach(function (binding) {\n                binding.delete();\n              });\n              port.delete();\n            }\n          }\n        });\n\n        // recreate the new component\n        var compUi = ui.createComponent(comp);\n        compUi.select('.bg')\n          .addClass('selected');\n        this.refreshNode(comp.eContainer()\n          .path());\n      },\n\n      toggleFold: function (node, isFolded) {\n        function toggleChannel(chan) {\n          var uiChan = ui.editor.select('.chan[data-path=\"' + chan.path() + '\"]');\n          if (uiChan) {\n            if (kModelHelper.isChannelDistributed(chan)) {\n              if (isFolded) {\n                uiChan.attr({\n                  strokeDasharray: '5 3'\n                });\n              } else {\n                uiChan.attr({\n                  strokeDasharray: ''\n                });\n              }\n            } else {\n              if (isFolded) {\n                uiChan.addClass('hide');\n              } else {\n                uiChan.removeClass('hide');\n              }\n            }\n          }\n        }\n\n        function toggleBinding(binding) {\n          if (binding.hub) {\n            toggleChannel(binding.hub);\n          }\n\n          var uiBinding = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n          if (uiBinding) {\n            if (isFolded) {\n              uiBinding.addClass('hide');\n            } else {\n              uiBinding.removeClass('hide');\n            }\n          }\n        }\n\n        function togglePort(port) {\n          port.bindings.array.forEach(toggleBinding);\n        }\n\n        function toggleComp(comp) {\n          comp.provided.array.forEach(togglePort);\n          comp.required.array.forEach(togglePort);\n\n          var uiComp = ui.editor.select('.comp[data-path=\"' + comp.path() + '\"]');\n          if (uiComp) {\n            if (isFolded) {\n              uiComp.addClass('hide');\n            } else {\n              uiComp.removeClass('hide');\n            }\n          }\n        }\n\n        function toggleSubNodes(node) {\n          node.components.array.forEach(toggleComp);\n          node.hosts.array.forEach(toggleSubNodes);\n\n          var uiNode = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n          if (uiNode) {\n            if (isFolded) {\n              uiNode.addClass('hide');\n            } else {\n              uiNode.removeClass('hide');\n            }\n          }\n        }\n\n        node.components.array.forEach(toggleComp);\n        node.hosts.array.forEach(toggleSubNodes);\n\n        var uiNode = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n        if (uiNode) {\n          if (isFolded) {\n            uiNode.select('.bg')\n              .attr({\n                height: NODE_HEIGHT,\n                strokeDasharray: '5 3'\n              });\n          } else {\n            uiNode.select('.bg')\n              .attr({\n                height: uiUtils.getNodeUIHeight(node),\n                strokeDasharray: ''\n              });\n          }\n        }\n      },\n\n      /**\n       * Refresh a node's UI (and it's children too)\n       * @param path\n       */\n      refreshNode: function (path) {\n        var instance = ui.model.findByPath(path);\n        if (instance) {\n          var node = ui.editor.select('.node[data-path=\"' + path + '\"]');\n          var treeHeight = kModelHelper.getNodeTreeHeight(instance);\n          var computedWidth = NODE_WIDTH + (20 * treeHeight);\n          if (instance.host) {\n            computedWidth = NODE_WIDTH + (20 * (kModelHelper.getNodeTreeHeight(instance.host) - 1));\n          }\n\n          node.relocate(instance);\n\n          node.select('.bg')\n            .attr({\n              width: computedWidth,\n              height: uiUtils.getNodeUIHeight(instance)\n            });\n\n          ui.editor\n            .selectAll('.node[data-path=\"' + path + '\"] > text')\n            .attr({\n              x: computedWidth / 2,\n              'clip-path': 'url(#node-clip-' + treeHeight + ')'\n            });\n\n          instance.components.array.forEach(function (comp) {\n            ui.refreshComp(comp.path());\n          });\n\n          instance.hosts.array.forEach(function (host) {\n            ui.refreshNode(host.path());\n          });\n\n          // apply dx,dy transformation of level-1 children\n          var children = ui.editor.selectAll('.node[data-path=\"' + instance.path() + '\"] > .instance')\n            .items;\n          var dy = NODE_HEIGHT;\n          children.forEach(function (child) {\n            child.transform('t' + ((computedWidth - child.select('.bg')\n              .asPX('width')) / 2) + ',' + dy);\n            dy += child.select('.bg')\n              .asPX('height') + 10;\n          });\n\n          instance.components.array.forEach(function (comp) {\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(function (binding) {\n                ui.createBinding(binding);\n              });\n            });\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(function (binding) {\n                ui.createBinding(binding);\n              });\n            });\n          });\n\n          this.updateValidity(instance);\n        }\n      },\n\n      /**\n       *\n       * @param path\n       */\n      refreshComp: function (path) {\n        var instance = ui.model.findByPath(path);\n        if (instance) {\n          var comp = ui.editor.select('.comp[data-path=\"' + path + '\"]');\n          var host = ui.editor.select('.node[data-path=\"' + instance.eContainer()\n            .path() + '\"]');\n          var treeHeight = kModelHelper.getNodeTreeHeight(instance.eContainer());\n          var computedWidth = host.select('.bg')\n            .asPX('width') - 20;\n\n          if (comp && host) {\n            comp.select('.bg')\n              .attr({\n                width: computedWidth\n              });\n            ui.editor\n              .selectAll('.comp[data-path=\"' + path + '\"] > text')\n              .attr({\n                x: computedWidth / 2,\n                'clip-path': 'url(#comp-clip-' + treeHeight + ')'\n              });\n\n            var PORT_X_PADDING = 3;\n            instance.typeDefinition.required.array.forEach(function (portType) {\n              var port = comp.select('.required[data-name=\"' + portType.name + '\"]');\n              port.transform('t' + (computedWidth - PORT_X_PADDING) + ',' + port.transform()\n                .localMatrix.f);\n            });\n\n            this.updateValidity(instance);\n          }\n        } else {\n          this.createComponent(instance);\n        }\n      },\n\n      getSelected: function () {\n        return this.editor\n          .selectAll('.selected')\n          .items\n          .map(function (elem) {\n            // all selected element are in groups so we need to return the parent\n            return elem.parent();\n          });\n      },\n\n      getSelectedPaths: function () {\n        return this.getSelected()\n          .map(function (elem) {\n            return elem.attr('data-path');\n          });\n      },\n\n      getSelectedNodes: function () {\n        return this.editor\n          .selectAll('.node > .selected')\n          .items\n          .map(function (bg) {\n            return bg.parent();\n          });\n      },\n\n      getNodePathAtPoint: function (x, y) {\n        var container = this.getEditorContainer();\n        var node = ui.getHoveredNode(x - container.offsetLeft, y - container.offsetTop);\n        if (node) {\n          return node.attr('data-path');\n        } else {\n          return null;\n        }\n      },\n\n      getEditorContainer: function () {\n        return document.getElementById('editor-container');\n      },\n\n      selectAll: function () {\n        this.editor.selectAll('.bg')\n          .items.forEach(function (elem) {\n            elem.addClass('selected');\n          });\n      },\n\n      isSelected: function (path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          if (elem.select('.bg')\n            .hasClass('selected')) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n\n      setDropTarget: function (elem) {\n        this.dropTarget = elem;\n      },\n\n      getDropTarget: function () {\n        return this.dropTarget;\n      },\n\n      setModel: function (model) {\n        this.model = model;\n        if (this.editor) {\n          uiUtils.updateSVGDefs(model);\n\n          this.editor.clear();\n        }\n      },\n\n      getHoveredNode: function (x, y, bannedPath) {\n        var m = this.editor.transform()\n          .localMatrix;\n        return this.editor\n          .selectAll('.node')\n          .items\n          .filter(function (node) {\n            if (bannedPath) {\n              return node.attr('data-path') !== bannedPath &&\n                uiUtils.isPointInsideElem(node, x, y, m);\n            } else {\n              return uiUtils.isPointInsideElem(node, x, y, m);\n            }\n          })\n          .sort(function (a, b) {\n            return a.getBBox()\n              .width - b.getBBox()\n              .width;\n          })[0];\n      },\n\n      getHoveredChan: function (x, y) {\n        var chans = this.editor\n          .selectAll('.chan')\n          .items;\n        for (var i = 0; i < chans.length; i++) {\n          if (Snap.path.isPointInsideBBox(chans[i].getBBox(), x, y)) {\n            return chans[i];\n          }\n        }\n        return null;\n      },\n\n      getHoveredPort: function (x, y) {\n        var ports = this.editor\n          .selectAll('.port')\n          .items;\n        for (var i = 0; i < ports.length; i++) {\n          if (uiUtils.isPointInsideElem(ports[i], x, y, this.editor.transform()\n              .localMatrix)) {\n            return ports[i];\n          }\n        }\n        return null;\n      },\n\n      hasErrors: function () {\n        return this.editor.selectAll('.invalid-icon')\n          .length > 0;\n      },\n\n      order: function () {\n        this.editor.selectAll('.binding')\n          .forEach(function (binding) {\n            binding.node.parentNode.appendChild(binding.node);\n          });\n      }\n    };\n\n    /**\n     *\n     */\n    Snap.plugin(function (Snap, Element) {\n      var dragStart = function (x, y, evt) {\n        if (!this.parent()\n          .hasClass('instance')) {\n          var instances = jQuery(ui.editor.node)\n            .find('> .instance');\n          this.node.parentNode.insertBefore(this.node, instances[instances.length - 1].nextSibling);\n        }\n\n        this.data('dragStartX', x);\n        this.data('dragStartY', y);\n\n        ui.draggedInstancePath = this.attr('data-path');\n\n        var handlers = this.data('dragStart');\n        if (handlers) {\n          handlers.forEach(function (handler) {\n            handler.apply(this, [x, y, evt]);\n          }.bind(this));\n        }\n\n        if (this.hasClass('comp') || this.hasClass('node')) {\n          var bbox = uiUtils.getAbsoluteBBox(this);\n          this.data('ot', 't' + bbox.x + ',' + bbox.y);\n        } else {\n          this.data('ot', this.transform()\n            .local);\n        }\n\n        this.data('hasMoved', false);\n      };\n\n      var dragMove = function (dx, dy, x, y, evt) {\n        var dragStartX = this.data('dragStartX'),\n          dragStartY = this.data('dragStartY');\n        if (typeof dragStartX !== 'undefined' && typeof dragStartY !== 'undefined') {\n          if ((typeof dx === 'object') && (dx.type === 'touchmove')) {\n            evt = dx;\n            x = evt.changedTouches[0].clientX;\n            y = evt.changedTouches[0].clientY;\n            dx = x - dragStartX;\n            dy = y - dragStartY;\n          }\n\n          this.transform(this.data('ot') + (this.data('ot') ? 'T' : 't') + [dx, dy]);\n\n          if (this.data('hasMoved')) {\n            var handlers = this.data('dragMove');\n            if (handlers) {\n              handlers.forEach(function (handler) {\n                handler.apply(this, [dx, dy, x, y, evt]);\n              }.bind(this));\n            }\n          } else {\n            this.data('hasMoved', true);\n            var firstDragMoveHandlers = this.data('firstDragMove');\n            if (firstDragMoveHandlers) {\n              firstDragMoveHandlers.forEach(function (handler) {\n                handler.apply(this, [dx, dy, x, y, evt]);\n              }.bind(this));\n            }\n          }\n        }\n      };\n\n      var dragEnd = function () {\n        var args = arguments;\n        if (this.data('hasMoved')) {\n          // update position\n          var instance = ui.model.findByPath(this.attr('data-path'));\n          if (instance) {\n            // update model with new position on drag end\n            var pos = instance.findMetaDataByID(KWE_POSITION);\n            if (!pos) {\n              pos = kFactory.createValue();\n              pos.name = KWE_POSITION;\n              instance.addMetaData(pos);\n            }\n            var matrix = this.transform()\n              .localMatrix;\n            pos.value = JSON.stringify({\n              x: matrix.e,\n              y: matrix.f\n            });\n          }\n\n          // trigger handlers\n          var handlers = this.data('dragEnd');\n          if (handlers) {\n            handlers.forEach(function (handler) {\n              handler.apply(this, args);\n            }.bind(this));\n          }\n\n          this.data('hasMoved', false);\n        }\n        this.removeData('dragStartX');\n        this.removeData('dragStartY');\n        this.removeData('ot');\n        ui.draggedInstancePath = null;\n      };\n\n      Element.prototype.draggable = function () {\n        return this.drag(function (dx, dy, x, y, evt) {\n          if (evt.which === 1) {\n            dragMove.apply(this, arguments);\n          }\n        }, function (x, y, evt) {\n          if (evt.which === 1) {\n            dragStart.apply(this, arguments);\n          }\n        }, function (evt) {\n          if (evt.which === 1) {\n            dragEnd.apply(this, arguments);\n          }\n        });\n      };\n\n      Element.prototype.dragStart = function (handler) {\n        var handlers = this.data('dragStart') || [];\n        handlers.push(handler);\n        return this.data('dragStart', handlers);\n      };\n\n      Element.prototype.dragEnd = function (handler) {\n        var handlers = this.data('dragEnd') || [];\n        handlers.push(handler);\n        return this.data('dragEnd', handlers);\n      };\n\n      Element.prototype.dragMove = function (handler) {\n        var handlers = this.data('dragMove') || [];\n        handlers.push(handler);\n        return this.data('dragMove', handlers);\n      };\n\n      Element.prototype.startPtDrag = function (handler) {\n        return this.data('startPtDrag', handler);\n      };\n\n      Element.prototype.endPtDrag = function (handler) {\n        return this.data('endPtDrag', handler);\n      };\n\n      Element.prototype.firstDragMove = function (handler) {\n        var handlers = this.data('firstDragMove') || [];\n        handlers.push(handler);\n        return this.data('firstDragMove', handlers);\n      };\n\n      Element.prototype.selectable = function (instance) {\n        var selectable = function (evt) {\n          if (evt.which === 1) {\n            evt.cancelBubble = true;\n\n            if (!evt.ctrlKey && !evt.shiftKey) {\n              ui.editor.selectAll('.selected')\n                .forEach(function (elem) {\n                  elem.removeClass('selected');\n                  var path = elem.parent().attr('data-path');\n                  if (path && path.length > 0) {\n                    var instance = ui.model.findByPath(path);\n                    kModelHelper.setSelected(instance, false);\n                  }\n                });\n            }\n            if (evt.ctrlKey || evt.shiftKey) {\n              this.select('.bg')\n                .toggleClass('selected');\n              if (this.select('.bg')\n                .hasClass('selected')) {\n                kModelHelper.setSelected(instance, true);\n              } else {\n                kModelHelper.setSelected(instance, false);\n              }\n\n            } else {\n              this.select('.bg')\n                .addClass('selected');\n              kModelHelper.setSelected(instance, true);\n            }\n          }\n        };\n\n        return this\n          .mousedown(selectable)\n          .touchstart(selectable);\n      };\n\n      Element.prototype.relocate = function (instance) {\n        var meta = instance.findMetaDataByID(KWE_POSITION);\n        var pos = {\n          x: 100,\n          y: 100\n        };\n        if (meta) {\n          try {\n            pos = JSON.parse(meta.value);\n          } catch (ignore) {\n            pos = {\n              x: 100,\n              y: 100\n            };\n          }\n        } else {\n          meta = kFactory.createValue();\n          meta.name = KWE_POSITION;\n          meta.value = JSON.stringify(pos);\n          instance.addMetaData(meta);\n        }\n        return this.transform('t' + pos.x + ',' + pos.y);\n      };\n    });\n\n    return ui;\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .constant('GROUP_RADIUS', 55)\n  .constant('GROUP_PLUG_RADIUS', 10)\n  .constant('NODE_WIDTH', 210)\n  .constant('NODE_HEIGHT', 50)\n  .constant('COMP_HEIGHT', 40)\n  .constant('CHANNEL_RADIUS', 12)\n  .constant('INVALID_RADIUS', 5);\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateNode', function (uiUtils, util, kModelHelper, NODE_WIDTH, NODE_HEIGHT) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var treeHeight = kModelHelper.getNodeTreeHeight(instance);\n      var computedWidth = NODE_WIDTH + (20 * treeHeight);\n      if (instance.host) {\n        computedWidth = NODE_WIDTH + (20 * (kModelHelper.getNodeTreeHeight(instance.host) - 1));\n      }\n      var computedHeight = uiUtils.getNodeUIHeight(instance);\n\n      var bg = ui.editor\n        .rect(0, 0, computedWidth, computedHeight, 8)\n        .attr({\n          fill: 'white',\n          fillOpacity: 0.1,\n          stroke: 'white',\n          strokeWidth: 2,\n          class: kModelHelper.isSelected(instance) ? 'bg selected' : 'bg'\n        });\n\n      var nameText = ui.editor\n        .text(computedWidth / 2, NODE_HEIGHT / 2 - 2, instance.name)\n        .attr({\n          fill: util.isTruish(instance.started) ? '#fff' : '#000',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#node-clip-' + treeHeight + ')'\n        });\n\n      var tdefText = ui.editor\n        .text(computedWidth / 2, (NODE_HEIGHT / 2) + 12, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#node-clip-' + treeHeight + ')'\n        });\n\n      var node = ui.editor\n        .group()\n        .attr({\n          'class': 'instance node',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText)\n        .selectable(instance)\n        .draggable()\n        .dragStart(function () {\n          var container = document.getElementById('editor-container');\n          this.data('offset', {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          });\n        })\n        .firstDragMove(function () {\n          var args = arguments;\n          if (instance.host) {\n            // remove instance from host\n            instance.host.removeHosts(instance);\n          }\n\n          // trigger bindings firstDragMove while dragging start\n          var redrawBindings = function (comp) {\n            var redrawBinding = function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('firstDragMove').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            };\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n          };\n          instance.components.array.forEach(redrawBindings);\n\n          // recursive redraw\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(redrawBindings);\n            child.hosts.array.forEach(redrawChild);\n          });\n        })\n        .dragMove(function (dx, dy, clientX, clientY) {\n          var args = arguments;\n\n          // ui-error feedback\n          clearTimeout(this.data('dragTimeout'));\n          var nodeElem = this.data('hoveredNode');\n          if (nodeElem) {\n            nodeElem.select('.bg').removeClass('hovered error');\n          }\n\n          var timeout = setTimeout(function () {\n            var offset = this.data('offset') || {\n              left: 0,\n              right: 0\n            };\n            var nodeElem = ui.getHoveredNode(clientX - offset.left, clientY - offset.top, instance.path());\n            if (nodeElem) {\n              this.data('hoveredNode', nodeElem);\n              nodeElem.select('.bg').addClass('hovered');\n            } else {\n              this.data('hoveredNode', null);\n            }\n          }.bind(this), 100);\n          this.data('dragTimeout', timeout);\n\n          // redraw group-wire while dragging\n          var redrawWire = function (group, node) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n            if (wire) {\n              wire.data('endPtDrag').apply(wire, args);\n            }\n          };\n          instance.groups.array.forEach(function (group) {\n            redrawWire(group, instance);\n          });\n\n          // redraw bindings while dragging\n          var redrawBindings = function (comp) {\n            var redrawBinding = function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('endPtDrag').apply(elem, args);\n              }\n            };\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n          };\n          instance.components.array.forEach(redrawBindings);\n\n          // recursive redraw\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(redrawBindings);\n            child.groups.array.forEach(function (group) {\n              redrawWire(group, child);\n            });\n            child.hosts.array.forEach(redrawChild);\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n\n          var hoveredNode = this.data('hoveredNode');\n          if (hoveredNode) {\n            // remove green ui-feedback\n            hoveredNode.select('.bg').removeClass('hovered error');\n\n            // put it in the hovered node\n            node.remove();\n            ui.model.findByPath(hoveredNode.attr('data-path')).addHosts(instance);\n          }\n\n          function updateWire(group, node) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n            if (wire) {\n              wire.data('dragEnd').forEach(function (handler) {\n                handler.apply(wire, args);\n              });\n            }\n          }\n          instance.groups.array.forEach(function (group) {\n            this.removeData(group.path());\n            updateWire(group, instance);\n          }.bind(this));\n\n          clearTimeout(this.data('dragTimeout'));\n\n          // update bindings coords when dragging done\n          function updateBindings(comp) {\n            function updateBindingCoords(binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('dragEnd').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            }\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(updateBindingCoords);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(updateBindingCoords);\n            });\n          }\n          instance.components.array.forEach(updateBindings);\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(updateBindings);\n            child.groups.array.forEach(function (group) {\n              updateWire(group, child);\n            });\n            child.hosts.array.forEach(redrawChild);\n          });\n\n          this.removeData('dragTimeout');\n          this.removeData('hoveredNode');\n          this.removeData('offset');\n        });\n\n      if (instance.host) {\n        var host = ui.editor.select('.node[data-path=\"' + instance.host.path() + '\"]');\n        var children = host.selectAll('.node[data-path=\"' + instance.host.path() + '\"] > .instance').items;\n        var dx = (host.select('.bg').asPX('width') - computedWidth) / 2,\n          dy = NODE_HEIGHT;\n        children.forEach(function (child) {\n          dy += child.select('.bg').asPX('height') + 10;\n        });\n        host.append(node);\n        node.transform('t' + dx + ',' + dy);\n      } else {\n        node.relocate(instance);\n      }\n\n      ui.updateValidity(instance);\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateGroupWire', function (uiUtils, util, GROUP_RADIUS) {\n    return function (ui, group, node) {\n      var grpElem, nodeElem, wireElem, wireBg, pt, data = {};\n\n      function computeData() {\n        grpElem = ui.editor.select('.group[data-path=\"' + group.path() + '\"]');\n        nodeElem = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n        wireElem = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n\n        var grpMatrix = grpElem.transform().localMatrix,\n          toBox = uiUtils.getAbsoluteBBox(nodeElem);\n\n        data = {\n          from: {\n            x: 0,\n            y: 0\n          },\n          to: {\n            x: toBox.x - grpMatrix.e,\n            y: toBox.y - grpMatrix.f\n          },\n          width: nodeElem.select('.bg').asPX('width'),\n          height: nodeElem.select('.bg').asPX('height')\n        };\n      }\n      computeData();\n      var toAnchor = uiUtils.computeWireNodeAnchor(data.from, data.to, data.width, data.height);\n      if (wireElem) {\n        // update data\n        wireElem\n          .data('data', data);\n        // update bg location\n        wireBg = wireElem\n          .select('path')\n          .attr({\n            d: 'M' + data.from.x + ',' + data.from.y + ' ' + toAnchor.x + ',' + toAnchor.y\n          });\n        pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n        wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + toAnchor.x + ',' + toAnchor.y });\n        // update node plug location\n        wireElem\n          .select('circle')\n          .attr({\n            cx: toAnchor.x,\n            cy: toAnchor.y\n          });\n      } else {\n        wireBg = ui.editor\n          .path('M' + data.from.x + ',' + data.from.y + ' ' + toAnchor.x + ',' + toAnchor.y)\n          .attr({\n            fill: 'none',\n            stroke: '#5aa564',\n            strokeWidth: 4,\n            strokeLineCap: 'round',\n            strokeLineJoin: 'round',\n            'class': 'bg'\n          })\n          .mouseover(function () {\n            this.attr({\n              strokeWidth: 5\n            });\n          })\n          .mouseout(function () {\n            this.attr({\n              strokeWidth: 4\n            });\n          });\n\n        var nodePlug = ui.editor\n          .circle(toAnchor.x, toAnchor.y, 4)\n          .attr({\n            fill: 'white'\n          });\n\n        grpElem\n          .group()\n          .attr({\n            'class': 'group-wire',\n            'data-from': group.path(),\n            'data-to': node.path()\n          })\n          .data('data', data)\n          .append(wireBg)\n          .append(nodePlug)\n          .selectable()\n          .startPtDrag(function (dx, dy) {\n            var data = this.data('data');\n            var newTo = {\n              x: data.to.x - dx,\n              y: data.to.y - dy\n            };\n            var anchor = uiUtils.computeWireNodeAnchor(data.from, newTo, data.width, data.height);\n            wireBg.attr({\n              d: 'M' + data.from.x + ',' + data.from.y + ' ' + anchor.x + ',' + anchor.y\n            });\n            pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n            wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + anchor.x + ',' + anchor.y });\n            nodePlug.attr({\n              cx: anchor.x,\n              cy: anchor.y\n            });\n          })\n          .endPtDrag(function (dx, dy) {\n            var data = this.data('data');\n            var nTo = {\n              x: data.to.x + dx,\n              y: data.to.y + dy\n            };\n            var anchor = uiUtils.computeWireNodeAnchor(data.from, nTo, data.width, data.height);\n            wireBg.attr({\n              d: 'M' + data.from.x + ',' + data.from.y + ' ' + anchor.x + ',' + anchor.y\n            });\n            pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n            wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + anchor.x + ',' + anchor.y });\n            nodePlug.attr({\n              cx: anchor.x,\n              cy: anchor.y\n            });\n          })\n          .dragEnd(function () {\n            computeData();\n            this.data('data', data);\n          });\n\n        pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n        wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + toAnchor.x + ',' + toAnchor.y });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateGroup', function (kModelHelper, uiUtils, util, GROUP_RADIUS, GROUP_PLUG_RADIUS) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var bg = ui.editor\n        .circle(0, 0, GROUP_RADIUS)\n        .attr({\n          fill: 'green',\n          stroke: '#000',\n          strokeWidth: 3,\n          'class': kModelHelper.isSelected(instance) ? 'bg selected' : 'bg',\n          opacity: 0.75\n        });\n\n      var plug = ui.editor\n        .circle(0, (GROUP_RADIUS / 2) + GROUP_PLUG_RADIUS, GROUP_PLUG_RADIUS)\n        .attr({\n          fill: '#f1c30f',\n          'class': 'group-plug'\n        })\n        .mouseover(function () {\n          this.attr({\n            r: GROUP_PLUG_RADIUS + 1\n          });\n        })\n        .mouseout(function () {\n          this.attr({\n            r: GROUP_PLUG_RADIUS\n          });\n        })\n        .drag(\n          function (dx, dy, cx, cy) {\n            var plugPos = this.data('plugPos');\n            this.data('wire').attr({\n              d: 'M' + plugPos.x + ',' + plugPos.y + ' ' + (plugPos.x + dx) + ',' + (plugPos.y + dy)\n            });\n\n            clearTimeout(this.data('wireTimeout'));\n            var nodeElem = this.data('hoveredNode');\n            if (nodeElem) {\n              nodeElem.select('.bg').removeClass('hovered error');\n            }\n\n            var timeout = setTimeout(function () {\n              var pt = uiUtils.getPointInEditor(cx, cy);\n              var nodeElem = ui.getHoveredNode(pt.x, pt.y);\n              if (nodeElem) {\n                this.data('hoveredNode', nodeElem);\n                var nodeBg = nodeElem.select('.bg');\n                nodeBg.addClass('hovered');\n\n                var node = ui.model.findByPath(nodeElem.attr('data-path'));\n                if (instance.findSubNodesByID(node.name)) {\n                  nodeBg.addClass('error');\n                }\n              } else {\n                this.data('hoveredNode', null);\n              }\n            }.bind(this), 100);\n            this.data('wireTimeout', timeout);\n          },\n          function () {\n            var grpM = group.transform().localMatrix; // eslint-disable-line\n            var plugPos = {\n              x: grpM.e,\n              y: grpM.f + (GROUP_RADIUS / 2) + GROUP_PLUG_RADIUS\n            };\n            this.data('plugPos', plugPos);\n            var wire = ui.editor\n              .path('M' + plugPos.x + ',' + plugPos.y + ' ' + plugPos.x + ',' + plugPos.y)\n              .attr({\n                fill: 'none',\n                stroke: '#5aa564',\n                strokeWidth: 5,\n                strokeLineCap: 'round',\n                strokeLineJoin: 'round',\n                opacity: 0.7\n              });\n            this.data('wire', wire);\n          },\n          function () {\n            var nodeElem = this.data('hoveredNode');\n            if (nodeElem) {\n              if (!nodeElem.select('.bg').hasClass('error')) {\n                // node elem found\n                var nodeInstance = ui.model.findByPath(nodeElem.attr('data-path'));\n                if (instance.findSubNodesByID(nodeInstance.name)) {\n                  // this node is already connected to the group\n                } else {\n                  // this node is not connected to the group\n                  instance.addSubNodes(nodeInstance);\n                }\n              }\n\n              // remove ui feedback\n              nodeElem.select('.bg').removeClass('hovered error');\n            }\n\n            this.data('wire').remove();\n            clearTimeout(this.data('wireTimeout'));\n\n            this.removeData('wire');\n            this.removeData('hoveredNode');\n            this.removeData('plugPos');\n            this.removeData('wireTimeout');\n          }\n        );\n\n      var nameText = ui.editor\n        .text(0, -5, instance.name)\n        .attr({\n          fill: util.isTruish(instance.started) ? '#fff' : '#000',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#group-clip)'\n        });\n\n      var tdefText = ui.editor\n        .text(0, 10, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#group-clip)'\n        });\n\n      var group = ui.editor\n        .group()\n        .attr({\n          'class': 'instance group',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText)\n        .append(plug)\n        .selectable(instance)\n        .draggable()\n        .dragMove(function () {\n          var args = arguments;\n          instance.subNodes.array.forEach(function (subNode) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + instance.path() + '\"][data-to=\"' + subNode.path() + '\"]');\n            if (wire) {\n              wire.data('startPtDrag').apply(wire, args);\n            }\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n          instance.subNodes.array.forEach(function (subNode) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + instance.path() + '\"][data-to=\"' + subNode.path() + '\"]');\n            if (wire) {\n              wire.data('dragEnd').forEach(function (handler) {\n                handler.apply(wire, args);\n              });\n            }\n          });\n        })\n        .relocate(instance);\n\n      ui.updateValidity(instance);\n\n      plug.touchstart(function (evt) {\n        evt.cancelBubble = true;\n      });\n      plug.mousedown(function (evt) {\n        evt.cancelBubble = true;\n      });\n\n      return group;\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateComponent', function ($uibModal, uiUtils, util, kFactory, kModelHelper, Notification, COMP_HEIGHT, NODE_HEIGHT) {\n    return function (ui, instance) {\n      var output, input;\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var host = ui.editor.select('.instance[data-path=\"' + instance.eContainer().path() + '\"]');\n      var computedWidth = host.select('.bg').asPX('width') - 20,\n        computedHeight = uiUtils.getCompUIHeight(instance);\n      var hostHeight = kModelHelper.getNodeTreeHeight(instance.eContainer());\n      var bg = ui.editor\n        .rect(0, 0, computedWidth, computedHeight, 3)\n        .attr({\n          fill: 'black',\n          fillOpacity: util.isTruish(instance.started) ? 1 : 0.65,\n          stroke: 'white',\n          strokeWidth: 1.5,\n          'class': kModelHelper.isSelected(instance) ? 'bg selected' : 'bg'\n        });\n\n      var nameText = ui.editor\n        .text(computedWidth / 2, computedHeight / 2, instance.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#comp-clip-' + hostHeight + ')'\n        });\n\n      var tdefText = ui.editor\n        .text(computedWidth / 2, (computedHeight / 2) + 12, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#comp-clip-' + hostHeight + ')'\n        });\n\n      var comp = ui.editor\n        .group()\n        .attr({\n          'class': 'instance comp',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText);\n\n      var PORT_X_PADDING = 3,\n        providedDy = 0,\n        requiredDy = 0;\n      instance.typeDefinition.provided.array.forEach(function (portType) {\n        var portPlug = ui.editor\n          .rect(-8, 5, 10, COMP_HEIGHT - 10, 2)\n          .attr({\n            fill: '#bc7645',\n            stroke: '#ECCA40',\n            strokeWidth: 2\n          })\n          .mouseover(function () {\n            this.attr({\n              strokeWidth: 3\n            });\n          })\n          .mouseout(function () {\n            this.attr({\n              strokeWidth: 2\n            });\n          })\n          .mousedown(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .touchstart(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .drag(\n            function (dx, dy, cx, cy) {\n              var portPos = this.data('portPos');\n              var middle = { x: 0, y: 0 };\n              if (portPos.x > (portPos.x + dx)) {\n                middle.x = (portPos.x + dx) + (portPos.x - (portPos.x + dx)) / 2;\n              } else {\n                middle.x = portPos.x + ((portPos.x + dx) - portPos.x) / 2;\n              }\n\n              middle.y = ((portPos.y >= (portPos.y + dy)) ? portPos.y : (portPos.y + dy)) + 20;\n              this.data('binding').attr({\n                d: 'M' + portPos.x + ',' + portPos.y + ' Q' + middle.x + ',' + middle.y + ' ' + (portPos.x + dx) + ',' + (portPos.y + dy)\n              });\n\n              clearTimeout(this.data('bindingTimeout'));\n              var portElem = this.data('hoveredPort');\n              if (portElem) {\n                portElem.select('text').removeClass('hovered error');\n              }\n              var chanElem = this.data('hoveredChan');\n              if (chanElem) {\n                chanElem.select('.bg').removeClass('hovered error');\n              }\n\n              var timeout = setTimeout(function () {\n                var pt = uiUtils.getPointInEditor(cx, cy);\n                var portElem = ui.getHoveredPort(pt.x, pt.y);\n                if (portElem) {\n                  this.data('hoveredChan', null);\n                  this.data('hoveredPort', portElem);\n                  var portText = portElem.select('text');\n                  portText.addClass('hovered');\n\n                  if (portElem.hasClass('provided')) {\n                    portText.addClass('error');\n                  }\n\n                } else {\n                  this.data('hoveredPort', null);\n                  var chanElem = ui.getHoveredChan(portPos.x + dx, portPos.y + dy);\n                  if (chanElem) {\n                    this.data('hoveredChan', chanElem);\n                    var chanBg = chanElem.select('.bg');\n                    chanBg.addClass('hovered');\n\n                    var chan = ui.model.findByPath(chanElem.attr('data-path'));\n                    if (kModelHelper.isAlreadyBound(instance.findProvidedByID(portType.name), chan) ||\n                      !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                      chanBg.addClass('error');\n                    }\n                  } else {\n                    this.data('hoveredChan', null);\n                  }\n                }\n              }.bind(this), 100);\n              this.data('bindingTimeout', timeout);\n            },\n            function () {\n              var portM = input.transform().localMatrix,\n                compBox = uiUtils.getAbsoluteBBox(comp);\n              var portPos = {\n                x: portM.e + compBox.x,\n                y: portM.f + compBox.y + ((COMP_HEIGHT - 6) / 2) + 3\n              };\n              this.data('portPos', portPos);\n              var binding = ui.editor\n                .path('M' + portPos.x + ',' + portPos.y + ' ' + portPos.x + ',' + portPos.y)\n                .attr({\n                  fill: 'none',\n                  stroke: '#ECCA40',\n                  strokeWidth: 5,\n                  strokeLineCap: 'round',\n                  strokeLineJoin: 'round',\n                  opacity: 0.7\n                });\n              this.data('binding', binding);\n            },\n            function () {\n              clearTimeout(this.data('bindingTimeout'));\n\n              var port = instance.findProvidedByID(portType.name);\n              if (!port) {\n                port = kFactory.createPort();\n                port.name = portType.name;\n                port.portTypeRef = portType;\n                instance.addProvided(port);\n              }\n\n              var hoveredChan = this.data('hoveredChan');\n              if (hoveredChan) {\n                var chan = ui.model.findByPath(hoveredChan.attr('data-path'));\n                if (!hoveredChan.select('.bg').hasClass('error')) {\n                  if (chan) {\n                    var binding = kFactory.createMBinding();\n                    binding.hub = chan;\n                    binding.port = port;\n                    ui.model.addMBindings(binding);\n                  }\n                } else {\n                  if (chan && !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                    Notification.error({\n                      title: 'Binding error',\n                      message: '<strong>' + chan.typeDefinition.name + '</strong> cannot run on platform <strong>' + kModelHelper.getPlatforms(instance.eContainer().typeDefinition).join('') + '</strong>',\n                      delay: 10000\n                    });\n                  }\n                }\n\n                // remove ui feedback\n                hoveredChan.select('.bg').removeClass('hovered error');\n              } else {\n                var hoveredPort = this.data('hoveredPort');\n                if (hoveredPort) {\n                  if (!hoveredPort.select('text').hasClass('error')) {\n                    var otherPortName = hoveredPort.attr('data-name');\n                    var otherPortComp = ui.model.findByPath(hoveredPort.parent().attr('data-path'));\n                    var otherPort = otherPortComp.findRequiredByID(otherPortName);\n                    if (!otherPort) {\n                      otherPort = kFactory.createPort();\n                      otherPort.name = otherPortName;\n                      otherPort.portTypeRef = otherPortComp.typeDefinition.findRequiredByID(otherPortName);\n                      otherPortComp.addRequired(otherPort);\n                    }\n\n                    $uibModal\n                      .open({\n                        templateUrl: 'app/main/editor/select-chan.modal.html',\n                        controller: 'SelectChanModalCtrl',\n                        resolve: {\n                          startPort: port,\n                          endPort: otherPort\n                        }\n                      })\n                      .result.then(function (chanInstance) {\n                        if (chanInstance) {\n                          var binding = kFactory.createMBinding();\n                          binding.hub = chanInstance;\n                          binding.port = port;\n                          ui.model.addMBindings(binding);\n\n                          var binding2 = kFactory.createMBinding();\n                          binding2.hub = chanInstance;\n                          binding2.port = otherPort;\n                          ui.model.addMBindings(binding2);\n                        }\n                      });\n                  }\n                  hoveredPort.select('text').removeClass('hovered error');\n                }\n              }\n\n              this.data('binding').remove();\n\n              this.removeData('binding');\n              this.removeData('bindingTimeout');\n              this.removeData('hoveredPort');\n              this.removeData('hoveredChan');\n              this.removeData('portPos');\n            });\n\n        var text = ui.editor\n          .text(6, COMP_HEIGHT - 4, portType.name.substr(0, 6))\n          .attr({\n            fill: 'white',\n            title: portType.name\n          })\n          .append(Snap.parse('<title>' + portType.name + '</title>'));\n\n        input = ui.editor\n          .group()\n          .attr({\n            'class': 'port provided',\n            'data-name': portType.name\n          })\n          .append(portPlug)\n          .append(text)\n          .transform('t' + PORT_X_PADDING + ',' + providedDy);\n\n        comp.append(input);\n\n        providedDy += COMP_HEIGHT;\n      });\n\n      instance.typeDefinition.required.array.forEach(function (portType) {\n        var portPlug = ui.editor\n          .rect(-3, 5, 10, COMP_HEIGHT - 10, 2)\n          .attr({\n            fill: '#bc7645',\n            stroke: '#C60808',\n            strokeWidth: 2\n          })\n          .mouseover(function () {\n            this.attr({ strokeWidth: 3 });\n          })\n          .mouseout(function () {\n            this.attr({ strokeWidth: 2 });\n          })\n          .mousedown(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .touchstart(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .drag(\n            function (dx, dy, cx, cy) {\n              var portPos = this.data('portPos');\n              var middle = {\n                x: 0,\n                y: 0\n              };\n              if (portPos.x > (portPos.x + dx)) {\n                middle.x = (portPos.x + dx) + (portPos.x - (portPos.x + dx)) / 2;\n              } else {\n                middle.x = portPos.x + ((portPos.x + dx) - portPos.x) / 2;\n              }\n\n              middle.y = ((portPos.y >= (portPos.y + dy)) ? portPos.y : (portPos.y + dy)) + 20;\n              this.data('binding').attr({\n                d: 'M' + portPos.x + ',' + portPos.y + ' Q' + middle.x + ',' + middle.y + ' ' + (portPos.x + dx) + ',' + (portPos.y + dy)\n              });\n\n              clearTimeout(this.data('bindingTimeout'));\n              var portElem = this.data('hoveredPort');\n              if (portElem) {\n                portElem.select('text').removeClass('hovered error');\n              }\n              var chanElem = this.data('hoveredChan');\n              if (chanElem) {\n                chanElem.select('.bg').removeClass('hovered error');\n              }\n\n              var timeout = setTimeout(function () {\n                var pt = uiUtils.getPointInEditor(cx, cy);\n                var portElem = ui.getHoveredPort(pt.x, pt.y);\n                if (portElem) {\n                  this.data('hoveredChan', null);\n                  this.data('hoveredPort', portElem);\n                  if (portElem.hasClass('required')) {\n                    portElem.select('text').addClass('hovered error');\n                  } else {\n                    portElem.select('text').addClass('hovered');\n                  }\n                } else {\n                  this.data('hoveredPort', null);\n                  var chanElem = ui.getHoveredChan(portPos.x + dx, portPos.y + dy);\n                  if (chanElem) {\n                    this.data('hoveredChan', chanElem);\n                    var chanBg = chanElem.select('.bg');\n                    chanBg.addClass('hovered');\n\n                    var chan = ui.model.findByPath(chanElem.attr('data-path'));\n                    if (kModelHelper.isAlreadyBound(instance.findRequiredByID(portType.name), chan) ||\n                      !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                      chanBg.addClass('error');\n                    }\n                  } else {\n                    this.data('hoveredChan', null);\n                  }\n                }\n              }.bind(this), 100);\n              this.data('bindingTimeout', timeout);\n            },\n            function () {\n              var portM = output.transform().localMatrix,\n                compBox = uiUtils.getAbsoluteBBox(comp);\n              var portPos = {\n                x: portM.e + compBox.x,\n                y: portM.f + compBox.y + ((COMP_HEIGHT - 6) / 2) + 3\n              };\n              this.data('portPos', portPos);\n              var binding = ui.editor\n                .path('M' + portPos.x + ',' + portPos.y + ' ' + portPos.x + ',' + portPos.y)\n                .attr({\n                  fill: 'none',\n                  stroke: '#C60808',\n                  strokeWidth: 5,\n                  strokeLineCap: 'round',\n                  strokeLineJoin: 'round',\n                  opacity: 0.7\n                });\n              this.data('binding', binding);\n            },\n            function () {\n              clearTimeout(this.data('bindingTimeout'));\n\n              var port = instance.findRequiredByID(portType.name);\n              if (!port) {\n                port = kFactory.createPort();\n                port.name = portType.name;\n                port.portTypeRef = portType;\n                instance.addRequired(port);\n              }\n\n              var hoveredChan = this.data('hoveredChan');\n              if (hoveredChan) {\n                var chan = ui.model.findByPath(hoveredChan.attr('data-path'));\n                if (!hoveredChan.select('.bg').hasClass('error')) {\n                  if (chan) {\n                    var binding = kFactory.createMBinding();\n                    binding.hub = chan;\n                    binding.port = port;\n                    ui.model.addMBindings(binding);\n                  }\n                } else {\n                  if (chan && !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                    Notification.error({\n                      title: 'Binding error',\n                      message: '<strong>' + chan.typeDefinition.name + '</strong> cannot run on platform <strong>' + kModelHelper.getPlatforms(instance.eContainer().typeDefinition).join('') + '</strong>',\n                      delay: 10000\n                    });\n                  }\n                }\n\n                // remove ui feedback\n                hoveredChan.select('.bg').removeClass('hovered error');\n              } else {\n                var hoveredPort = this.data('hoveredPort');\n                if (hoveredPort) {\n                  if (!hoveredPort.select('text').hasClass('error')) {\n                    var otherPortName = hoveredPort.attr('data-name');\n                    var otherPortComp = ui.model.findByPath(hoveredPort.parent().attr('data-path'));\n                    var otherPort = otherPortComp.findProvidedByID(otherPortName);\n                    if (!otherPort) {\n                      otherPort = kFactory.createPort();\n                      otherPort.name = otherPortName;\n                      otherPort.portTypeRef = otherPortComp.typeDefinition.findProvidedByID(otherPortName);\n                      otherPortComp.addProvided(otherPort);\n                    }\n\n                    $uibModal\n                      .open({\n                        templateUrl: 'app/main/editor/select-chan.modal.html',\n                        controller: 'SelectChanModalCtrl',\n                        resolve: {\n                          startPort: port,\n                          endPort: otherPort\n                        }\n                      })\n                      .result.then(function (chanInstance) {\n                        if (chanInstance) {\n                          var binding = kFactory.createMBinding();\n                          binding.hub = chanInstance;\n                          binding.port = port;\n                          ui.model.addMBindings(binding);\n\n                          var binding2 = kFactory.createMBinding();\n                          binding2.hub = chanInstance;\n                          binding2.port = otherPort;\n                          ui.model.addMBindings(binding2);\n                        }\n                      });\n                  }\n                  hoveredPort.select('text').removeClass('hovered error');\n                }\n              }\n\n              this.data('binding').remove();\n\n              this.removeData('binding');\n              this.removeData('bindingTimeout');\n              this.removeData('hoveredChan');\n              this.removeData('hoveredPort');\n              this.removeData('portPos');\n            });\n\n        var text = ui.editor\n          .text(-6, COMP_HEIGHT - 4, portType.name.substr(0, 6))\n          .attr({\n            fill: 'white',\n            textAnchor: 'end',\n            title: portType.name\n          })\n          .append(Snap.parse('<title>' + portType.name + '</title>'));\n\n        output = ui.editor\n          .group()\n          .attr({\n            'class': 'port required',\n            'data-name': portType.name\n          })\n          .append(portPlug)\n          .append(text)\n          .transform('t' + (computedWidth - PORT_X_PADDING) + ',' + requiredDy);\n\n        comp.append(output);\n\n        requiredDy += COMP_HEIGHT;\n      });\n\n      comp.selectable(instance)\n        .draggable()\n        .dragStart(function () {\n          var container = document.getElementById('editor-container');\n          this.data('offset', {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          });\n        })\n        .firstDragMove(function () {\n          var args = arguments;\n\n          this.data('parentNode', instance.eContainer());\n          instance.eContainer().removeComponents(instance);\n\n          // redraw bindings after component when dragging start\n          var redrawBindings = function (port) {\n            port.bindings.array.forEach(function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('firstDragMove').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            });\n          };\n          instance.provided.array.forEach(redrawBindings);\n          instance.required.array.forEach(redrawBindings);\n        })\n        .dragMove(function (dx, dy, clientX, clientY) {\n          var args = arguments;\n\n          // ui-error feedback\n          clearTimeout(this.data('dragTimeout'));\n          var nodeElem = this.data('hoveredNode');\n          if (nodeElem) {\n            nodeElem.select('.bg').removeClass('hovered error');\n          }\n\n          var timeout = setTimeout(function () {\n            var offset = this.data('offset');\n            var nodeElem = ui.getHoveredNode(clientX - offset.left, clientY - offset.top, instance.path());\n            if (nodeElem) {\n              this.data('hoveredNode', nodeElem);\n              nodeElem.select('.bg').addClass('hovered');\n            } else {\n              this.data('hoveredNode', null);\n            }\n          }.bind(this), 100);\n          this.data('dragTimeout', timeout);\n\n          // redraw bindings when dragging\n          var redrawBindings = function (port) {\n            port.bindings.array.forEach(function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('endPtDrag').apply(elem, args);\n              }\n            });\n          };\n          instance.provided.array.forEach(redrawBindings);\n          instance.required.array.forEach(redrawBindings);\n        })\n        .dragEnd(function () {\n          var hoveredNode = this.data('hoveredNode');\n          if (hoveredNode) {\n            // remove ui-feedback classes\n            hoveredNode.select('.bg').removeClass('hovered error');\n\n            comp.remove();\n            ui.model.findByPath(hoveredNode.attr('data-path')).addComponents(instance);\n          } else {\n            // if dropped in \"nothing\" then put it back into its old host node\n            comp.remove();\n            this.data('parentNode').addComponents(instance);\n          }\n\n          clearTimeout(this.data('dragTimeout'));\n\n          this.removeData('parentNode');\n          this.removeData('offset');\n          this.removeData('hoveredNode');\n          this.removeData('dragTimeout');\n        });\n\n      var children = host.selectAll('.instance[data-path=\"' + instance.eContainer().path() + '\"] > .instance').items;\n      var dx = (host.select('.bg').asPX('width') - computedWidth) / 2,\n        dy = NODE_HEIGHT;\n      children.forEach(function (child) {\n        dy += child.select('.bg').asPX('height') + 10;\n      });\n      comp.transform('t' + dx + ',' + dy);\n      host.append(comp);\n\n      ui.updateValidity(instance);\n\n      return comp;\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateChannel', function (kModelHelper, uiUtils, util, CHANNEL_RADIUS) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var bg = ui.editor\n        .circle(0, 0, CHANNEL_RADIUS)\n        .attr({\n          fill: '#DB661D',\n          stroke: util.isTruish(instance.started) ? '#fff' : '#000',\n          strokeWidth: 2,\n          class: kModelHelper.isSelected(instance) ? 'bg selected' : 'bg',\n          opacity: 0.75,\n          title: instance.name + ': ' + instance.typeDefinition.name\n        });\n\n      // var nameText = ui.editor\n      //     .text(0, -5, instance.name)\n      //     .attr({\n      //         fill: util.isTruish(instance.started) ? '#fff' : '#000',\n      //         textAnchor: 'middle',\n      //         'class': 'name',\n      //         'clip-path': 'url(#chan-clip)'\n      //     });\n      //\n      // var tdefText = ui.editor\n      //     .text(0, 10, instance.typeDefinition.name)\n      //     .attr({\n      //         fill: 'white',\n      //         textAnchor: 'middle',\n      //         'clip-path': 'url(#chan-clip)'\n      //     });\n\n      var channel = ui.editor\n        .group()\n        .attr({\n          'class': 'instance chan',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        // .append(nameText)\n        // .append(tdefText)\n        .selectable(instance)\n        .draggable()\n        .dragMove(function () {\n          var args = arguments;\n          instance.bindings.array.forEach(function (binding) {\n            //factory.createBinding(binding);\n            var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n            elem.data('startPtDrag').apply(elem, args);\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n\n          // update bindings coords when done\n          instance.bindings.array.forEach(function (binding) {\n            var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n            if (elem) {\n              elem.data('dragEnd').forEach(function (handler) {\n                handler.apply(elem, args);\n              });\n            }\n          });\n        })\n        .relocate(instance);\n\n      bg\n        .mousemove(function (e, cx, cy) {\n          clearTimeout(this.data('showName'));\n          var timeout = setTimeout(function () {\n            var pt = uiUtils.getPointInEditor(cx, cy + 5),\n              textAnchor, x;\n            var width = ui.editor.getBBox().width;\n            if (pt.x > (width / 2)) {\n              x = -(CHANNEL_RADIUS * 2);\n              textAnchor = 'end';\n            } else {\n              x = CHANNEL_RADIUS * 2;\n              textAnchor = 'start';\n            }\n            var elem = channel.select('.name');\n            if (elem) {\n              elem.attr({ x: x, textAnchor: textAnchor });\n            } else {\n              channel.append(ui.editor\n                .text(x, 0, instance.name + ': ' + instance.typeDefinition.name)\n                .attr({\n                  fill: util.isTruish(instance.started) ? '#fff' : '#000',\n                  textAnchor: textAnchor,\n                  'class': 'name'\n                }));\n            }\n          }, 300);\n          this.data('showName', timeout);\n        })\n        .mouseout(function () {\n          clearTimeout(this.data('showName'));\n          var elem = channel.select('.name');\n          if (elem) {\n            elem.remove();\n          }\n        });\n\n      ui.updateValidity(instance);\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateBinding', function (uiUtils, CHANNEL_RADIUS) {\n    return function (ui, binding) {\n      if (binding.hub && binding.port) {\n        var portElem = ui.editor.select('.comp[data-path=\"' + binding.port.eContainer().path() + '\"] .port[data-name=\"' + binding.port.name + '\"]'),\n          chanElem = ui.editor.select('.chan[data-path=\"' + binding.hub.path() + '\"]'),\n          bindingElem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n\n        if (portElem && chanElem) {\n          var coords = uiUtils.computeBindingCoords(portElem, chanElem);\n          if (bindingElem) {\n            bindingElem.data('coords', coords);\n            var path0 = bindingElem\n              .select('.bg')\n              .attr({\n                d: 'M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y\n              });\n            var pt0 = path0.getPointAtLength(CHANNEL_RADIUS + 1);\n            path0.attr({ d: 'M' + pt0.x + ',' + pt0.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n          } else {\n            var bindingBg = ui.editor\n              .path('M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y)\n              .attr({\n                fill: 'none',\n                stroke: (binding.port.getRefInParent() === 'provided') ? '#ECCA40' : '#C60808',\n                strokeWidth: 5,\n                strokeLineCap: 'round',\n                strokeLineJoin: 'round',\n                opacity: 0.7,\n                'class': 'bg'\n              })\n              .mouseover(function () {\n                this.attr({\n                  opacity: 0.85,\n                  strokeWidth: 6\n                });\n              })\n              .mouseout(function () {\n                this.attr({\n                  opacity: 0.7,\n                  strokeWidth: 5\n                });\n              });\n\n            var pt1 = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n            bindingBg.attr({ d: 'M' + pt1.x + ',' + pt1.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n\n            ui.editor\n              .group()\n              .attr({\n                'class': 'binding',\n                'data-path': binding.path()\n              })\n              .data('coords', coords)\n              .append(bindingBg)\n              .selectable()\n              .firstDragMove(function () {\n                this.appendTo(ui.editor);\n              })\n              .startPtDrag(function (dx, dy) {\n                var coords = this.data('coords');\n                var chanDx = coords.chan.x + dx,\n                  chanDy = coords.chan.y + dy;\n\n                if (coords.port.x > chanDx) {\n                  coords.middle.x = chanDx + (coords.port.x - chanDx) / 2;\n                } else {\n                  coords.middle.x = coords.port.x + (chanDx - coords.port.x) / 2;\n                }\n\n                coords.middle.y = ((coords.port.y >= chanDy) ? coords.port.y : chanDy) + 20;\n\n                bindingBg.attr({\n                  d: 'M' + chanDx + ',' + chanDy + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y\n                });\n                var pt = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n                bindingBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n              })\n              .endPtDrag(function (dx, dy) {\n                var coords = this.data('coords');\n                var portDx = coords.port.x + dx,\n                  portDy = coords.port.y + dy;\n\n                if (portDx > coords.chan.x) {\n                  coords.middle.x = coords.chan.x + (portDx - coords.chan.x) / 2;\n                } else {\n                  coords.middle.x = portDx + (coords.chan.x - portDx) / 2;\n                }\n\n                coords.middle.y = ((portDy >= coords.chan.y) ? portDy : coords.chan.y) + 20;\n\n                bindingBg.attr({\n                  d: 'M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + portDx + ',' + portDy\n                });\n                var pt = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n                bindingBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + portDx + ',' + portDy });\n              })\n              .dragEnd(function () {\n                var portElem = ui.editor.select(\n                    '.comp[data-path=\"' + binding.port.eContainer().path() + '\"] ' +\n                    '.port[data-name=\"' + binding.port.name + '\"]'),\n                  chanElem = ui.editor.select('.chan[data-path=\"' + binding.hub.path() + '\"]');\n                this.data('coords', uiUtils.computeBindingCoords(portElem, chanElem));\n              });\n          }\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('stringToNumber', function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function (value) {\n          return value;\n        });\n        ngModel.$formatters.push(function (value) {\n          return parseFloat(value);\n        });\n      }\n    };\n  });\n","'use strict';\n\n(function () {\n  angular.module('editorApp')\n    .factory('kRegistry', KevoreeRegistryService);\n\n  KevoreeRegistryService.$inject = ['$q', 'storage', 'kFactory', 'KEVOREE_REGISTRY_URL'];\n\n  function KevoreeRegistryService($q, storage, kFactory, KEVOREE_REGISTRY_URL) {\n    var cachedUrl = null;\n    var loader = kFactory.createJSONLoader();\n\n    // INIT REGISTRY URL\n    var storedUrl = storage.get('registry');\n    if (storedUrl) {\n      try {\n        setUrl(new URL(storedUrl));\n      } catch (ignore) {\n        Notification.error({\n          title: 'Kevoree Registry',\n          message: 'Stored URL in local storage is malformed. You should update it',\n          delay: 8000\n        });\n      }\n    } else {\n      setUrl(new URL(KEVOREE_REGISTRY_URL));\n    }\n\n    return {\n      getUrl: getUrl,\n      setUrl: setUrl,\n      transformTdef: transformTdef,\n      namespace: {\n        all: allNamespaces\n      },\n      tdef: {\n        getLatestsByNamespace: getLatestTdefsByNamespace,\n        getAllByNamespaceAndName: getAllTdefsByNamespaceAndName,\n      },\n      du: {\n        getReleases: getDuReleases,\n        getLatests: getDuLatests,\n      }\n    };\n\n    function setUrl(url) {\n      var port;\n      if (url.port && url.port.length > 0) {\n        port = parseInt(url.port, 10);\n      } else {\n        if (url.protocol === 'http:') {\n          port = 80;\n        } else {\n          port = 443;\n        }\n      }\n      TinyConf.set('registry.host', url.hostname);\n      TinyConf.set('registry.port', port);\n      TinyConf.set('registry.ssl', url.protocol === 'https:');\n      cachedUrl = url;\n      storage.set('registry', url.toString());\n    }\n\n    function getUrl() {\n      return cachedUrl;\n    }\n\n    function allNamespaces() {\n      return $q.when(KevoreeRegistryClient.namespace.all());\n    }\n\n    function getLatestTdefsByNamespace(namespace) {\n      return $q.when(KevoreeRegistryClient.tdef.getLatestsByNamespace(namespace))\n        .then(function (tdefs) {\n          tdefs.sort(function (a, b) {\n            if (a.name < b.name) {\n              return -1;\n            }\n            if (a.name > b.name) {\n              return 1;\n            }\n            return 0;\n          });\n          return tdefs.map(transformTdef);\n        });\n    }\n\n    function getAllTdefsByNamespaceAndName(namespace, name) {\n      return $q.when(KevoreeRegistryClient.tdef.getAllByNamespaceAndName(namespace, name))\n        .then(function (tdefs) {\n          return tdefs.map(transformTdef);\n        });\n    }\n\n    function getDuReleases(namespace, name, version) {\n      return $q.when(KevoreeRegistryClient.du.getReleases(namespace, name, version))\n        .then(function (dus) {\n          return dus.map(transformDu);\n        });\n    }\n\n    function getDuLatests(namespace, name, version) {\n      return $q.when(KevoreeRegistryClient.du.getLatests(namespace, name, version))\n        .then(function (dus) {\n          return dus.map(transformDu);\n        });\n    }\n\n    function transformTdef(tdef) {\n      try {\n        tdef.model = loader.loadModelFromString(tdef.model).get(0);\n        tdef.type = inferType(tdef.model);\n        tdef.description = getDescription(tdef.model);\n      } catch (err) {\n        tdef.error = 'Unable to parse model';\n        tdef.type = inferTypeFromJSON(tdef.model);\n        tdef.description = getDescriptionFromJSON(tdef.model);\n      }\n      return tdef;\n    }\n\n    function transformDu(du) {\n      try {\n        du.model = loader.loadModelFromString(du.model).get(0);\n      } catch (err) {\n        du.error = 'Unable to parse model';\n      }\n      return du;\n    }\n\n    function inferType(model) {\n      if (model.metaClassName() === 'org.kevoree.NodeType') {\n        return 'node';\n      } else if (model.metaClassName() === 'org.kevoree.ComponentType') {\n        return 'component';\n      } else if (model.metaClassName() === 'org.kevoree.ChannelType') {\n        return 'channel';\n      } else if (model.metaClassName() === 'org.kevoree.GroupType') {\n        return 'group';\n      }\n    }\n\n    function getDescription(model) {\n      var meta = model.findMetaDataByID('description');\n      if (meta) {\n        return meta.value;\n      } else {\n        return null;\n      }\n    }\n\n    function inferTypeFromJSON(model) {\n      if (model.class.startsWith('org.kevoree.NodeType')) {\n        return 'node';\n      } else if (model.class.startsWith('org.kevoree.ComponentType')) {\n        return 'component';\n      } else if (model.class.startsWith('org.kevoree.ChannelType')) {\n        return 'channel';\n      } else if (model.class.startsWith('org.kevoree.GroupType')) {\n        return 'group';\n      }\n    }\n\n    function getDescriptionFromJSON(model) {\n      var desc = model.metaData.find(function (meta) {\n        return meta.name === 'description';\n      });\n      return desc ? desc.value : null;\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .directive('loadingOverlay', function (kEditor) {\n    return {\n      restrict: 'A',\n      scope: false,\n      link: function (scope, elem) {\n        var id = 'id_' + Math.floor((Math.random()*10000)+1);\n        var overlay = jQuery('<div>', { id: id, class: 'overlay' }).append(\n            jQuery('<p>', { class: 'center-message' }).html('Loading model...'));\n\n        function preSetModelHandler() {\n          elem.append(overlay);\n        }\n\n        function postSetModelHandler() {\n          overlay.remove();\n        }\n\n        var unregister = kEditor.addPreSetModelHandler(preSetModelHandler);\n        var unregister2 = kEditor.addPostSetModelHandler(postSetModelHandler);\n        scope.$on('$destroy', function () {\n          unregister();\n          unregister2();\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kScript', function () {\n    function Logger(tag) {\n      this.tag = tag;\n    }\n\n    Logger.prototype = {\n      info: function (msg) {\n        console.log(this.tag, msg); // eslint-disable-line\n      },\n      debug: function (msg) {\n        console.debug(this.tag, msg); // eslint-disable-line\n      },\n      error: function (msg) {\n        console.error(this.tag, msg); // eslint-disable-line\n      },\n      warn: function (msg) {\n        console.warn(this.tag, msg); // eslint-disable-line\n      }\n    };\n\n    return new KevoreeKevscript(new Logger('KevScript'), {\n      resolver: KevoreeKevscript.Resolvers.tagResolverFactory(new Logger('TagResolver'),\n        KevoreeKevscript.Resolvers.modelResolverFactory(new Logger('ModelResolver'),\n          KevoreeKevscript.Resolvers.registryResolverFactory(new Logger('RegistryResolver'))))\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kFactory', function () {\n    return new KevoreeLibrary.factory.DefaultKevoreeFactory();\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('instanceName', function (kEditor) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        instance: '&instance',\n        instanceType: '&instanceType'\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        ctrl.$parsers.push(function checkUnicity(value) {\n          var model = kEditor.getModel();\n          var elem;\n\n          switch (scope.instanceType()) {\n            case 'node':\n              elem = model.findNodesByID(value);\n              break;\n            case 'group':\n              elem = model.findGroupsByID(value);\n              break;\n            case 'channel':\n              elem = model.findHubsByID(value);\n              break;\n            case 'component':\n              elem = scope.instance().eContainer().findComponentsByID(value);\n              break;\n          }\n\n          if (elem) {\n            // something has already this name\n            if (elem.path() === scope.instance().path()) {\n              // it is the same old value, everything is fine\n              ctrl.$setValidity('notUniqueName', true);\n            } else {\n              // it matches another instance in the model => wrong\n              ctrl.$setValidity('notUniqueName', false);\n            }\n          } else {\n            // name is ok\n            ctrl.$setValidity('notUniqueName', true);\n          }\n          return value;\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kInstance', function (kFactory, kModelHelper) {\n    return {\n      /**\n       * Init instance dictionaries with default values and stuff\n       * @param instance\n       */\n      initDictionaries: function (instance) {\n        // create dictionary values if none set\n        instance.dictionary = instance.dictionary || kFactory.createDictionary().withGenerated_KMF_ID('0.0');\n        if (instance.typeDefinition.dictionaryType) {\n          instance.typeDefinition.dictionaryType.attributes\n            .array.forEach(function (attr) {\n              var val;\n              if (!kModelHelper.isTruish(attr.fragmentDependant)) {\n                // attribute is not fragment dependant\n                val = instance.dictionary.findValuesByID(attr.name);\n                if (!val) {\n                  val = kFactory.createValue();\n                  val.name = attr.name;\n                  val.value = attr.defaultValue;\n                  instance.dictionary.addValues(val);\n                }\n              } else {\n                // attribute is fragment dependant\n                // create fragment dictionaries if needed\n                switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n                  case 'channel':\n                    instance.bindings.array.forEach(function (binding) {\n                      if (binding.port) {\n                        if (!instance.findFragmentDictionaryByID(binding.port.eContainer().eContainer().name)) {\n                          var fragDic = kFactory.createFragmentDictionary();\n                          fragDic.name = binding.port.eContainer().eContainer().name;\n                          instance.addFragmentDictionary(fragDic);\n                        }\n                      }\n                    });\n                    break;\n\n                  case 'group':\n                    instance.subNodes.array.forEach(function (node) {\n                      if (!instance.findFragmentDictionaryByID(node.name)) {\n                        var fragDic = kFactory.createFragmentDictionary();\n                        fragDic.name = node.name;\n                        instance.addFragmentDictionary(fragDic);\n                      }\n                    });\n                    break;\n                }\n                // add default value to fragment dictionaries that does not already have them\n                instance.fragmentDictionary.array.forEach(function (fragDic) {\n                  val = fragDic.findValuesByID(attr.name);\n                  if (!val) {\n                    val = kFactory.createValue();\n                    val.name = attr.name;\n                    val.value = attr.defaultValue;\n                    fragDic.addValues(val);\n                  }\n                });\n              }\n            });\n        }\n      },\n\n      /**\n       * Init instance fragment dictionaries (normal dictionary will not be init)\n       * @param instance\n       */\n      initFragmentDictionaries: function (instance) {\n        if (instance.typeDefinition.dictionaryType) {\n          instance.typeDefinition.dictionaryType.attributes\n            .array.forEach(function (attr) {\n              var val;\n              if (kModelHelper.isTruish(attr.fragmentDependant)) {\n                // attribute is fragment dependant\n                // create fragment dictionaries if needed\n                switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n                  case 'channel':\n                    instance.bindings.array.forEach(function (binding) {\n                      if (binding.port) {\n                        if (!instance.findFragmentDictionaryByID(binding.port.eContainer().eContainer().name)) {\n                          var fragDic = kFactory.createFragmentDictionary();\n                          fragDic.name = binding.port.eContainer().eContainer().name;\n                          instance.addFragmentDictionary(fragDic);\n                        }\n                      }\n                    });\n                    break;\n\n                  case 'group':\n                    instance.subNodes.array.forEach(function (node) {\n                      if (!instance.findFragmentDictionaryByID(node.name)) {\n                        var fragDic = kFactory.createFragmentDictionary();\n                        fragDic.name = node.name;\n                        instance.addFragmentDictionary(fragDic);\n                      }\n                    });\n                    break;\n                }\n                // add default value to fragment dictionaries that does not already have them\n                instance.fragmentDictionary.array.forEach(function (fragDic) {\n                  val = fragDic.findValuesByID(attr.name);\n                  if (!val) {\n                    val = kFactory.createValue();\n                    val.name = attr.name;\n                    val.value = attr.defaultValue;\n                    fragDic.addValues(val);\n                  }\n                });\n              }\n            });\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp').factory('kEditor', function ($timeout, kFactory, kModelHelper, kInstance, ui, Notification, KWE_POSITION, KWE_FOLDED, KWE_SELECTED, KWE_TAG, CHANNEL_RADIUS, GROUP_RADIUS) {\n  function modelReactor(editor) {\n    /**\n     * Updates UI according to model changes\n     * @param trace\n     */\n    return function (trace) {\n      var fragDic,\n        highestNode;\n      editor.invokeModelUpdateListeners();\n\n      function processRefreshRecursively(node) {\n        node.components.array.forEach(function (comp) {\n          comp.provided.array.forEach(function (port) {\n            port.bindings.array.forEach(function (binding) {\n              if (ui.editor) {\n                ui.createBinding(binding);\n              }\n            });\n          });\n          comp.required.array.forEach(function (port) {\n            port.bindings.array.forEach(function (binding) {\n              if (ui.editor) {\n                ui.createBinding(binding);\n              }\n            });\n          });\n        });\n        node.groups.array.forEach(function (group) {\n          if (ui.editor) {\n            ui.createGroupWire(group, node);\n          }\n        });\n        node.hosts.array.forEach(processRefreshRecursively);\n      }\n\n      if (trace.elementAttributeName === 'typeDefinitions' || trace.elementAttributeName === 'packages') {\n        editor.invokeModelUpdateListeners('tdefs');\n      }\n\n      try {\n        if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.REMOVE) {\n          //console.log('REMOVE', trace);\n          if (trace.previousPath === '/') {\n            if (trace.elementAttributeName === 'hubs' || trace.elementAttributeName === 'nodes' || trace.elementAttributeName === 'groups') {\n              if (ui.editor) {\n                ui.deleteInstance(trace.source, trace.previous_value); // jshint ignore:line\n              }\n              editor.invokeModelUpdateListeners('selected');\n            } else if (trace.elementAttributeName === 'mBindings') {\n              if (ui.editor) {\n                ui.deleteBinding(trace.previous_value); // jshint ignore:line\n              }\n            }\n          } else {\n            if (trace.elementAttributeName === 'hosts' || trace.elementAttributeName === 'components') {\n              if (ui.editor) {\n                ui.deleteInstance(trace.source, trace.previous_value); // jshint ignore:line\n              }\n              editor.invokeModelUpdateListeners('selected');\n\n            } else if (trace.elementAttributeName === 'groups') {\n              // means detaching a node from a group\n              if (ui.editor) {\n                ui.deleteGroupWire(trace.previous_value, trace.previousPath); // jshint ignore:line\n              }\n              fragDic = trace.value.findFragmentDictionaryByID(trace.source.name);\n              if (fragDic) {\n                fragDic.delete();\n              }\n            } else if (trace.elementAttributeName === 'bindings') {\n              if (trace.source.getRefInParent() === 'hubs') {\n                trace.source.fragmentDictionary.array.forEach(function (dic) {\n                  var hasBinding = false;\n\n                  // check if there is a binding for this dictionnary\n                  for (var i = 0; i < trace.source.bindings.size(); i++) {\n                    var binding = trace.source.bindings.get(i);\n                    if (binding.port) {\n                      if (binding.port.eContainer().eContainer().name === dic.name) {\n                        hasBinding = true;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (!hasBinding) {\n                    // no binding found for this dictionary => delete it\n                    dic.delete();\n                  }\n                });\n              }\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.REMOVE_ALL) {\n          //console.log('REMOVE_ALL', trace);\n          if (trace.previousPath === '/') {\n            switch (trace.elementAttributeName) {\n              case 'hubs':\n                if (ui.editor) {\n                  ui.deleteChannels();\n                }\n                break;\n\n              case 'nodes':\n                if (ui.editor) {\n                  ui.deleteNodes();\n                }\n                break;\n\n              case 'groups':\n                if (ui.editor) {\n                  ui.deleteGroups();\n                }\n                break;\n\n              case 'mBindings':\n                if (ui.editor) {\n                  ui.deleteBindings();\n                }\n                break;\n            }\n          } else {\n            switch (trace.elementAttributeName) {\n              case 'groups':\n                trace.value.array.forEach(function (group) {\n                  if (ui.editor) {\n                    ui.deleteGroupWire(group.path(), trace.previousPath);\n                  }\n                  var fragDic = group.findFragmentDictionaryByID(trace.source.name);\n                  if (fragDic) {\n                    fragDic.delete();\n                  }\n                });\n                break;\n\n              case 'bindings':\n                trace.value.array.forEach(function (binding) {\n                  if (ui.editor) {\n                    ui.deleteBinding(binding.path());\n                  }\n                  if (!binding.hub || !binding.port) {\n                    binding.delete();\n                  }\n                });\n                //uiFactory.deleteBindings(trace.previousPath);\n                // TODO check if there is at least one binding to this node, otherwise\n                // we can remove all fragmentDictionaries between those bindings' channels and nodes\n                break;\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.ADD) {\n          //console.log('ADD', trace);\n          if (trace.previousPath === '/') {\n            switch (trace.elementAttributeName) {\n              case 'hubs':\n                //console.log('ADD hubs', trace);\n                if (ui.editor) {\n                  ui.createChannel(trace.value);\n                }\n                break;\n\n              case 'nodes':\n              case 'hosts':\n                //console.log('ADD nodes|hosts', trace);\n                if (ui.editor) {\n                  ui.createNode(trace.value);\n                  highestNode = kModelHelper.getHighestNode(trace.value);\n                  if (highestNode) {\n                    ui.refreshNode(highestNode.path());\n                  }\n                }\n                break;\n\n              case 'groups':\n                //console.log('ADD groups', trace);\n                if (ui.editor) {\n                  ui.createGroup(trace.value);\n                }\n                break;\n\n              case 'mBindings':\n                //console.log('ADD mBinding', trace);\n                if (ui.editor) {\n                  ui.createBinding(trace.value);\n                }\n                break;\n            }\n          } else {\n            switch (trace.elementAttributeName) {\n              case 'groups':\n                //console.log('ADD .groups', trace);\n                if (ui.editor) {\n                  ui.createGroupWire(trace.value, trace.source);\n                }\n                break;\n\n              case 'components':\n                //console.log('ADD .components', trace);\n                if (ui.editor) {\n                  ui.createComponent(trace.value);\n                }\n\n                highestNode = kModelHelper.getHighestNode(trace.value);\n                if (ui.editor) {\n                  ui.refreshNode(highestNode.path());\n                }\n                processRefreshRecursively(highestNode);\n                break;\n\n              case 'hosts':\n                //console.log('ADD .hosts', trace.source.path(), trace.value.path());\n                if (ui.editor) {\n                  ui.createNode(trace.value);\n                }\n\n                // recursively recreate children UIs\n                trace.value.components.array.forEach(function (comp) {\n                  if (ui.editor) {\n                    ui.createComponent(comp);\n                  }\n                });\n                trace.value.hosts.array.sort(function (a, b) {\n                  // TODO optimize this to loop only once to create node tree heights\n                  return kModelHelper.getNodeTreeHeight(b) - kModelHelper.getNodeTreeHeight(a);\n                }).forEach(function updateChildNode(childNode) {\n                  if (ui.editor) {\n                    ui.createNode(childNode);\n                  }\n                  childNode.components.array.forEach(function (comp) {\n                    if (ui.editor) {\n                      ui.createComponent(comp);\n                    }\n                  });\n                  childNode.hosts.array.forEach(updateChildNode);\n                });\n\n                highestNode = kModelHelper.getHighestNode(trace.source);\n                if (ui.editor) {\n                  ui.refreshNode(highestNode.path());\n                }\n                processRefreshRecursively(highestNode);\n                break;\n\n              case 'subNodes':\n                //console.log('ADD .subNodes', trace);\n                kInstance.initFragmentDictionaries(trace.source);\n                editor.invokeModelUpdateListeners('selected');\n                break;\n\n              case 'bindings':\n                editor.invokeModelUpdateListeners('selected');\n                break;\n\n              case 'metaData':\n                if (trace.value.name === KWE_FOLDED && trace.source.getRefInParent() === 'nodes') {\n                  if (ui.editor) {\n                    ui.toggleFold(trace.source, kModelHelper.isTruish(trace.value.value));\n                  }\n                }\n                break;\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.SET) {\n          switch (trace.elementAttributeName) {\n            case 'name':\n              //console.log('SET name', trace);\n              if (trace.source.getRefInParent() === 'nodes') {\n                // update groups fragmentDictionaries\n                trace.source.groups.array.forEach(function (group) {\n                  fragDic = group.findFragmentDictionaryByID(trace.previous_value); // jshint ignore:line\n                  if (fragDic) {\n                    fragDic.name = trace.source.name;\n                  }\n                });\n                // update bindings fragmentDictionaries\n                trace.source.components.array.forEach(function (comp) {\n                  function processPort(port) {\n                    port.bindings.array.forEach(function (binding) {\n                      if (binding.hub) {\n                        fragDic = binding.hub.findFragmentDictionaryByID(trace.previous_value); // jshint ignore:line\n                        if (fragDic) {\n                          fragDic.name = trace.source.name;\n                        }\n                      }\n                    });\n                  }\n\n                  comp.provided.array.forEach(processPort);\n                  comp.required.array.forEach(processPort);\n                });\n              }\n              if (ui.editor) {\n                ui.updateInstance(trace.previousPath, trace.source);\n              }\n              break;\n\n            case 'value':\n              // console.log('SET value', trace);\n              if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_POSITION) {\n                if (ui.editor) {\n                  ui.updatePosition(trace.source.eContainer());\n                }\n                if (trace.source.eContainer().getRefInParent() === 'nodes') {\n                  processRefreshRecursively(trace.source.eContainer());\n                } else if (trace.source.eContainer().getRefInParent() === 'groups') {\n                  trace.source.eContainer().subNodes.array.forEach(function (node) {\n                    if (ui.editor) {\n                      ui.createGroupWire(trace.source.eContainer(), node);\n                    }\n                  });\n                } else if (trace.source.eContainer().getRefInParent() === 'hubs') {\n                  trace.source.eContainer().bindings.array.forEach(function (binding) {\n                    if (ui.editor) {\n                      ui.createBinding(binding);\n                    }\n                  });\n                }\n              } else if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_FOLDED) {\n                // fold/unfold\n                if (trace.source.eContainer().getRefInParent() === 'nodes') {\n                  if (ui.editor) {\n                    ui.toggleFold(trace.source.eContainer(), kModelHelper.isTruish(trace.source.value));\n                  }\n                }\n              } else if (trace.source.eContainer().getRefInParent() === 'dictionary') {\n                if (ui.editor) {\n                  ui.updateValidity(trace.source.eContainer().eContainer());\n                }\n              } else if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_SELECTED) {\n                editor.invokeModelUpdateListeners('selected');\n              }\n              break;\n\n            case 'started':\n              //console.log('SET started', trace);\n              if (ui.editor) {\n                ui.updateInstance(trace.previousPath, trace.source);\n              }\n              break;\n\n            case 'typeDefinition':\n              if (trace.value !== null) {\n                switch (trace.source.getRefInParent()) {\n                  case 'components':\n                    //console.log('SET typeDef', trace);\n                    if (ui.editor) {\n                      ui.updateCompTypeDefinition(trace.source, trace.previous_value); // jshint ignore:line\n                    }\n                    break;\n\n                  default:\n                    //console.log('SET typeDef unhandled', trace);\n                    break;\n                }\n              }\n              break;\n\n            default:\n              //console.log('SET ignored', trace);\n              break;\n          }\n        }\n      } catch (err) {\n        Notification.error({\n          title: 'Error',\n          message: 'Unable to update model'\n        });\n        console.error(err.stack); // eslint-disable-line\n      }\n    };\n  }\n\n  function KevoreeEditor() {\n    this.model = kFactory.createContainerRoot().withGenerated_KMF_ID(0);\n    kFactory.root(this.model);\n    this.preSetModelHandler = [];\n    this.postSetModelHandler = [];\n    this.modelUpdateListenersEnabled = true;\n    this.modelUpdateListeners = [];\n    this.newModelListeners = [];\n    this.modelListener = {\n      elementChanged: modelReactor(this)\n    };\n    ui.setModel(this.model);\n  }\n\n  KevoreeEditor.prototype = {\n    /**\n     *\n     * @returns {*}\n     */\n    getModel: function () {\n      return this.model;\n    },\n\n    /**\n     *\n     * @param model\n     */\n    setModel: function (model, callback) {\n      this.preSetModelHandler.forEach(function (handler) {\n        handler();\n      });\n      setTimeout(function () {\n        var error;\n        try {\n          KevoreeValidator(model); // jshint ignore:line\n          this.model = model;\n          kFactory.root(this.model);\n\n          this.model.addModelTreeListener(this.modelListener);\n\n          ui.setModel(model);\n\n          this.invokeNewModelListeners();\n        } catch (err) {\n          error = err;\n        } finally {\n          if (error) {\n            console.error('[editor.factory.setModel()] Error setting model'); // eslint-disable-line\n            console.error(error.stack); // eslint-disable-line\n          }\n          this.postSetModelHandler.forEach(function (handler) {\n            handler();\n          });\n          if (callback) {\n            $timeout(angular.noop, 100).then(function () {\n              callback(error);\n            });\n          }\n        }\n      }.bind(this), 20);\n    },\n\n    /**\n     *\n     * @param model\n     */\n    merge: function (model) {\n      this.model.removeModelTreeListener(this.modelListener);\n      var compare = kFactory.createModelCompare();\n      compare.merge(this.model, model).applyOn(this.model);\n      kFactory.root(this.model);\n      this.model.addModelTreeListener(this.modelListener);\n      ui.setModel(this.model);\n      this.drawModel();\n    },\n\n    addPreSetModelHandler: function (handler) {\n      var index = this.preSetModelHandler.push(handler) - 1;\n      return function () {\n        this.preSetModelHandler.splice(index, 1);\n      }.bind(this);\n    },\n\n    addPostSetModelHandler: function (handler) {\n      var index = this.postSetModelHandler.push(handler) - 1;\n      return function () {\n        this.postSetModelHandler.splice(index, 1);\n      }.bind(this);\n    },\n\n    /**\n     * Add a listener that will be invoked each time a new model is set\n     * @param {string} id\n     * @param {Function} listener\n     * @returns {Function} unregister listener\n     */\n    addNewModelListener: function (id, listener) {\n      if (!this.newModelListeners[id]) {\n        this.newModelListeners[id] = [];\n      }\n      this.newModelListeners[id].push(listener);\n\n      return function () {\n        if (this.newModelListeners[id]) {\n          this.newModelListeners[id].splice(this.newModelListeners[id].indexOf(listener), 1);\n        }\n      }.bind(this);\n    },\n\n    /**\n     * Add listener that will be invoked on each update of the model\n     * @param {string} id\n     * @param {Function} listener\n     * @param {boolean} strict optional flag that will prevent this\n     *                  listener to be called unless the invoke method\n     *                  is called using this precise id as event name\n     * @returns {Function} unregister listener\n     */\n    addModelUpdateListener: function (id, listener, strict) {\n      if (!this.modelUpdateListeners[id]) {\n        this.modelUpdateListeners[id] = [];\n      }\n      var item = {\n        strict: strict,\n        listener: listener\n      };\n      this.modelUpdateListeners[id].push(item);\n\n      return function () {\n        if (this.modelUpdateListeners[id]) {\n          this.modelUpdateListeners[id].splice(this.modelUpdateListeners[id].indexOf(item), 1);\n        }\n      }.bind(this);\n    },\n\n    /**\n     * @param [string] optional event\n     */\n    invokeModelUpdateListeners: function (event) {\n      if (this.modelUpdateListenersEnabled) {\n        Object.keys(this.modelUpdateListeners).forEach(function (id) {\n          this.modelUpdateListeners[id].forEach(function (item) {\n            if (item.strict) {\n              if (id === event) {\n                item.listener();\n              }\n            } else {\n              item.listener();\n            }\n          });\n        }.bind(this));\n      }\n    },\n\n    invokeNewModelListeners: function () {\n      Object.keys(this.newModelListeners).forEach(function (id) {\n        this.newModelListeners[id].forEach(function (listener) {\n          listener();\n        });\n      }.bind(this));\n    },\n\n    disableModelUpdateListeners: function () {\n      this.modelUpdateListenersEnabled = false;\n    },\n\n    enableModelUpdateListeners: function () {\n      this.modelUpdateListenersEnabled = true;\n    },\n\n    removeAllListeners: function () {\n      var id;\n      for (id in this.modelUpdateListeners) {\n        delete this.modelUpdateListeners[id];\n      }\n      for (id in this.newModelListeners) {\n        delete this.newModelListeners[id];\n      }\n    },\n\n    removeModelUpdateListeners: function (id) {\n      delete this.modelUpdateListeners[id];\n    },\n\n    removeNewModelListeners: function (id) {\n      delete this.newModelListeners[id];\n    },\n\n    /**\n     * Try to find a better position for each instances in order to prevent\n     * UI overlapping in editor\n     */\n    fixOverlapping: function () {\n      function relocate(instance, pos) {\n        var meta = instance.findMetaDataByID(KWE_POSITION);\n        if (!meta) {\n          meta = kFactory.createValue();\n          meta.name = KWE_POSITION;\n          meta.value = JSON.stringify(pos);\n          instance.addMetaData(meta);\n        } else {\n          meta.value = JSON.stringify(pos);\n        }\n      }\n\n      var groupX = GROUP_RADIUS + 20;\n      this.model.groups.array.forEach(function (group) {\n        relocate(group, {\n          x: groupX,\n          y: GROUP_RADIUS + 20\n        });\n        groupX += GROUP_RADIUS * 2 + 20;\n      });\n\n      var chanX = CHANNEL_RADIUS + 20;\n      this.model.hubs.array.forEach(function (hub) {\n        relocate(hub, {\n          x: chanX,\n          y: 180\n        });\n        chanX += CHANNEL_RADIUS * 2 + 20;\n      });\n\n      var nodeX = 25;\n      this.model.nodes.array.forEach(function (node) {\n        if (!node.host) {\n          // root node (= no parent)\n          var height = kModelHelper.getNodeTreeHeight(node);\n          relocate(node, {\n            x: nodeX,\n            y: 220\n          });\n          nodeX += 230 + (height * 20);\n        }\n      });\n    },\n\n    /**\n     * Create svg UIs based on current model\n     */\n    drawModel: function () {\n      if (ui.editor) {\n        this.model.hubs.array.forEach(function (instance) {\n          ui.createChannel(instance);\n        });\n\n        this.model.nodes.array.sort(function (a, b) {\n          // TODO optimize this to loop only once to create node tree heights\n          return kModelHelper.getNodeTreeHeight(b) - kModelHelper.getNodeTreeHeight(a);\n        }).forEach(function (instance) {\n          ui.createNode(instance);\n          instance.components.array.forEach(function (instance) {\n            ui.createComponent(instance);\n          });\n        });\n\n        this.model.groups.array.forEach(function (instance) {\n          ui.createGroup(instance);\n          instance.subNodes.array.forEach(function (node) {\n            ui.createGroupWire(instance, node);\n          });\n        });\n\n        this.model.mBindings.array.forEach(function (binding) {\n          ui.createBinding(binding);\n        });\n\n        ui.order();\n        this.model.select('**/metaData[name=' + KWE_FOLDED + ']').array.forEach(function (meta) {\n          ui.toggleFold(meta.eContainer(), kModelHelper.isFolded(meta.eContainer()));\n        });\n      }\n    },\n\n    /**\n     * @returns {boolean} true if model has errors\n     */\n    modelHasErrors: function () {\n      // TODO\n      return false;\n    }\n  };\n\n  return new KevoreeEditor();\n});\n","'use strict';\n  (function () {\n\n  angular.module('editorApp')\n    .component('dictionary', {\n      templateUrl: 'app/components/dictionary/dictionary.html',\n      bindings: {\n        name: '@',\n        attrs: '<',\n        dictionary: '<',\n        fragment: '<'\n      },\n      controller: DictionaryController\n    });\n\n  function DictionaryController() {\n    var ctrl = this;\n\n    ctrl.readOnly = false;\n    ctrl.isTruish = isTruish;\n\n    if (ctrl.dictionary && ctrl.dictionary.eContainer()) {\n      var val = ctrl.dictionary.eContainer().findMetaDataByID('access_mode');\n      ctrl.readOnly = val && (val.value === 'read-only');\n    }\n\n    function isTruish(val) {\n      return (val === 'true' || val === true || val > 0);\n    }\n  }\n})();\n","'use strict';\n\n(function () {\n  angular.module('editorApp')\n    .component('dusList', {\n      templateUrl: 'app/components/deploy-unit/dus-list.html',\n      bindings: { dus: '<' },\n      controller: DusListController,\n    });\n\n  DusListController.$inject = ['kRegistry'];\n\n  function DusListController(kRegistry) {\n    var ctrl = this;\n\n    ctrl.baseUrl = kRegistry.getUrl();\n    ctrl.platform = platform;\n\n    function platform(du) {\n      var platform;\n      if (du.platform) {\n        if (du.platform === 'js') {\n          platform = 'javascript';\n        } else {\n          platform = du.platform;\n        }\n      } else {\n        if (du.findFiltersByID) {\n          var p = du.findFiltersByID('platform').value;\n          if (p === 'js') {\n            platform = 'javascript';\n          } else {\n            platform = p;\n          }\n        }\n      }\n      return platform;\n    }\n  }\n})();\n","'use strict'\n\n// DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\nangular\n\t.module('editorApp')\n\t\t.constant('VERSION', \"5.15.0\")\n\t\t.constant('APP_NAME', \"Kevoree Web Editor\")\n\t\t.constant('KWE_POSITION', \"kwe_position\")\n\t\t.constant('KWE_FOLDED', \"kwe_folded\")\n\t\t.constant('KWE_TAG', \"kwe_tag\")\n\t\t.constant('KWE_SELECTED', \"kwe_selected\")\n\t\t.constant('KEVOREE_REGISTRY_URL', \"https://registry.kevoree.org\")\n;\n","'use strict';\n\nangular.module('editorApp')\n\t.config(function ($stateProvider, $urlRouterProvider, hotkeysProvider, hljsServiceProvider, NotificationProvider) {\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider\n\t\t\t.state('app', {\n  abstract: true,\n  url: '?host&port&path',\n  views: {\n    'navbar@': {\n      templateUrl: 'app/navbar/navbar.html',\n      controller: 'NavBarCtrl',\n      controllerAs: 'vm'\n    }\n  }\n});\n\n  hotkeysProvider.template = '<div class=\"editor-shortcuts\" ng-include src=\"\\'app/components/util/hotkeys.html\\'\" ng-if=\"helpVisible\"></div>';\n\n  hljsServiceProvider.setOptions({\n    tabReplace: '  '\n  });\n\n  NotificationProvider.setOptions({\n    startTop: 90,\n    replaceMessage: true,\n    delay: 5000\n  });\n\n  TinyConf.set('cache', {\n    root: 'kevs-cache-',\n    ttl: 1000 * 60 * 60 * 24 // 24 hours\n  });\n});\n"],"sourceRoot":"/source/"}