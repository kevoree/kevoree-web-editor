{"version":3,"sources":["app/app.js","app/treeview/treeview.js","app/treeview/treeview.controller.js","app/treeview/tab-tags/tab-tags.directive.js","app/treeview/tab-params/tab-params.directive.js","app/treeview/tab-json/tab-json.directive.js","app/treeview/tab-create/tab-create.directive.js","app/treeview/tab-actions/tab-actions.directive.js","app/treeview/filter-parser.factory.js","app/treeview/do-filter.filter.js","app/settings/settings.js","app/settings/settings.controller.js","app/navbar/navbar.controller.js","app/main/typedefs/typedefs.controller.js","app/main/main.js","app/main/main.controller.js","app/main/instance/network-modal.controller.js","app/main/instance/instance.controller.js","app/main/instance/group-modal.controller.js","app/main/editor/select-chan-modal.controller.js","app/main/editor/editor.controller.js","app/libraries/tdef-detail.component.js","app/libraries/libraries.js","app/libraries/libraries.controller.js","app/libraries/klist.component.js","app/libraries/dus-modal.controller.js","app/libraries/dus-installer.component.js","app/kevscript/kevscript.js","app/kevscript/kevscript.controller.js","app/components/util/util.factory.js","app/components/util/trust-html.filter.js","app/components/util/truncate.directive.js","app/components/util/save-file.factory.js","app/components/util/on-data.directive.js","app/components/util/naming-pattern.filter.js","app/components/util/kevoree/model-helper.factory.js","app/components/util/is-compatible.filter.js","app/components/util/hljs.directive.js","app/components/util/focus.directive.js","app/components/util/drop-target.directive.js","app/components/util/camelize.filter.js","app/components/util/alert.directive.js","app/components/services/storage.service.js","app/components/kevoree/ws.factory.js","app/components/kevoree/ui/ui-utils.factory.js","app/components/kevoree/ui/ui.factory.js","app/components/kevoree/ui/ui.constant.js","app/components/kevoree/ui/createNode.factory.js","app/components/kevoree/ui/createGroupWire.factory.js","app/components/kevoree/ui/createGroup.factory.js","app/components/kevoree/ui/createComponent.factory.js","app/components/kevoree/ui/createChannel.factory.js","app/components/kevoree/ui/createBinding.factory.js","app/components/kevoree/stringToNumber.directive.js","app/components/kevoree/registry.factory.js","app/components/kevoree/loading-overlay.directive.js","app/components/kevoree/kevscript.factory.js","app/components/kevoree/kevoree.factory.js","app/components/kevoree/instanceName.directive.js","app/components/kevoree/instance.factory.js","app/components/kevoree/editor.factory.js","app/components/kevoree/dictionary.directive.js","app/components/deploy-unit/list/dus-list.component.js","app/components/cm-kevscript/mode.js","app/components/cm-kevscript/lint.js","app/components/cm-kevscript/hint.js","app/app.constants.js","app/app.config.js"],"names":["angular","module","run","$rootScope","$stateParams","kEditor","kFactory","kRegistry","kWs","Notification","VERSION","dndLoad","filename","data","model","oldModel","getModel","loader","createJSONLoader","loadModelFromString","get","err","console","error","stack","title","message","setModel","delay","success","keys","obj","isObject","Object","jQuery","fadeOut","this","remove","host","port","path","url","config","$stateProvider","state","parent","views","content@","templateUrl","controller","onExit","removeModelUpdateListeners","$scope","$timeout","$filter","$uibModal","kModelHelper","kFilterParser","saveFile","hotkeys","transformComponentToTreeItem","instance","nbInstances","item","name","kevsName","eContainer","type","typeName","typeDefinition","version","tags","getTags","selected","isSelected","selectedItems","push","transformNodeToTreeItem","folded","isFolded","children","components","array","map","transformGroupToTreeItem","transformChannelToTreeItem","transformModelToTree","nodes","concat","groups","hubs","expandItemByPath","i","items","length","setFolded","findByPath","processModel","onKeyDown","evt","ctrlPressed","ctrlKey","onKeyUp","selectByType","clearSelected","forEach","setSelected","limit","showTags","filterExpr","filterComparator","treeReverse","query","unregister","addNewModelListener","document","addEventListener","loadMore","onClick","indexOf","splice","onExpand","collapse","expand","selectAll","child","selectNodes","selectGroups","selectChannels","selectComponents","selectByTag","clear","toggleTags","reverseSort","createItem","parentNode","clearFilter","filterError","filterTimeout","onFilterExprChanged","cancel","parseFilterExpr","parse","found","location","start","column","open","preventDefault","onFileLoaded","loading","warn","click","merge","compare","createModelCompare","applyOn","openFromNode","size","$uibModalInstance","action","rendered","then","focus","confirm","closeError","close","mergeFromNode","save","serializer","createJSONSerializer","modelStr","serialize","JSON","stringify","deleteAll","deleteInstances","removeAllPackages","removeAllNodes","removeAllGroups","removeAllHubs","removeAllMBindings","removeAllRepositories","deleteSelection","selection","getSelection","warning","delete","toggleShortcutHelp","toggleCheatSheet","bindTo","add","combo","description","callback","connectSync","body","Math","floor","random","endsWith","str","suffix","substr","$on","removeEventListener","directive","restrict","scope","KWE_TAG","processTags","tag","removeTagFromStr","split","unwatchItems","$watchCollection","addTag","trim","tagMeta","findMetaDataByID","createValue","value","addMetaData","join","validate","removeTag","newTags","kInstance","util","link","convertType","process","prepend","append","min","max","each","toggleEachFlag","started","nets","first","types","getFqn","prev","curr","initDictionaries","dictionary","dictionaryType","select","attr","datatype","val","findValuesByID","newAttr","optional","isTruish","defaultValue","networkInformation","net","values","applyToAllInstances","content","randomString","randomNumber","randomBoolean","allRandom","toggleEach","elems","elem","collapsed","hasOwnProperty","pathId","onPathChanged","setPath","createTdefItem","tdef","instanceTypes","node","getNodeTypes","group","getGroupTypes","channel","getChannelTypes","component","getComponentTypes","selectedType","selectedInstanceType","availableNodes","filter","selectedNode","instancesCount","verifyName","createInstances","instances","namePattern","index","metatype","createContainerNode","createGroup","createChannel","createComponentInstance","tagsMeta","findNodesByID","findGroupsByID","findHubsByID","j","findComponentsByID","create","addNodes","addGroups","addHubs","addComponents","onTypeChange","areInstanceTypesValid","isValid","processData","selectedGroup","processTag","tagsCount","modelHandler","unwatchTags","$watch","openGroupModal","resolve","factory","peg$subclass","ctor","constructor","prototype","peg$SyntaxError","expected","Error","captureStackTrace","peg$parse","input","text","substring","peg$savedPos","peg$currPos","peg$buildException","peg$computeLocation","peg$computePosDetails","pos","p","ch","details","peg$posDetailsCache","line","seenCR","charAt","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","cleanupExpected","sort","a","b","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","replace","expectedDesc","foundDesc","expectedDescs","Array","slice","peg$parseQuery","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseExpr","peg$FAILED","peg$parse_","peg$c0","peg$silentFails","peg$c1","peg$c2","peg$parseTerm","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$parseFilter","peg$parseIs","peg$parseVersion","peg$parseBound","peg$parseTag","peg$parseName","peg$c12","peg$c13","peg$parseIdentifierOrRegex","peg$c14","peg$c11","peg$c16","peg$c17","peg$parseIdentifier","peg$c18","peg$c15","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c19","peg$c32","peg$c33","peg$c34","peg$c31","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c35","peg$parseRegularExpressionLiteral","peg$c41","peg$c43","test","peg$c44","peg$c45","peg$c42","peg$c47","peg$c48","peg$parseRegularExpressionBody","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c46","peg$parseRegularExpressionFirstChar","peg$parseRegularExpressionChar","peg$c57","peg$c58","peg$parseRegularExpressionNonTerminator","peg$parseRegularExpressionBackslashSequence","peg$parseRegularExpressionClass","peg$c59","peg$c60","peg$c61","peg$c62","peg$parseLineTerminator","peg$parseSourceCharacter","peg$c63","peg$c64","peg$parseRegularExpressionClassChar","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c73","peg$c74","peg$c72","peg$result","options","arguments","peg$startRuleFunctions","Query","peg$startRuleFunction","head","tail","e","id","op","expr","operator","target","pattern","flags","RegExp","startRule","SyntaxError","actual","atomicName","match","some","atomicIs","is","atomicTag","atomicVers","vers","and","filtered","or","alreadyFiltered","notAddedItems","toAdd","kScript","storage","registryUrl","getUrl","changeKevoreeRegistry","URL","setUrl","canChangeKevoreeRegistry","undefined","clearKevScriptCache","prefix","TinyConf","localStorage","key","startsWith","canClearKevScriptCache","find","$state","isCollapsed","ui","KWE_POSITION","packages","pkgsMap","pkg","genPkgName","tdefs","descMeta","descValue","platforms","meta","getTypeDefinitionType","pkgPath","pkgName","tdefName","dragDraggable","animate","placeholder","onStart","onDrag","onStop","dragOptions","revert","helper","addClasses","scroll","appendTo","containment","cursor","cursorAt","top","right","hasPackages","setDropTarget","hasClass","container","getElementById","left","offsetLeft","offsetTop","dataset","innerHTML","typeDef","findBestVersion","mousePos","x","clientX","y","clientY","clearTimeout","timeout","hoveredNode","removeClass","setTimeout","getHoveredNode","nodeBg","addClass","isCompatible","bind","addInstance","preProcess","selectedNodes","getSelectedNodes","nodeElem","parseInt","addHosts","addModelUpdateListener","unregister2","typedefs@main","editor@main","instance@main","controllerAs","editor","onModelHandler","drawModel","synced","syncWS","cloner","createModelCloner","currentModel","clone","disconnectSync","parentScope","WebSocket","clipboard","copy","getSelectedPaths","paste","fixOverlapping","deletions","deleteSelected","newVal","addNewVal","addValues","addNetworkInformation","canSave","processTypeDefinition","vm","versions","selectedVersion","dus","deployUnits","dicAttrs","fragDicAttrs","processDictionary","dic","dicType","isFragment","fragmentDependant","processSelection","processing","css","preName","mainCollapsed","dicCollapsed","netCollapsed","descCollapsed","fragCollapsed","changeName","form","$valid","changeVersion","fragmentDictionary","fragDic","hasFragmentDictionary","hasNetworkInformation","manageNetwork","stopPropagation","addNetwork","createNetworkInfo","isReadOnly","isVirtual","groupModalHolder","selectedHost","selectedPort","selectedPath","modelHasErrors","hosts","127.0.0.1","ports","9000","paths","/","changeHost","changePort","changePath","subNodes","findFragmentDictionaryByID","closeModelHasErrorsWarning","closeSuccess","ws","pushModel","pull","startPort","endPort","orderByFilter","chan","isAlreadyBound","chanInstance","getRefInParent","uiUtils","KWE_FOLDED","moveInstance","axis","delta","posMeta","pt","init","dropDroppable","onDrop","dropOptions","accept","getDropTarget","getPointInEditor","m","f","element","draggable","transform","localMatrix","dropTarget","initFragmentDictionaries","foldMeta","TdefDetailController","$q","$onChanges","changes","currentValue","ctrl","disabled","onVersionChanged","addDusToModel","onAddDusToModel","baseUrl","bindings","$inject","updateTdefs","tdefDetail","tdefDetailVersions","activeNs","namespaces","ns","active","getTdefsByNamespace","getTdefVersions","getTdefDus","namespace","getLatestsByNamespace","getAllByNamespaceAndName","all","du","getReleases","getLatests","results","releases","transformDUS","latests","selectNs","nsClicked","selectTdef","tdefClicked","changeTdefVersion","currentDus","result","mergeDUSInModel","findPackagesByID","createPackage","withName","addPackages","addTypeDefinitions","addDeployUnits","KListController","isDefined","props","selectable","onSelect","DusModalController","DusInstallerController","addToModel","onAddToModel","saveToFile","event","kevscript","finally","openFromFile","ctxVars","lintWarnings","linting","typing","editorState","editorOptions","mode","theme","lineWrapping","lineNumbers","styleActiveLine","extraKeys","Shift-Enter","Ctrl-Space","cm","showHint","hint","CodeMirror","completeSingle","alignWithWord","Ctrl-S","Ctrl-O","gutters","lint","getAnnotations","async","editorLoaded","_editor","on","lintErrors","severity","signal","uploadKevscript","kevscriptUpload","reader","FileReader","onloadend","setValue","readAsBinaryString","files","trigger","closeMessage","isMergeable","clearCtxVars","addCtxVar","ctxVar","removeCtxVar","model2kevs","parseModel","possible","arrayUnique","$sce","trustAsHtml","TruncateController","expanded","isNumber","expandable","toggleText","reduce","modifiedContent","trustedHtml","toggle","template","ext","kevsAsBlob","Blob","downloadLink","createElement","download","navigator","userAgent","toLowerCase","href","createObjectURL","onclick","removeChild","style","display","appendChild","$parse","attrs","fn","onData","onload","onLoadEvt","$apply","$data","$name","readAsText","ignore","rInt","rStr","rIntMatch","exec","rIntVal","rStrMatch","rStrVal","KWE_SELECTED","genNewName","count","conflictInst","newName","walk","metaClassName","best","getPlatforms","platform","findFiltersByID","getNodeTreeHeight","heights","height","getNodeTreeHeights","getCompDepth","comp","depth","getNbInstances","getNbNodes","getNbGroups","getNbChannels","getNbComponents","getHighestNode","nodePlatforms","bound","hub","attributes","findAttributesByID","isValueValid","virtual","isChannelDistributed","binding","isAttributeInType","attrName","fqnToPath","fqn","pop","last","pkgFqnToPath","initClone","instancePosMeta","instancePos","that","cloneDictionary","subNode","clonedNode","createDictionary","withGenerated_KMF_ID","nodeName","hljs","highlightBlock","show","Boolean","DND_CLASS","dropHandler","dataTransfer","originalEvent","file","$event","overlay","hide","dragOverHandler","tid","dragLeaveHandler","off","_","c","$element","$attrs","loadEvent","fileread","$eval","onfileread","service","defaultVal","getItem","set","setItem","removeItem","len","cleanPath","answer","failed","onopen","send","onmessage","msg","onerror","onclose","sent","NODE_HEIGHT","NODE_WIDTH","COMP_HEIGHT","CHANNEL_RADIUS","GROUP_RADIUS","getNodeUIHeight","getCompUIHeight","provided","required","getHighestNodePath","getAbsoluteBBox","walkUp","parentBox","getBBox","bbox","isPointInsideElem","width","computeWireNodeAnchor","from","to","getHorizontalAlignment","getVerticalAlignment","alignment","computeBindingCoords","portElem","chanElem","chanM","compBox","portM","middle","updateSVGDefs","clipPath","defs","getElementsByTagName","createElementNS","grpCircle","setAttribute","chanCircle","nodeTreeHeights","nodeClip","nodeRect","compClip","compRect","uiCreateGroup","uiCreateGroupWire","uiCreateNode","uiCreateComponent","uiCreateBinding","uiCreateChannel","INVALID_RADIUS","overedInstancePath","draggedInstancePath","Snap","zpd","zoomThreshold","zoomScale","zpdEditor","mousedown","which","observer","MutationObserver","mutations","mutation","attributeName","matrix","observe","childList","characterData","dblclick","mina","ease","fill","textAnchor","createGroupWire","createNode","createComponent","createBinding","updateValidity","icon","circle","class","stroke","deleteInstance","highestNodePath","refreshNode","highestNode","redrawWire","redrawBindings","deleteGroupWire","groupPath","nodePath","deleteBinding","bindingPath","getSelected","readOnly","deleteChild","grp","removeGroups","removeSubNodes","removeUIElem","deleteNodes","deleteGroups","deleteChannels","deleteBindings","updateInstance","previousPath","data-path","relocate","compElem","fillOpacity","data-to","data-from","updatePosition","updateCompTypeDefinition","oldTypeDef","oldPortType","portType","findRequiredByID","portTypeRef","findProvidedByID","compUi","toggleFold","toggleChannel","uiChan","strokeDasharray","toggleBinding","uiBinding","togglePort","toggleComp","uiComp","toggleSubNodes","uiNode","treeHeight","computedWidth","clip-path","refreshComp","dy","asPX","PORT_X_PADDING","bg","getNodePathAtPoint","getEditorContainer","bannedPath","getHoveredChan","chans","isPointInsideBBox","getHoveredPort","hasErrors","order","plugin","Element","dragStart","insertBefore","nextSibling","handlers","handler","apply","local","dragMove","dx","dragStartX","dragStartY","changedTouches","firstDragMoveHandlers","dragEnd","args","removeData","drag","startPtDrag","endPtDrag","firstDragMove","cancelBubble","shiftKey","toggleClass","touchstart","constant","computedHeight","rect","strokeWidth","nameText","tdefText","removeHosts","redrawBinding","redrawChild","wire","updateWire","updateBindings","updateBindingCoords","computeData","grpElem","wireElem","grpMatrix","toBox","wireBg","toAnchor","d","getPointAtLength","cx","cy","strokeLineCap","strokeLineJoin","mouseover","mouseout","nodePlug","newTo","anchor","nTo","GROUP_PLUG_RADIUS","opacity","plug","r","plugPos","findSubNodesByID","grpM","nodeInstance","addSubNodes","output","hostHeight","providedDy","requiredDy","portPlug","portPos","portText","chanBg","createPort","addProvided","hoveredChan","createMBinding","addMBindings","hoveredPort","otherPortName","otherPortComp","otherPort","addRequired","binding2","data-name","removeComponents","mousemove","bindingElem","coords","path0","pt0","bindingBg","pt1","chanDx","chanDy","portDx","portDy","require","ngModel","$parsers","$formatters","parseFloat","KevoreeRegistryService","KEVOREE_REGISTRY_URL","protocol","hostname","cachedUrl","allNamespaces","when","KevoreeRegistryClient","getLatestTdefsByNamespace","transformTdef","getAllTdefsByNamespaceAndName","getDuReleases","transformDu","getDuLatests","inferType","getDescription","inferTypeFromJSON","getDescriptionFromJSON","desc","metaData","storedUrl","preSetModelHandler","postSetModelHandler","html","addPreSetModelHandler","addPostSetModelHandler","noop","logger","info","log","debug","setLevel","setTag","KevoreeKevscript","resolver","Resolvers","tagResolverFactory","modelResolverFactory","registryResolverFactory","KevoreeLibrary","DefaultKevoreeFactory","instanceType","$setValidity","createFragmentDictionary","addFragmentDictionary","modelReactor","trace","processRefreshRecursively","invokeModelUpdateListeners","elementAttributeName","etype","modeling","api","ActionType","object","REMOVE","source","previous_value","hasBinding","REMOVE_ALL","ADD","updateChildNode","childNode","SET","processPort","KevoreeEditor","createContainerRoot","root","modelUpdateListenersEnabled","modelUpdateListeners","newModelListeners","modelListener","elementChanged","KevoreeValidator","addModelTreeListener","invokeNewModelListeners","removeModelTreeListener","listener","strict","disableModelUpdateListeners","enableModelUpdateListeners","removeAllListeners","removeNewModelListeners","groupX","chanX","nodeX","mBindings","fragment","DusListController","defineMode","STATES","regex","token","stmt","instancePath","addStmt","next","setStmt","repoStmt","includeStmt","networkStmt","attachStmt","detachStmt","moveStmt","removeStmt","startStmt","stopStmt","pauseStmt","bindStmt","unbindStmt","typedef","matches","tdefversion","duversion","versionDecl","ctxvar","genctxvar","singlequote","doublequote","namelist","namelistInstancepath","instancepathInstancepath","instancepath","network","networkVal","lineComment","startState","stream","pending","pend","shift","rules","rule","onPop","backUp","copyState","findLine","lines","relativeToLine","tmp","tokens","registerHelper","updateLinting","warnings","nt","Pos","col","lintedModel","rootInstances","findRootInstance","getType","spaceHelper","doc","replaceSelection","HINT_TPL","querySelector","getCursor","getTokenAt","cur","string","list","ns0","ns1","localeCompare","typeText","bufferText","className","render","renderedTpl","Mustache","getAllByNamespace","tdef0","tdef1","item0","item1","rootInstance","$urlRouterProvider","hotkeysProvider","hljsServiceProvider","NotificationProvider","otherwise","abstract","navbar@","setOptions","tabReplace","startTop","replaceMessage","ttl","$templateCache","put"],"mappings":"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","file":"app/app-d8bd7c6291.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc overview\n * @name editorApp\n * @description\n * # editorApp\n *\n * Main module of the application.\n */\nangular\n\t.module('editorApp', [\n  'ngAnimate',\n  'ngTouch',\n  'ui.router',\n  'ui.bootstrap',\n  'ui.codemirror',\n  'ui-notification',\n  'cfp.hotkeys',\n  'ngDragDrop',\n  'hljs',\n  'infinite-scroll'\n])\n\t.run(function ($rootScope, $stateParams, kEditor, kFactory, kRegistry, kWs, Notification, VERSION) {\n  $rootScope.VERSION = VERSION;\n\n  $rootScope.dndLoad = function (filename, data) {\n    var oldModel = kEditor.getModel();\n    var loader = kFactory.createJSONLoader();\n    var model;\n    try {\n      model = loader.loadModelFromString(data).get(0);\n    } catch (err) {\n\t\t\t\tconsole.error('[app.dndLoad()] Error loading model file'); // eslint-disable-line\n\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n      Notification.error({\n        title: 'Open from file (dnd)',\n        message: 'Unable to load a model from <strong>' + filename + '</strong>'\n      });\n      kEditor.setModel(oldModel);\n      return;\n    }\n\n    kEditor.setModel(model, function (err) {\n      if (err) {\n        Notification.error({\n          title: 'Open from file (dnd)',\n          message: 'Unable to load model from <strong>' + filename + '</strong><br/>' + err.message,\n          delay: 15000\n        });\n      } else {\n        Notification.success({\n          title: 'Open from file (dnd)',\n          message: 'Model loaded from <strong>' + filename + '</strong>'\n        });\n      }\n    });\n  };\n\n  $rootScope.keys = function (obj) {\n    if (angular.isObject(obj)) {\n      return Object.keys(obj);\n    }\n    return false;\n  };\n\n\t\t// fade out the loading container when bootstrap is done\n  jQuery('#bootstrap-container').fadeOut(function () {\n    this.remove();\n    if ($stateParams.host) {\n      kWs.getModel($stateParams.host, $stateParams.port || 9000, $stateParams.path || '', function (err, model, url) {\n        if (err) {\n          Notification.error({\n            title: 'Open from node',\n            message: 'Unable to load model from <strong>' + url + '</strong>'\n          });\n        } else {\n          kEditor.setModel(model);\n          Notification.success({\n            title: 'Open from node',\n            message: 'Model loaded from <strong>' + url + '</strong>'\n          });\n        }\n      });\n    }\n  });\n});\n","'use strict';\n\nangular.module('editorApp')\n\t.config(function ($stateProvider) {\n  $stateProvider\n\t\t\t.state('treeview', {\n  parent: 'app',\n  url: '/treeview',\n  views: {\n    'content@': {\n      templateUrl: 'app/treeview/treeview.html',\n      controller: 'TreeViewCtrl'\n    }\n  },\n  onExit: function (kEditor) {\n    kEditor.removeModelUpdateListeners('treeview');\n  }\n});\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:TreeViewCtrl\n * @description\n * # TreeViewCtrl\n * Controller of the editorApp treeview page\n */\nangular.module('editorApp').controller('TreeViewCtrl', function($scope, $timeout, $filter, $uibModal, kEditor, kModelHelper, kFactory, kWs, kFilterParser, saveFile, hotkeys, Notification) {\n  function transformComponentToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      kevsName: instance.eContainer().name + '.' + instance.name,\n      type: 'component',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformNodeToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'node',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      folded: kModelHelper.isFolded(instance),\n      selected: kModelHelper.isSelected(instance),\n      children: instance.components.array.map(transformComponentToTreeItem)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformGroupToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'group',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformChannelToTreeItem(instance) {\n    $scope.nbInstances += 1;\n    var item = {\n      name: instance.name,\n      type: 'channel',\n      typeName: instance.typeDefinition.name,\n      version: instance.typeDefinition.version,\n      tags: kModelHelper.getTags(instance),\n      path: instance.path(),\n      selected: kModelHelper.isSelected(instance)\n    };\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    }\n    return item;\n  }\n\n  function transformModelToTree(model) {\n    return model.nodes.array.map(transformNodeToTreeItem).concat(model.groups.array.map(transformGroupToTreeItem)).concat(model.hubs.array.map(transformChannelToTreeItem));\n  }\n\n  function expandItemByPath(path) {\n    for (var i = 0; i < $scope.items.length; i++) {\n      if ($scope.items[i].path === path) {\n        if ($scope.items[i].folded) {\n          $scope.items[i].folded = false;\n          kModelHelper.setFolded(kEditor.getModel().findByPath($scope.items[i].path), false);\n        }\n        return;\n      }\n    }\n  }\n\n  function processModel() {\n    $scope.nbInstances = 0;\n    $scope.selectedItems = [];\n    $scope.items = transformModelToTree(kEditor.getModel());\n  }\n\n  $scope.items = [];\n  $scope.limit = 30;\n  $scope.nbInstances = 0;\n  $scope.showTags = true;\n  $scope.selectedItems = [];\n  $scope.filterExpr = '';\n  $scope.filterComparator = false;\n  $scope.treeReverse = false;\n  $scope.query = null;\n\n  var unregister = kEditor.addNewModelListener('treeview', processModel);\n  processModel();\n\n  var ctrlPressed = false;\n  function onKeyDown(evt) {\n    ctrlPressed = evt.ctrlKey;\n  }\n\n  function onKeyUp(evt) {\n    ctrlPressed = evt.ctrlKey;\n  }\n\n  document.addEventListener('keydown', onKeyDown);\n  document.addEventListener('keyup', onKeyUp);\n\n  $scope.loadMore = function() {\n    if ($scope.items.length > $scope.limit) {\n      $scope.limit += 10;\n    }\n  };\n\n  $scope.onClick = function(item) {\n    var selected = item.selected;\n    if (!ctrlPressed) {\n      if (selected && $scope.selectedItems.length > 1 && $scope.selectedItems.indexOf(item) !== -1) {\n        selected = !selected;\n      }\n      $scope.selectedItems.forEach(function(item) {\n        kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), false);\n        item.selected = false;\n      });\n      $scope.selectedItems.length = 0;\n    }\n    kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), !selected);\n    item.selected = !selected;\n    if (item.selected) {\n      $scope.selectedItems.push(item);\n    } else {\n      $scope.selectedItems.splice($scope.selectedItems.indexOf(item), 1);\n    }\n  };\n\n  $scope.onExpand = function(item) {\n    item.folded = !item.folded;\n    kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), item.folded);\n  };\n\n  $scope.collapse = function() {\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        item.folded = true;\n        kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), true);\n      }\n    });\n  };\n\n  $scope.expand = function() {\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        item.folded = false;\n        kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), false);\n      }\n    });\n  };\n\n  $scope.selectAll = function() {\n    $scope.selectedItems.length = 0;\n    $scope.items.forEach(function(item) {\n      item.selected = true;\n      var instance = kEditor.getModel().findByPath(item.path);\n      kModelHelper.setSelected(instance, true);\n      $scope.selectedItems.push(item);\n      if (item.children) {\n        item.children.forEach(function(child) {\n          child.selected = true;\n          item.folded = false;\n          kModelHelper.setFolded(instance, false);\n          kModelHelper.setSelected(kEditor.getModel().findByPath(child.path), true);\n          $scope.selectedItems.push(child);\n        });\n      }\n    });\n  };\n\n  function selectByType(type) {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    $scope.items.forEach(function(item) {\n      if (item.type === type) {\n        item.selected = true;\n        $scope.selectedItems.push(item);\n        kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), true);\n      }\n    });\n  }\n\n  $scope.selectNodes = function() {\n    selectByType('node');\n  };\n\n  $scope.selectGroups = function() {\n    selectByType('group');\n  };\n\n  $scope.selectChannels = function() {\n    selectByType('channel');\n  };\n\n  $scope.selectComponents = function() {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    $scope.items.forEach(function(item) {\n      if (item.type === 'node') {\n        if (item.children) {\n          item.children.forEach(function(child) {\n            item.folded = false;\n            child.selected = true;\n            kModelHelper.setFolded(kEditor.getModel().findByPath(item.path), false);\n            kModelHelper.setSelected(kEditor.getModel().findByPath(child.path), true);\n            $scope.selectedItems.push(child);\n          });\n        }\n      }\n    });\n  };\n\n  $scope.selectByTag = function(items) {\n    if (!ctrlPressed) {\n      $scope.clearSelected();\n    }\n\n    items.forEach(function(item) {\n      item.selected = true;\n      $scope.selectedItems.push(item);\n      var instance = kEditor.getModel().findByPath(item.path);\n      kModelHelper.setSelected(instance, true);\n      if (item.type === 'component') {\n        expandItemByPath(instance.eContainer().path());\n      }\n    });\n  };\n\n  $scope.clearSelected = function() {\n    $scope.selectedItems.forEach(function clear(item) {\n      item.selected = false;\n      kModelHelper.setSelected(kEditor.getModel().findByPath(item.path), false);\n      if (item.children) {\n        item.children.forEach(clear);\n      }\n    });\n    $scope.selectedItems.length = 0;\n  };\n\n  $scope.toggleTags = function() {\n    $scope.showTags = !$scope.showTags;\n  };\n\n  $scope.reverseSort = function() {\n    $scope.treeReverse = !$scope.treeReverse;\n  };\n\n  $scope.createItem = function(type, instance, parentNode) {\n    switch (type) {\n      case 'node':\n        $scope.items.push(transformNodeToTreeItem(instance));\n        break;\n\n      case 'group':\n        $scope.items.push(transformGroupToTreeItem(instance));\n        break;\n\n      case 'channel':\n        $scope.items.push(transformChannelToTreeItem(instance));\n        break;\n\n      case 'component':\n        for (var i = 0; i < $scope.items.length; i++) {\n          if ($scope.items[i].path === parentNode.path()) {\n            $scope.items[i].children.push(transformComponentToTreeItem(instance));\n            break;\n          }\n        }\n        break;\n    }\n  };\n\n  $scope.clearFilter = function() {\n    $scope.query = null;\n    $scope.filterExpr = '';\n    $scope.filterError = null;\n  };\n\n  var filterTimeout;\n  $scope.onFilterExprChanged = function() {\n    $timeout.cancel(filterTimeout);\n    filterTimeout = $timeout(function() {\n      $scope.parseFilterExpr();\n    }, 300);\n  };\n\n  $scope.parseFilterExpr = function() {\n    if ($scope.filterExpr.length === 0) {\n      $scope.query = null;\n      $scope.filterError = null;\n    } else {\n      try {\n        $scope.query = kFilterParser.parse($scope.filterExpr);\n        $scope.filterError = null;\n      } catch (err) {\n        $scope.query = null;\n        $scope.filterError = err.name + ': \"' + err.found + '\" at col.' + err.location.start.column;\n      }\n    }\n  };\n\n  $scope.open = function(evt) {\n    evt.preventDefault();\n\n    $scope.onFileLoaded = function(filename, data) {\n      $timeout(function() {\n        $scope.loading = true;\n        $timeout(function() {\n          var oldModel = kEditor.getModel();\n          try {\n            var loader = kFactory.createJSONLoader();\n            var model = loader.loadModelFromString(data).get(0);\n            kEditor.setModel(model);\n            Notification.success({\n              title: 'Open from file',\n              message: 'Model loaded from <strong>' + filename + '</strong>'\n            });\n          } catch (err) {\n\t\t\t\t\t\tconsole.warn('[treeview.controller.open()] Error loading model file'); // eslint-disable-line\n\t\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n            Notification.error({\n              title: 'Open from file',\n              message: 'Unable to load a model from <strong>' + filename + '</strong>'\n            });\n            kEditor.setModel(oldModel);\n          } finally {\n            $scope.loading = false;\n          }\n        });\n      });\n    };\n    jQuery('input#file').click();\n  };\n\n  $scope.merge = function(evt) {\n    evt.preventDefault();\n    $scope.onFileLoaded = function mergeModel(filename, data) {\n      $timeout(function() {\n        $scope.loading = true;\n        $timeout(function() {\n          try {\n            var loader = kFactory.createJSONLoader();\n            var compare = kFactory.createModelCompare();\n            var model = loader.loadModelFromString(data).get(0);\n            compare.merge(model, kEditor.getModel()).applyOn(model);\n            kEditor.setModel(model);\n            Notification.success({\n              title: 'Merge from file',\n              message: 'Model merged with <strong>' + filename + '</strong>'\n            });\n          } catch (err) {\n\t\t\t\t\t\tconsole.warn('[treeview.controller.merge()] Error loading model file'); // eslint-disable-line\n\t\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n            Notification.error({\n              title: 'Merge from file',\n              message: 'Unable to merge the model with <strong>' + filename + '</strong>'\n            });\n          } finally {\n            $scope.loading = false;\n          }\n        });\n      });\n    };\n    jQuery('input#file').click();\n  };\n\n  $scope.openFromNode = function(evt) {\n    evt.preventDefault();\n\n    $uibModal.open({\n      templateUrl: 'app/components/util/host-port-path.modal.html',\n      size: 'md',\n      controller: function($scope, $uibModalInstance) {\n        $scope.title = 'Open from node';\n        $scope.action = 'Open';\n        $scope.host = '127.0.0.1';\n        $scope.port = 9000;\n        $scope.path = '/';\n\n        $uibModalInstance.rendered.then(function() {\n          $timeout(function() {\n            jQuery('#host').focus();\n          }, 250);\n        });\n\n        $scope.confirm = function() {\n          $scope.closeError();\n\n          kWs.getModel($scope.host, $scope.port, $scope.path, function(err, model, url) {\n            if (err) {\n              $timeout(function() {\n                $scope.error = err.message;\n              });\n            } else {\n              kEditor.setModel(model);\n              Notification.success({\n                title: $scope.title,\n                message: 'Model loaded from <strong>' + url + '</strong>'\n              });\n              $uibModalInstance.close();\n            }\n          });\n        };\n\n        $scope.closeError = function() {\n          $scope.error = null;\n        };\n      }\n    });\n  };\n\n  $scope.mergeFromNode = function(evt) {\n    evt.preventDefault();\n\n    $uibModal.open({\n      templateUrl: 'app/components/util/host-port-path.modal.html',\n      size: 'md',\n      controller: function($scope, $uibModalInstance, kWs) {\n        $scope.title = 'Merge from node';\n        $scope.action = 'Merge';\n        $scope.host = '127.0.0.1';\n        $scope.port = 9000;\n        $scope.path = '/';\n\n        $uibModalInstance.rendered.then(function() {\n          $timeout(function() {\n            jQuery('#host').focus();\n          }, 250);\n        });\n\n        $scope.confirm = function() {\n          $scope.closeError();\n\n          kWs.getModel($scope.host, $scope.port, $scope.path, function(err, model, url) {\n            if (err) {\n              $timeout(function() {\n                $scope.error = err.message;\n              });\n            } else {\n              var compare = kFactory.createModelCompare();\n              compare.merge(model, kEditor.getModel()).applyOn(model);\n              kEditor.setModel(model);\n              Notification.success({\n                title: $scope.title,\n                message: 'Model merged with <strong>' + url + '</strong>'\n              });\n              $uibModalInstance.close();\n            }\n          });\n        };\n\n        $scope.closeError = function() {\n          $scope.error = null;\n        };\n      }\n    });\n  };\n\n  $scope.save = function(evt, filename) {\n    evt.preventDefault();\n    var serializer = kFactory.createJSONSerializer();\n\n    try {\n\t\t\t// serialize model\n      var modelStr = serializer.serialize(kEditor.getModel());\n\t\t\t// prettify model\n      modelStr = JSON.stringify(JSON.parse(modelStr), null, 4);\n\t\t\t// download model on client\n      saveFile.save(modelStr, filename, '.json', 'application/json');\n    } catch (err) {\n      Notification.error({title: 'Save', message: 'Unable to serialize model to JSON'});\n    }\n  };\n\n  $scope.deleteAll = function(evt) {\n    evt.preventDefault();\n    $scope.deleteInstances(evt);\n    kEditor.getModel().removeAllPackages();\n  };\n\n  $scope.deleteInstances = function(evt) {\n    evt.preventDefault();\n    var model = kEditor.getModel();\n    model.removeAllNodes();\n    model.removeAllGroups();\n    model.removeAllHubs();\n    model.removeAllMBindings();\n    model.removeAllRepositories();\n    processModel();\n  };\n\n  $scope.deleteSelection = function(evt) {\n    evt.preventDefault();\n    var selection = kModelHelper.getSelection(kEditor.getModel());\n    if (selection.length === 0) {\n      Notification.warning({title: 'Delete selection', message: 'Nothing selected'});\n    } else {\n      selection.forEach(function(instance) {\n        instance.delete();\n      });\n      processModel();\n    }\n  };\n\n  $scope.toggleShortcutHelp = function() {\n    hotkeys.toggleCheatSheet();\n  };\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+o', description: 'Open a model from a file', callback: $scope.open});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+m', description: 'Merge a model from a file with current model in editor', callback: $scope.merge});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+o', description: 'Open a model from a node', callback: $scope.openFromNode});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+m', description: 'Merge a model from a node with current model in editor', callback: $scope.mergeFromNode});\n\n  hotkeys.bindTo($scope).add({combo: 'ctrl+shift+g', description: 'Connect to a Web Socket server and stay synced with it', callback: $scope.connectSync});\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+s',\n    description: 'Save the current model into a JSON file',\n    callback: function(evt) {\n      evt.preventDefault();\n      var saveFile = $scope.save;\n      $uibModal.open({\n        templateUrl: 'app/components/util/filename.modal.html',\n        size: 'sm',\n        controller: function($scope, $uibModalInstance) {\n          $scope.title = 'Save model';\n          $scope.body = 'Would you like to save your current model to a file?';\n          $scope.filename = 'model' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n          $uibModalInstance.rendered.then(function() {\n            $timeout(function() {\n              jQuery('#filename').focus();\n            }, 250);\n          });\n\n          $scope.save = function() {\n            function endsWith(str, suffix) {\n              return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n            var suffix = '.json';\n            if (endsWith($scope.filename, suffix)) {\n              $scope.filename = $scope.filename.substr(0, $scope.filename.length - suffix.length);\n            }\n            saveFile(evt, $scope.filename);\n            $uibModalInstance.close();\n          };\n        }\n      });\n    }\n  });\n\n  hotkeys.bindTo($scope).add({combo: 'alt+shift+d', description: 'Delete everything in the current model', callback: $scope.deleteAll});\n\n  hotkeys.bindTo($scope).add({combo: 'alt+shift+i', description: 'Delete instances in the current model', callback: $scope.deleteInstances});\n\n  hotkeys.bindTo($scope).add({combo: 'del', description: 'Delete selected instances in the current model', callback: $scope.deleteSelection});\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+a',\n    description: 'Select all instances',\n    callback: function(evt) {\n      evt.preventDefault();\n      $scope.selectAll();\n    }\n  });\n\n  $scope.$on('$destroy', function() {\n    unregister();\n    document.removeEventListener('keydown', onKeyDown);\n    document.removeEventListener('keyup', onKeyUp);\n    $timeout.cancel(filterTimeout);\n  });\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('tabTags', function () {\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: 'app/treeview/tab-tags/tab-tags.html',\n      controller: function ($scope, kEditor, kFactory, kModelHelper, KWE_TAG) {\n        $scope.tag = '';\n        $scope.tags = [];\n\n        function processTags() {\n          $scope.tags = [];\n\n          $scope.selectedItems.forEach(function (item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            kModelHelper.getTags(instance).forEach(function (tag) {\n              if ($scope.tags.indexOf(tag) === -1) {\n                $scope.tags.push(tag);\n              }\n            });\n          });\n        }\n\n        /**\n         * This does not mutate the given str\n         */\n        function removeTagFromStr(tag, str) {\n          var tags = str.split(',');\n          var i = tags.indexOf(tag);\n          if (i !== -1) {\n            tags.splice(i, 1);\n          }\n          return tags;\n        }\n\n        processTags();\n        var unwatchItems = $scope.$watchCollection('selectedItems', processTags);\n        $scope.$on('$destroy', unwatchItems);\n\n        $scope.addTag = function () {\n          if ($scope.tag.trim().length > 0 && $scope.tag.indexOf(',') === -1) {\n            $scope.tag = $scope.tag.trim();\n            $scope.selectedItems.forEach(function (item) {\n              var instance = kEditor.getModel().findByPath(item.path);\n              var tagMeta = instance.findMetaDataByID(KWE_TAG);\n              if (!tagMeta) {\n                tagMeta = kFactory.createValue();\n                tagMeta.name = KWE_TAG;\n                tagMeta.value = '';\n                instance.addMetaData(tagMeta);\n              }\n              var tags = kModelHelper.getTags(instance);\n              if (tags.indexOf($scope.tag) === -1) {\n                // add tag to instance in model\n                tags.push($scope.tag);\n                // add tag in view\n                item.tags.push($scope.tag);\n              }\n              if ($scope.tags.indexOf($scope.tag) === -1) {\n                // add tag in tag list in view\n                $scope.tags.push($scope.tag);\n              }\n              tagMeta.value = tags.join(',');\n            });\n            $scope.tag = '';\n          }\n        };\n\n        $scope.validate = function () {\n          if ($scope.tag.indexOf(',') !== -1) {\n            $scope.error = 'Character \",\" is not allowed in a tag';\n          } else {\n            $scope.error = null;\n          }\n        };\n\n        $scope.removeTag = function (tag) {\n          $scope.tags.splice($scope.tags.indexOf(tag), 1);\n          $scope.selectedItems.forEach(function (item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            var tagMeta = instance.findMetaDataByID(KWE_TAG);\n            if (tagMeta) {\n              var newTags = removeTagFromStr(tag, tagMeta.value);\n              tagMeta.value = newTags.join(',');\n              item.tags = newTags;\n            }\n          });\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp').directive('tabParams', function($timeout, kEditor, kModelHelper, kInstance, util) {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'app/treeview/tab-params/tab-params.html',\n    link: function($scope) {\n      function convertType(type) {\n        switch (type) {\n          case 'LONG':\n          case 'DOUBLE':\n          case 'FLOAT':\n          case 'SHORT':\n          case 'INT':\n            return 'number';\n\n          case 'BOOLEAN':\n            return 'boolean';\n\n          default:\n            return 'text';\n        }\n      }\n\n      function process() {\n        $scope.message = null;\n        $scope.error = false;\n        $scope.length = {};\n        $scope.prepend = {};\n        $scope.append = {};\n        $scope.min = {};\n        $scope.max = {};\n        $scope.each = {};\n        $scope.toggleEachFlag = false;\n        $scope.state = {\n          started: null\n        };\n        $scope.nets = [];\n\n        var model = kEditor.getModel();\n        if ($scope.selectedItems.length > 1) {\n          var first = model.findByPath($scope.selectedItems[0].path);\n          $scope.types = [first.name + ': ' + kModelHelper.getFqn(first.typeDefinition)];\n          for (var i = 1; i < $scope.selectedItems.length; i++) {\n            var prev = model.findByPath($scope.selectedItems[i - 1].path),\n              curr = model.findByPath($scope.selectedItems[i].path);\n            if (kModelHelper.getFqn(prev.typeDefinition) !== kModelHelper.getFqn(curr.typeDefinition)) {\n              $scope.types.push(curr.name + ': ' + kModelHelper.getFqn(curr.typeDefinition));\n              $scope.error = true;\n              return;\n            }\n          }\n        }\n\n        $scope.selectedItems.forEach(function(item) {\n          var instance = kEditor.getModel().findByPath(item.path);\n          kInstance.initDictionaries(instance);\n        });\n\n        $scope.util = util;\n        $scope.instance = model.findByPath($scope.selectedItems[0].path);\n        if ($scope.selectedItems.length === 1) {\n          $scope.state.started = $scope.instance.started;\n        } else {\n          $scope.state.started = null;\n        }\n        $scope.type = $scope.instance.typeDefinition;\n        $scope.typeName = kModelHelper.getFqn($scope.type);\n        $scope.dictionary = [];\n        if ($scope.type.dictionaryType) {\n          $scope.dictionary = $scope.type.dictionaryType.select('attributes[fragmentDependant=false]').array.map(function(attr) {\n            var type = convertType(attr.datatype.name());\n            var value;\n            if ($scope.selectedItems.length === 1 && $scope.instance.dictionary) {\n              var val = $scope.instance.dictionary.findValuesByID(attr.name);\n              if (val) {\n                switch (type) {\n                  case 'number':\n                    value = +val.value;\n                    break;\n                  default:\n                    value = val.value;\n                    break;\n                }\n              }\n            }\n            var newAttr = {\n              name: attr.name,\n              optional: kModelHelper.isTruish(attr.optional),\n              defaultValue: attr.defaultValue,\n              type: type,\n              value: value\n            };\n            return newAttr;\n          });\n        }\n\n        if ($scope.instance.networkInformation) {\n          $scope.instance.networkInformation.array.forEach(function(net) {\n            $scope.nets.push({\n              name: net.name,\n              values: net.values.array.map(function(val) {\n                return {name: val.name, value: val.value};\n              })\n            });\n          });\n        }\n      }\n\n      process();\n      var unwatchItems = $scope.$watchCollection('selectedItems', process);\n      $scope.$on('$destroy', unwatchItems);\n\n      $scope.applyToAllInstances = function() {\n        try {\n          $scope.selectedItems.forEach(function(item) {\n            var instance = kEditor.getModel().findByPath(item.path);\n            instance.started = $scope.state.started;\n            $scope.dictionary.forEach(function(attr) {\n              var val = instance.dictionary.findValuesByID(attr.name);\n              if ($scope.each[attr.name]) {\n                $scope.random(attr);\n              }\n              val.value = attr.value;\n            });\n          });\n          $scope.dictionary.forEach(function(attr) {\n            attr.value = null;\n          });\n          process();\n          $scope.message = {\n            type: 'success',\n            content: 'Success'\n          };\n        } catch (err) {\n          $scope.message = {\n            type: 'danger',\n            content: 'Error (check console for more information)'\n          };\n\t\t\t\t\tconsole.error('[treeview.tab-params.applyToAllInstances()] Error'); // eslint-disable-line\n\t\t\t\t\tconsole.error(err.stack); // eslint-disable-line\n        }\n\n        $timeout(function() {\n          $scope.message = null;\n        }, 1500);\n      };\n\n      $scope.random = function(attr) {\n        switch (attr.type) {\n          case 'text':\n            attr.value = $scope.prepend[attr.name] + util.randomString($scope.length[attr.name]) + $scope.append[attr.name];\n            break;\n\n          case 'number':\n            attr.value = util.randomNumber($scope.min[attr.name], $scope.max[attr.name]);\n            break;\n\n          case 'boolean':\n            attr.value = util.randomBoolean() + '';\n            break;\n        }\n      };\n\n      $scope.allRandom = function() {\n        $scope.dictionary.forEach($scope.random);\n      };\n\n      $scope.toggleEach = function() {\n        $scope.toggleEachFlag = !$scope.toggleEachFlag;\n        Object.keys($scope.each).forEach(function(name) {\n          $scope.each[name] = $scope.toggleEachFlag;\n        });\n      };\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('tabJson', function ($timeout, kFactory, kEditor) {\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: 'app/treeview/tab-json/tab-json.html',\n      link: function ($scope) {\n        var pathId;\n        var serializer = kFactory.createJSONSerializer();\n\n        $scope.path = '';\n        $scope.elems = [];\n        $scope.collapsed = {};\n\n        function process() {\n          var elems = kEditor.getModel().select($scope.path);\n          if (elems) {\n            $scope.elems = elems.array.map(function (elem) {\n              if (!$scope.collapsed.hasOwnProperty(elem.path())) {\n                $scope.collapsed[elem.path()] = true;\n              }\n              return {\n                path: elem.path(),\n                content: JSON.stringify(JSON.parse(serializer.serialize(elem)), null, 2)\n              };\n            });\n          } else {\n            $scope.elems.length = 0;\n          }\n        }\n\n        $scope.onPathChanged = function () {\n          $timeout.cancel(pathId);\n          pathId = $timeout(function () {\n            process();\n          }, 500);\n        };\n        process();\n\n        $scope.setPath = function (path) {\n          $scope.path = path;\n          process();\n        };\n\n        var unregister = kEditor.addNewModelListener('treeview', process);\n        $scope.$on('$destroy', function () {\n          unregister();\n          $timeout.cancel(pathId);\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('tabCreate', function ($timeout, $filter, kFactory, kEditor, kInstance, kModelHelper, util, KWE_TAG) {\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: 'app/treeview/tab-create/tab-create.html',\n      link: function ($scope) {\n        $scope.$on('$destroy', $scope.$watchCollection('selectedItems', function () {\n          $scope.verifyName();\n        }));\n\n        $scope.namePattern = '{metatype}{index}';\n        $scope.state = {\n          started: true\n        };\n        $scope.tags = '';\n\n        function createTdefItem(tdef) {\n          return { name: kModelHelper.getFqn(tdef), tdef: tdef };\n        }\n\n        $scope.verifyName = function () {\n          var i, name;\n          switch ($scope.selectedType) {\n            case 'node':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findNodesByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a node named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'group':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findGroupsByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a group named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'channel':\n              for (i = 0; i < $scope.instancesCount; i++) {\n                name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                if (kEditor.getModel().findHubsByID(name)) {\n                  $scope.message = {\n                    type: 'danger',\n                    content: 'There is already a channel named \"' + name + '\"'\n                  };\n                  return;\n                }\n              }\n              break;\n\n            case 'component':\n              if ($scope.selectedItems.length === 0) {\n                $scope.message = {\n                  type: 'danger',\n                  content: 'You must select node instances in the tree view in order to add components'\n                };\n                return;\n              } else {\n                for (i = 0; i < $scope.instancesCount; i++) {\n                  name = $filter('namingPattern')($scope.namePattern, { index: i, metatype: $scope.selectedType });\n                  for (var j = 0; j < $scope.selectedItems.length; j++) {\n                    var node = kEditor.getModel().findNodesByID($scope.selectedItems[j].name);\n                    if (node) {\n                      if (node.findComponentsByID(name)) {\n                        $scope.message = {\n                          type: 'danger',\n                          content: 'There is already a component named \"' + name + '\" in node \"' + node.name + '\"'\n                        };\n                        return;\n                      }\n                    } else {\n                      $scope.message = {\n                        type: 'danger',\n                        content: '\"' + $scope.selectedItems[j].name + '\" is not a node instance'\n                      };\n                      return;\n                    }\n                  }\n                }\n              }\n              break;\n          }\n\n          $scope.message = null;\n        };\n\n        function process() {\n          var model = kEditor.getModel();\n          $scope.tags = '';\n          $scope.name = '';\n          $scope.types = ['node', 'group', 'channel', 'component'];\n          $scope.instanceTypes = {\n            node: kModelHelper.getNodeTypes(model).map(createTdefItem),\n            group: kModelHelper.getGroupTypes(model).map(createTdefItem),\n            channel: kModelHelper.getChannelTypes(model).map(createTdefItem),\n            component: kModelHelper.getComponentTypes(model).map(createTdefItem)\n          };\n          $scope.selectedType = $scope.types[0];\n          if ($scope.instanceTypes[$scope.selectedType].length > 0) {\n            $scope.selectedInstanceType = $scope.instanceTypes[$scope.selectedType][0];\n          }\n          $scope.availableNodes = $scope.items.filter(function (item) {\n            return item.type === 'node';\n          });\n          $scope.selectedNode = $scope.availableNodes[0];\n          $scope.instancesCount = 1;\n          $scope.verifyName();\n        }\n\n        process();\n        var unregister = kEditor.addNewModelListener('treeview', process);\n        var unwatchItems = $scope.$watchCollection('items', process);\n        $scope.$on('$destroy', function () {\n          unregister();\n          unwatchItems();\n        });\n\n        function createInstances() {\n          var instances = [];\n          for (var i = 0; i < $scope.instancesCount; i++) {\n            var name = $filter('namingPattern')($scope.namePattern, {\n              index: i,\n              metatype: $scope.selectedType\n            });\n            var instance;\n            switch ($scope.selectedType) {\n              case 'node':\n                instance = kFactory.createContainerNode();\n                break;\n              case 'group':\n                instance = kFactory.createGroup();\n                break;\n              case 'channel':\n                instance = kFactory.createChannel();\n                break;\n              case 'component':\n                instance = kFactory.createComponentInstance();\n                break;\n            }\n            instance.name = name;\n            instance.typeDefinition = $scope.selectedInstanceType.tdef;\n            instance.started = $scope.state.started;\n            kInstance.initDictionaries(instance);\n            var tags = $scope.tags.split(',')\n              .map(function (tag) { return tag.trim(); })\n              .filter(function (tag) { return tag.length > 0; })\n              .join(',');\n            var tagsMeta = kFactory.createValue();\n            tagsMeta.name = KWE_TAG;\n            tagsMeta.value = tags;\n            instance.addMetaData(tagsMeta);\n            instances.push(instance);\n          }\n          return instances;\n        }\n\n        $scope.create = function () {\n          var model = kEditor.getModel();\n          switch ($scope.selectedType) {\n            case 'node':\n              createInstances().forEach(function (instance) {\n                model.addNodes(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'group':\n              createInstances().forEach(function (instance) {\n                model.addGroups(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'channel':\n              createInstances().forEach(function (instance) {\n                model.addHubs(instance);\n                $scope.createItem($scope.selectedType, instance);\n              });\n              break;\n            case 'component':\n              $scope.selectedItems.forEach(function (item) {\n                // create component instances for the node\n                var node = model.findNodesByID(item.name);\n                createInstances().forEach(function (instance) {\n                  node.addComponents(instance);\n                  $scope.createItem($scope.selectedType, instance, node);\n                });\n              });\n              break;\n          }\n        };\n\n        $scope.onTypeChange = function () {\n          $scope.verifyName();\n        };\n\n        $scope.areInstanceTypesValid = function () {\n          if ($scope.selectedType === 'component') {\n            if ($scope.availableNodes.length > 0) {\n              return $scope.instanceTypes[$scope.selectedType].length > 0;\n            } else {\n              return false;\n            }\n          } else {\n            return $scope.instanceTypes[$scope.selectedType].length > 0;\n          }\n        };\n\n        $scope.isValid = function () {\n          if ($scope.selectedType === 'component') {\n            if (!$scope.selectedNode) {\n              return false;\n            }\n          }\n          return !$scope.message &&\n            $scope.namePattern.trim().length > 0 &&\n            $scope.selectedType.length > 0 &&\n            $scope.instancesCount > 0 &&\n            $scope.selectedInstanceType;\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n\t.directive('tabActions', function ($filter, $uibModal, kEditor) {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'app/treeview/tab-actions/tab-actions.html',\n    link: function ($scope) {\n      function processData() {\n        var model = kEditor.getModel();\n        $scope.groups = model.groups.array;\n        $scope.selectedGroup = $filter('orderBy')($scope.groups, 'name')[0];\n      }\n\n      function processTags() {\n        $scope.tags = {};\n        $scope.items.forEach(function processTag(item) {\n          item.tags.forEach(function (tag) {\n            if (!$scope.tags[tag]) {\n              $scope.tags[tag] = [];\n            }\n            $scope.tags[tag].push(item);\n          });\n          if (item.children) {\n            item.children.forEach(processTag);\n          }\n        });\n        $scope.tagsCount = Object.keys($scope.tags).length;\n      }\n\n      function modelHandler() {\n        processData();\n        processTags();\n      }\n\n      modelHandler();\n      var unwatchItems = $scope.$watchCollection('items', modelHandler);\n      var unwatchTags = $scope.$watch('items', function () {\n        processTags();\n      }, true);\n      $scope.$on('$destroy', function () {\n        unwatchItems();\n        unwatchTags();\n      });\n\n      $scope.openGroupModal = function () {\n        $uibModal.open({\n          templateUrl: 'app/main/instance/group.modal.html',\n          size: 'md',\n          resolve: {\n            group: function () {\n              return $scope.selectedGroup;\n            }\n          },\n          controller: 'GroupModalCtrl'\n        });\n      };\n    }\n  };\n});\n","'use strict';\n/* jshint ignore:start */\nangular.module('editorApp').factory('kFilterParser', function() {\n\t/*\n     * Generated by PEG.js 0.9.0.\n     *\n     * http://pegjs.org/\n     */\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1\n\t\t\t\t? arguments[1]\n\t\t\t\t: {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = {\n        Query: peg$parseQuery\n      },\n      peg$startRuleFunction = peg$parseQuery,\n\n      peg$c0 = \"|\",\n      peg$c1 = {\n        type: \"literal\",\n        value: \"|\",\n        description: \"\\\"|\\\"\"\n      },\n      peg$c2 = function(head, tail) {\n        if (tail.length > 0) {\n          return {\n            type: 'or',\n            content: [head].concat(tail.map(function(e, i) {\n              return tail[i][3];\n            }))\n          };\n        }\n        return head;\n      },\n      peg$c3 = \"&\",\n      peg$c4 = {\n        type: \"literal\",\n        value: \"&\",\n        description: \"\\\"&\\\"\"\n      },\n      peg$c5 = function(head, tail) {\n        if (tail.length > 0) {\n          return {\n            type: 'and',\n            content: [head].concat(tail.map(function(e, i) {\n              return tail[i][3];\n            }))\n          };\n        }\n        return head;\n      },\n      peg$c6 = \"(\",\n      peg$c7 = {\n        type: \"literal\",\n        value: \"(\",\n        description: \"\\\"(\\\"\"\n      },\n      peg$c8 = \")\",\n      peg$c9 = {\n        type: \"literal\",\n        value: \")\",\n        description: \"\\\")\\\"\"\n      },\n      peg$c10 = function(query) {\n        return query;\n      },\n      peg$c11 = {\n        type: \"other\",\n        description: \"name:\"\n      },\n      peg$c12 = \"name:\",\n      peg$c13 = {\n        type: \"literal\",\n        value: \"name:\",\n        description: \"\\\"name:\\\"\"\n      },\n      peg$c14 = function(id) {\n        return {type: 'name', content: id};\n      },\n      peg$c15 = {\n        type: \"other\",\n        description: \"is:\"\n      },\n      peg$c16 = \"is:\",\n      peg$c17 = {\n        type: \"literal\",\n        value: \"is:\",\n        description: \"\\\"is:\\\"\"\n      },\n      peg$c18 = function(id) {\n        return {type: 'is', content: id};\n      },\n      peg$c19 = {\n        type: \"other\",\n        description: \"vers:\"\n      },\n      peg$c20 = \"vers:\",\n      peg$c21 = {\n        type: \"literal\",\n        value: \"vers:\",\n        description: \"\\\"vers:\\\"\"\n      },\n      peg$c22 = \">\",\n      peg$c23 = {\n        type: \"literal\",\n        value: \">\",\n        description: \"\\\">\\\"\"\n      },\n      peg$c24 = \"<\",\n      peg$c25 = {\n        type: \"literal\",\n        value: \"<\",\n        description: \"\\\"<\\\"\"\n      },\n      peg$c26 = \">=\",\n      peg$c27 = {\n        type: \"literal\",\n        value: \">=\",\n        description: \"\\\">=\\\"\"\n      },\n      peg$c28 = \"<=\",\n      peg$c29 = {\n        type: \"literal\",\n        value: \"<=\",\n        description: \"\\\"<=\\\"\"\n      },\n      peg$c30 = function(op, id) {\n        var expr = {\n          type: 'vers',\n          content: id\n        };\n        if (op === '>') {\n          expr.operator = 'gt';\n        }\n        if (op === '<') {\n          expr.operator = 'lt';\n        }\n        if (op === '>=') {\n          expr.operator = 'ge';\n        }\n        if (op === '<=') {\n          expr.operator = 'le';\n        }\n        return expr;\n      },\n      peg$c31 = {\n        type: \"other\",\n        description: \"tag:\"\n      },\n      peg$c32 = \"tag:\",\n      peg$c33 = {\n        type: \"literal\",\n        value: \"tag:\",\n        description: \"\\\"tag:\\\"\"\n      },\n      peg$c34 = function(id) {\n        return {type: 'tag', content: id};\n      },\n      peg$c35 = {\n        type: \"other\",\n        description: \"bound:\"\n      },\n      peg$c36 = \"bound:\",\n      peg$c37 = {\n        type: \"literal\",\n        value: \"bound:\",\n        description: \"\\\"bound:\\\"\"\n      },\n      peg$c38 = \":\",\n      peg$c39 = {\n        type: \"literal\",\n        value: \":\",\n        description: \"\\\":\\\"\"\n      },\n      peg$c40 = function(target, id) {\n        return {type: 'bound', target: target, content: id};\n      },\n      peg$c41 = {\n        type: \"other\",\n        description: \"identifier or regex\"\n      },\n      peg$c42 = {\n        type: \"other\",\n        description: \"identifier\"\n      },\n      peg$c43 = /^[a-zA-Z0-9.]/,\n      peg$c44 = {\n        type: \"class\",\n        value: \"[a-zA-Z0-9\\\\.]\",\n        description: \"[a-zA-Z0-9\\\\.]\"\n      },\n      peg$c45 = function() {\n        return text();\n      },\n      peg$c46 = {\n        type: \"other\",\n        description: \"regular expression\"\n      },\n      peg$c47 = \"/\",\n      peg$c48 = {\n        type: \"literal\",\n        value: \"/\",\n        description: \"\\\"/\\\"\"\n      },\n      peg$c49 = \"g\",\n      peg$c50 = {\n        type: \"literal\",\n        value: \"g\",\n        description: \"\\\"g\\\"\"\n      },\n      peg$c51 = \"m\",\n      peg$c52 = {\n        type: \"literal\",\n        value: \"m\",\n        description: \"\\\"m\\\"\"\n      },\n      peg$c53 = \"i\",\n      peg$c54 = {\n        type: \"literal\",\n        value: \"i\",\n        description: \"\\\"i\\\"\"\n      },\n      peg$c55 = \"\",\n      peg$c56 = function(pattern, flags) {\n        var value;\n\n        try {\n          value = new RegExp(pattern, flags);\n        } catch (e) {\n          error(e.message);\n        }\n\n        return {type: \"regex\", content: value};\n      },\n      peg$c57 = /^[*\\\\\\/[]/,\n      peg$c58 = {\n        type: \"class\",\n        value: \"[*\\\\\\\\/[]\",\n        description: \"[*\\\\\\\\/[]\"\n      },\n      peg$c59 = /^[\\\\\\/[]/,\n      peg$c60 = {\n        type: \"class\",\n        value: \"[\\\\\\\\/[]\",\n        description: \"[\\\\\\\\/[]\"\n      },\n      peg$c61 = \"\\\\\",\n      peg$c62 = {\n        type: \"literal\",\n        value: \"\\\\\",\n        description: \"\\\"\\\\\\\\\\\"\"\n      },\n      peg$c63 = \"[\",\n      peg$c64 = {\n        type: \"literal\",\n        value: \"[\",\n        description: \"\\\"[\\\"\"\n      },\n      peg$c65 = \"]\",\n      peg$c66 = {\n        type: \"literal\",\n        value: \"]\",\n        description: \"\\\"]\\\"\"\n      },\n      peg$c67 = /^[\\]\\\\]/,\n      peg$c68 = {\n        type: \"class\",\n        value: \"[\\\\]\\\\\\\\]\",\n        description: \"[\\\\]\\\\\\\\]\"\n      },\n      peg$c69 = /^[\\n\\r\\u2028\\u2029]/,\n      peg$c70 = {\n        type: \"class\",\n        value: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\",\n        description: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\"\n      },\n      peg$c71 = {\n        type: \"any\",\n        description: \"any character\"\n      },\n      peg$c72 = {\n        type: \"other\",\n        description: \"whitespace\"\n      },\n      peg$c73 = /^[ \\t]/,\n      peg$c74 = {\n        type: \"class\",\n        value: \"[ \\\\t]\",\n        description: \"[ \\\\t]\"\n      },\n\n      peg$currPos = 0,\n      peg$savedPos = 0,\n      peg$posDetailsCache = [\n        {\n          line: 1,\n          column: 1,\n          seenCR: false\n        }\n      ],\n      peg$maxFailPos = 0,\n      peg$maxFailExpected = [],\n      peg$silentFails = 0,\n\n      peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, input.substring(peg$savedPos, peg$currPos), peg$computeLocation(peg$savedPos, peg$currPos));\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n        p,\n        ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function(ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0100-\\u0FFF]/g, function(ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1000-\\uFFFF]/g, function(ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n\n        var expectedDescs = new Array(expected.length),\n          expectedDesc,\n          foundDesc,\n          i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n\t\t\t\t\t? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1]\n\t\t\t\t\t: expectedDescs[0];\n\n        foundDesc = found\n\t\t\t\t\t? \"\\\"\" + stringEscape(found) + \"\\\"\"\n\t\t\t\t\t: \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(message !== null\n\t\t\t\t? message\n\t\t\t\t: buildMessage(expected, found), expected, found, location);\n    }\n\n    function peg$parseQuery() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5,\n        s6,\n        s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseExpr();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c1);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExpr();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 124) {\n              s5 = peg$c0;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c1);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseExpr();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpr() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5,\n        s6,\n        s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseTerm();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 38) {\n            s5 = peg$c3;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c4);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 38) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseTerm();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c5(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseTerm() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4,\n        s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c7);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseQuery();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c8;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c9);\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c10(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseFilter();\n      }\n\n      return s0;\n    }\n\n    function peg$parseFilter() {\n      var s0;\n\n      s0 = peg$parseIs();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseVersion();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseBound();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseTag();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseName();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseName() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c13);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifierOrRegex();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c11);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIs() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c16) {\n        s1 = peg$c16;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c17);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifier();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c18(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c15);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVersion() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c20) {\n        s1 = peg$c20;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c23);\n          }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c24;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c25);\n            }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c26) {\n              s2 = peg$c26;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n              }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c28) {\n                s2 = peg$c28;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c29);\n                }\n              }\n            }\n          }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIdentifierOrRegex();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c30(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c19);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTag() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c32) {\n        s1 = peg$c32;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c33);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifierOrRegex();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c31);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBound() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c36) {\n        s1 = peg$c36;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifier();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c38;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c39);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIdentifierOrRegex();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c40(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c35);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifierOrRegex() {\n      var s0;\n\n      peg$silentFails++;\n      s0 = peg$parseIdentifier();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionLiteral();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c41);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifier() {\n      var s0,\n        s1,\n        s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c43.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c44);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c43.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c44);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c45();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c42);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionLiteral() {\n      var s0,\n        s1,\n        s2,\n        s3,\n        s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c48);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseRegularExpressionBody();\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c48);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 103) {\n              s4 = peg$c49;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c50);\n              }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 109) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c52);\n                }\n              }\n              if (s4 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 105) {\n                  s4 = peg$c53;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c54);\n                  }\n                }\n                if (s4 === peg$FAILED) {\n                  s4 = peg$c55;\n                }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c56(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c46);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionBody() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseRegularExpressionFirstChar();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseRegularExpressionChar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRegularExpressionChar();\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionFirstChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c57.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c58);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRegularExpressionClass();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c59.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c60);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRegularExpressionClass();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionBackslashSequence() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c61;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c62);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionNonTerminator() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parseLineTerminator();\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSourceCharacter();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionClass() {\n      var s0,\n        s1,\n        s2,\n        s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c63;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c64);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseRegularExpressionClassChar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRegularExpressionClassChar();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c65;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c66);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegularExpressionClassChar() {\n      var s0,\n        s1,\n        s2;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c68);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseRegularExpressionNonTerminator();\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRegularExpressionBackslashSequence();\n      }\n\n      return s0;\n    }\n\n    function peg$parseLineTerminator() {\n      var s0;\n\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c70);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSourceCharacter() {\n      var s0;\n\n      if (input.length > peg$currPos) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c71);\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0,\n        s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c73.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c74);\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c73.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c74);\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c72);\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({type: \"end\", description: \"end of input\"});\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos < input.length\n\t\t\t\t? input.charAt(peg$maxFailPos)\n\t\t\t\t: null, peg$maxFailPos < input.length\n\t\t\t\t? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n\t\t\t\t: peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  return {SyntaxError: peg$SyntaxError, parse: peg$parse};\n});\n/* jshint ignore:end */\n","'use strict';\n\nangular.module('editorApp')\n  .filter('doFilter', function () {\n    var query = function () {};\n\n    function test(expected, actual) {\n      if (actual.type && actual.type === 'regex') {\n        return actual.content.test(expected);\n      } else {\n        return expected === actual;\n      }\n    }\n\n    function atomicName(item, expr) {\n      var match = test(item.name, expr.content);\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return test(child.name, expr.content);\n        });\n      }\n      return match;\n    }\n\n    function name(items, expr) {\n      return items.filter(function (item) {\n        return atomicName(item, expr);\n      });\n    }\n\n    function atomicIs(item, expr) {\n      var match;\n      switch (expr.content) {\n        case 'node':\n          match = item.type === 'node';\n          break;\n\n        case 'chan':\n        case 'channel':\n          match = item.type === 'channel';\n          break;\n\n        case 'comp':\n        case 'component':\n          match = item.type === 'component';\n          break;\n\n        case 'group':\n        case 'grp':\n          match = item.type === 'group';\n          break;\n\n        case 'selected':\n          match = item.selected;\n          break;\n\n        case 'folded':\n          match = item.folded;\n          break;\n\n        default:\n          match = false;\n          break;\n      }\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicIs(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function is(items, expr) {\n      return items.filter(function (item) {\n        return atomicIs(item, expr);\n      });\n    }\n\n    function atomicTag(item, expr) {\n      var match = item.tags.some(function (tag) {\n        return test(tag, expr.content);\n      });\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicTag(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function tag(items, expr) {\n      return items.filter(function (item) {\n        return atomicTag(item, expr);\n      });\n    }\n\n    function atomicVers(item, expr) {\n      var match = test(item.version, expr.content);\n\n      if (!match && item.children) {\n        return item.children.some(function (child) {\n          return atomicVers(child, expr);\n        });\n      }\n      return match;\n    }\n\n    function vers(items, expr) {\n      return items.filter(function (item) {\n        return atomicVers(item, expr);\n      });\n    }\n\n    function and(items, expr) {\n      var filtered = items;\n      expr.content.forEach(function (expr) {\n        filtered = query(filtered, expr);\n      });\n      return filtered;\n    }\n\n    function or(items, expr) {\n      var alreadyFiltered = [];\n      var filtered = [];\n      expr.content.forEach(function (expr) {\n        var notAddedItems = items.filter(function (item) {\n          return alreadyFiltered.indexOf(item.path) === -1;\n        });\n        var toAdd = query(notAddedItems, expr);\n        toAdd.forEach(function (item) {\n          if (alreadyFiltered.indexOf(item.path) === -1) {\n            alreadyFiltered.push(item.path);\n          }\n        });\n        filtered = filtered.concat(toAdd);\n      });\n      return filtered;\n    }\n\n    query = function (items, expr) {\n      if (items) {\n        if (expr) {\n          switch (expr.type) {\n            case 'name':\n              return name(items, expr);\n\n            case 'is':\n              return is(items, expr);\n\n            case 'tag':\n              return tag(items, expr);\n\n            case 'vers':\n              return vers(items, expr);\n\n            case 'and':\n              return and(items, expr);\n\n            case 'or':\n              return or(items, expr);\n\n            default:\n              return items;\n          }\n        } else {\n          return items;\n        }\n      }\n    };\n\n    return query;\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('settings', {\n        parent: 'app',\n        url: '/settings',\n        views: {\n          'content@': {\n            templateUrl: 'app/settings/settings.html',\n            controller: 'SettingsCtrl'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:SettingsCtrl\n * @description\n * # SettingsCtrl\n * Controller of the editorApp options page\n */\nangular.module('editorApp')\n\t.controller('SettingsCtrl', function ($scope, kScript, kRegistry, storage, Notification) {\n  $scope.registryUrl = kRegistry.getUrl();\n\n  $scope.getUrl = function () {\n    return kRegistry.getUrl();\n  };\n\n  $scope.changeKevoreeRegistry = function () {\n    if ($scope.registryUrl !== kRegistry.getUrl().toString()) {\n      try {\n        var url = new URL($scope.registryUrl);\n        kRegistry.setUrl(url);\n        Notification.success({\n          title: 'Kevoree Registry',\n          message: 'URL successfully updated',\n          delay: 3000\n        });\n      } catch (err) {\n        Notification.error({\n          title: 'Kevoree Registry',\n          message: 'Invalid URL ' + $scope.registryUrl,\n          delay: 3000\n        });\n      }\n    }\n  };\n\n  $scope.canChangeKevoreeRegistry = function () {\n    return $scope.registryUrl !== undefined &&\n\t\t\t\t$scope.registryUrl !== null &&\n\t\t\t\t$scope.registryUrl !== kRegistry.getUrl().toString();\n  };\n\n  $scope.clearKevScriptCache = function () {\n    var prefix = TinyConf.get('cache.root');\n    Object.keys(localStorage).forEach(function (key) {\n      if (key.startsWith(prefix)) {\n        delete localStorage[key];\n      }\n    });\n  };\n\n  $scope.canClearKevScriptCache = function () {\n    var prefix = TinyConf.get('cache.root');\n    return Object.keys(localStorage).find(function (key) {\n      return key.startsWith(prefix);\n    });\n  };\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:NavBarCtrl\n * @description\n * # NavBarCtrl\n * Controller of the editorApp navigation bar\n */\nangular.module('editorApp')\n  .controller('NavBarCtrl', function ($scope, $state) {\n    $scope.isCollapsed = true;\n    $scope.$state = $state;\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:TypedefsCtrl\n * @description\n * # TypedefsCtrl\n * Controller of the editorApp TypeDefinition sidebar\n */\nangular.module('editorApp')\n    .controller('TypedefsCtrl', function($scope, kEditor, ui, kModelHelper, kFactory, kInstance, Notification, KWE_POSITION) {\n      $scope.packages = {};\n\n      $scope.dragDraggable = {\n        animate: true,\n        placeholder: 'keep',\n        onStart: 'onStart',\n        onDrag: 'onDrag',\n        onStop: 'onStop'\n      };\n\n      $scope.dragOptions = {\n        revert: 'invalid',\n        helper: 'clone',\n        addClasses: false,\n        scroll: false,\n        appendTo: '#tdef-drag-panel',\n        containment: '#tdef-drag-panel',\n        cursor: 'move',\n        cursorAt: {\n          top: -5,\n          right: -5\n        }\n      };\n\n      $scope.hasPackages = function() {\n        return Object.keys($scope.packages).length > 0;\n      };\n\n      $scope.onStart = function(evt, obj) {\n        ui.setDropTarget(null);\n\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          var container = document.getElementById('editor-container');\n          this.offset = {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          };\n\n          var pkgPath = obj.helper[0].dataset.pkgPath;\n          var tdefName = obj.helper[0].innerHTML.trim();\n          var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n          this.typeDef = kModelHelper.findBestVersion(tdefs.array);\n        }\n      };\n\n      $scope.onDrag = function(evt, obj) {\n        ui.mousePos = {\n          x: evt.clientX,\n          y: evt.clientY\n        };\n\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          clearTimeout(this.timeout);\n          if (this.hoveredNode) {\n            this.hoveredNode.select('.bg').removeClass('hovered error');\n          }\n\n          this.timeout = setTimeout(function() {\n            this.hoveredNode = ui.getHoveredNode(\n                        ui.mousePos.x - this.offset.left,\n                        ui.mousePos.y - this.offset.top);\n            if (this.hoveredNode) {\n              var nodeBg = this.hoveredNode.select('.bg');\n              nodeBg.addClass('hovered');\n\n              if (!kModelHelper.isCompatible(this.typeDef, kEditor.getModel().findByPath(this.hoveredNode.attr('data-path')))) {\n                nodeBg.addClass('error');\n                ui.setDropTarget(null);\n              } else {\n                ui.setDropTarget(this.hoveredNode);\n              }\n            } else {\n              ui.setDropTarget(null);\n            }\n          }.bind(this), 100);\n        }\n      };\n\n      $scope.onStop = function(evt, obj) {\n        if (obj.helper.hasClass('tdef-item-component') || obj.helper.hasClass('tdef-item-node')) {\n          clearTimeout(this.timeout);\n          if (this.hoveredNode) {\n            if (this.hoveredNode.select('.bg').hasClass('error')) {\n              Notification.warning({\n                title: 'Add component',\n                message: 'Targeted node platform cannot run this TypeDefinition',\n                delay: 5000\n              });\n            }\n            this.hoveredNode.select('.bg').removeClass('hovered error');\n          } else {\n            if (obj.helper.hasClass('tdef-item-component')) {\n              Notification.warning({\n                title: 'Add component',\n                message: 'You have to drop components in nodes',\n                delay: 5000\n              });\n            }\n          }\n\n          delete this.typeDef;\n          delete this.timeout;\n          delete this.offset;\n          delete this.hoveredNode;\n        }\n      };\n\n      $scope.addInstance = function(tdef) {\n        var tdefs = kEditor.getModel().select(tdef.pkgPath + '/typeDefinitions[name=' + tdef.name + ']');\n        tdef = kModelHelper.findBestVersion(tdefs.array);\n        var type = kModelHelper.getTypeDefinitionType(tdef);\n\n        function preProcess(instance) {\n          instance.typeDefinition = tdef;\n          instance.started = true;\n          var pos = kFactory.createValue();\n          pos.name = KWE_POSITION;\n          pos.value = JSON.stringify({\n            x: 100,\n            y: 100\n          });\n          instance.addMetaData(pos);\n          kInstance.initDictionaries(instance);\n        }\n\n        var model = kEditor.getModel();\n        var selectedNodes = ui.getSelectedNodes();\n        var instance;\n        switch (type) {\n          case 'node':\n            if (selectedNodes.length > 0) {\n              selectedNodes.forEach(function(nodeElem) {\n                var node = model.findByPath(nodeElem.attr('data-path'));\n                if (node) {\n                  instance = kFactory.createContainerNode();\n                  instance.name = 'node' + parseInt(Math.random() * 1000);\n                  preProcess(instance);\n                  model.addNodes(instance);\n                  node.addHosts(instance);\n                }\n              });\n            } else {\n              instance = kFactory.createContainerNode();\n              instance.name = 'node' + parseInt(Math.random() * 1000);\n              preProcess(instance);\n              model.addNodes(instance);\n            }\n            break;\n\n          case 'group':\n            instance = kFactory.createGroup();\n            instance.name = 'group' + parseInt(Math.random() * 1000);\n            preProcess(instance);\n            model.addGroups(instance);\n            break;\n\n          case 'component':\n            if (selectedNodes.length > 0) {\n              selectedNodes.forEach(function(nodeElem) {\n                var node = model.findByPath(nodeElem.attr('data-path'));\n                if (node) {\n                  instance = kFactory.createComponentInstance();\n                  instance.name = 'comp' + parseInt(Math.random() * 1000);\n                  preProcess(instance);\n                  node.addComponents(instance);\n                }\n              });\n            } else {\n              Notification.warning({\n                title: 'Add component',\n                message: 'You have to select at least one node',\n                delay: 5000\n              });\n            }\n            break;\n\n          case 'channel':\n            instance = kFactory.createChannel();\n            instance.name = 'chan' + parseInt(Math.random() * 1000);\n            preProcess(instance);\n            model.addHubs(instance);\n            break;\n        }\n      };\n\n        /**\n         * Inflate $scope.packages with value from kEditor.getModel()\n         */\n      function processModel() {\n        $scope.packages = [];\n        var model = kEditor.getModel();\n\n        var pkgsMap = {};\n        model.select('**/typeDefinitions[*]')\n                .array.forEach(function(tdef) {\n                  var pkg = kModelHelper.genPkgName(tdef.eContainer());\n                  pkgsMap[pkg] = pkgsMap[pkg] || {};\n                  pkgsMap[pkg].tdefs = pkgsMap[pkg].tdefs || {};\n\n                  var descMeta = tdef.findMetaDataByID('description');\n                  var descValue = descMeta ? descMeta.value : '<em>- none -</em>';\n                  if (descValue.length >= 200) {\n                    descValue = descValue.substr(0, 200) + '...';\n                  }\n                  var platforms = {};\n                  tdef.select('deployUnits[name=*]/filters[name=platform]')\n                        .array.forEach(function (meta) {\n                          platforms[meta.value] = true;\n                        });\n                  pkgsMap[pkg].tdefs[tdef.name] = {\n                    name: tdef.name,\n                    type: kModelHelper.getTypeDefinitionType(tdef),\n                    pkgPath: tdef.eContainer().path(),\n                    platforms: Object.keys(platforms),\n                    description: descValue\n                  };\n                });\n\n        Object.keys(pkgsMap).forEach(function(pkgName) {\n          var pkg = {\n            name: pkgName,\n            collapsed: false,\n            tdefs: []\n          };\n          Object.keys(pkgsMap[pkgName].tdefs).forEach(function(tdefName) {\n            pkg.tdefs.push(pkgsMap[pkgName].tdefs[tdefName]);\n          });\n          $scope.packages.push(pkg);\n        });\n      }\n\n        // listen to model changes on the editor\n      var unregister = kEditor.addModelUpdateListener('tdefs', processModel, true);\n      var unregister2 = kEditor.addNewModelListener('tdefs', processModel);\n\n        // process model\n      processModel();\n\n      $scope.$on('$destroy', function() {\n        unregister();\n        unregister2();\n      });\n    });\n","'use strict';\n\nangular.module('editorApp')\n\t.config(function ($stateProvider) {\n  $stateProvider\n\t\t\t.state('main', {\n  parent: 'app',\n  url: '/',\n  views: {\n    'content@': {\n      templateUrl: 'app/main/main.html',\n      controller: 'MainCtrl'\n    },\n    'typedefs@main': {\n      templateUrl: 'app/main/typedefs/typedefs.html',\n      controller: 'TypedefsCtrl'\n    },\n    'editor@main': {\n      templateUrl: 'app/main/editor/editor.html',\n      controller: 'EditorCtrl'\n    },\n    'instance@main': {\n      templateUrl: 'app/main/instance/instance.html',\n      controller: 'InstanceCtrl',\n      controllerAs: 'vm'\n    }\n  },\n  onExit: function (ui) {\n    ui.editor = null;\n  }\n});\n});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:MainCtrl\n * @description\n * # MainCtrl\n * Controller of the editorApp main content div\n */\nangular.module('editorApp')\n  .controller('MainCtrl', function ($scope, $timeout, $stateParams, $uibModal, kEditor, hotkeys, saveFile, ui, kModelHelper, kFactory, kWs, Notification) {\n    function onModelHandler() {\n      kEditor.drawModel();\n    }\n    var unregister = kEditor.addNewModelListener('main', onModelHandler);\n\n    $scope.synced = false;\n    var syncWS;\n\n    $scope.onFileLoaded = function () {};\n\n    $scope.open = function (evt) {\n      evt.preventDefault();\n\n      $scope.onFileLoaded = function (filename, data) {\n        var oldModel = kEditor.getModel();\n        var loader = kFactory.createJSONLoader();\n        var model;\n        try {\n          model = loader.loadModelFromString(data).get(0);\n        } catch (err) {\n          console.warn('[main.controller.open()] Error loading model file'); // eslint-disable-line\n          console.error(err.stack); // eslint-disable-line\n          Notification.error({\n            title: 'Open from file',\n            message: 'Unable to load a model from <strong>' + filename + '</strong>',\n            delay: 15000\n          });\n          kEditor.setModel(oldModel);\n          return;\n        }\n\n        kEditor.setModel(model, function (err) {\n          if (err) {\n            Notification.error({\n              title: 'Open from file',\n              message: 'Unable to open model <strong>' + filename + '</strong><br/>' + err.message,\n              delay: 15000\n            });\n          } else {\n            Notification.success({\n              title: 'Open from file',\n              message: 'Model loaded from <strong>' + filename + '</strong>'\n            });\n          }\n        });\n      };\n      jQuery('input#file').click();\n    };\n\n    $scope.merge = function (evt) {\n      evt.preventDefault();\n      $scope.onFileLoaded = function mergeModel(filename, data) {\n        var loader = kFactory.createJSONLoader();\n        var compare = kFactory.createModelCompare();\n        var cloner = kFactory.createModelCloner();\n        var model;\n        try {\n          model = loader.loadModelFromString(data).get(0);\n          var currentModel = cloner.clone(kEditor.getModel());\n          compare.merge(currentModel, model).applyOn(currentModel);\n        } catch (err) {\n          console.warn('[main.controller.merge()] Error loading model file'); // eslint-disable-line\n          console.error(err.stack); // eslint-disable-line\n          Notification.error({\n            title: 'Merge from file',\n            message: 'Unable to merge the model with <strong>' + filename + '</strong>',\n            delay: 15000\n          });\n          return;\n        }\n\n        kEditor.setModel(currentModel, function (err) {\n          if (err) {\n            Notification.error({\n              title: 'Merge from file',\n              message: 'Unable to merge model <strong>' + filename + '</strong><br/>' + err.message,\n              delay: 15000\n            });\n          } else {\n            Notification.success({\n              title: 'Merge from file',\n              message: 'Model merged with <strong>' + filename + '</strong>'\n            });\n          }\n        });\n      };\n      jQuery('input#file').click();\n    };\n\n    $scope.openFromNode = function (evt) {\n      evt.preventDefault();\n\n      $uibModal.open({\n        templateUrl: 'app/components/util/host-port-path.modal.html',\n        size: 'md',\n        controller: function ($scope, $uibModalInstance) {\n          $scope.title = 'Open from node';\n          $scope.action = 'Open';\n          $scope.host = '127.0.0.1';\n          $scope.port = 9000;\n          $scope.path = '/';\n\n          $uibModalInstance.rendered.then(function () {\n            $timeout(function () {\n              jQuery('#host').focus();\n            }, 250);\n          });\n\n          $scope.confirm = function () {\n            $scope.closeError();\n\n            kWs.getModel($scope.host, $scope.port, $scope.path, function (err, model, url) {\n              if (err) {\n                $timeout(function () {\n                  $scope.error = err.message;\n                });\n              } else {\n                $uibModalInstance.close();\n                kEditor.setModel(model, function (err) {\n                  if (err) {\n                    Notification.error({\n                      title: $scope.title,\n                      message: 'Unable to load model from <strong>' + url + '</strong><br/>' + err.message,\n                      delay: 15000\n                    });\n                  } else {\n                    Notification.success({\n                      title: $scope.title,\n                      message: 'Model loaded from <strong>' + url + '</strong>'\n                    });\n                  }\n                });\n              }\n            });\n          };\n\n          $scope.closeError = function () {\n            $scope.error = null;\n          };\n        }\n      });\n    };\n\n    $scope.mergeFromNode = function (evt) {\n      evt.preventDefault();\n\n      $uibModal.open({\n        templateUrl: 'app/components/util/host-port-path.modal.html',\n        size: 'md',\n        controller: function ($scope, $uibModalInstance, kWs) {\n          $scope.title = 'Merge from node';\n          $scope.action = 'Merge';\n          $scope.host = '127.0.0.1';\n          $scope.port = 9000;\n          $scope.path = '/';\n\n          $uibModalInstance.rendered.then(function () {\n            $timeout(function () {\n              jQuery('#host')\n                .focus();\n            }, 250);\n          });\n\n          $scope.confirm = function () {\n            $scope.closeError();\n\n            kWs.getModel($scope.host, $scope.port, $scope.path, function (err, model, url) {\n              if (err) {\n                $timeout(function () {\n                  $scope.error = err.message;\n                });\n              } else {\n                $uibModalInstance.close();\n                var compare = kFactory.createModelCompare();\n                var cloner = kFactory.createModelCloner();\n                var currentModel = cloner.clone(kEditor.getModel());\n                compare.merge(currentModel, model).applyOn(currentModel);\n                kEditor.setModel(currentModel, function (err) {\n                  if (err) {\n                    Notification.error({\n                      title: $scope.title,\n                      message: 'Unable to merge model from <strong>' + url + '</strong><br/>' + err.message,\n                      delay: 15000\n                    });\n                  } else {\n                    Notification.success({\n                      title: $scope.title,\n                      message: 'Model merged with <strong>' + url + '</strong>'\n                    });\n                  }\n                });\n              }\n            });\n          };\n\n          $scope.closeError = function () {\n            $scope.error = null;\n          };\n        }\n      });\n    };\n\n    $scope.disconnectSync = function () {\n      if (syncWS) {\n        syncWS.close();\n        $timeout(function () {\n          $scope.synced = false;\n        });\n      }\n    };\n\n    $scope.connectSync = function (evt) {\n      evt.preventDefault();\n      if (!$scope.synced) {\n        var parentScope = $scope;\n        $uibModal.open({\n          templateUrl: 'app/components/util/host-port-path.modal.html',\n          size: 'md',\n          controller: function ($scope, $uibModalInstance) {\n            $scope.title = 'Connect sync';\n            $scope.action = 'Sync';\n            $scope.host = '127.0.0.1';\n            $scope.port = 9000;\n            $scope.path = '/';\n\n            $uibModalInstance.rendered.then(function () {\n              $timeout(function () {\n                jQuery('#host').focus();\n              }, 250);\n            });\n\n            $scope.confirm = function () {\n              $scope.closeError();\n\n              if (!$scope.path) {\n                $scope.path = '';\n              } else {\n                if ($scope.path.length === 1 && $scope.path === '/') {\n                  $scope.path = '';\n                } else if ($scope.path.substr(0, 1) !== '/') {\n                  $scope.path = '/' + $scope.path;\n                }\n              }\n\n              syncWS = new WebSocket('ws://' + $scope.host + ':' + $scope.port + $scope.path);\n\n              syncWS.addEventListener('open', function () {\n                $timeout(function () {\n                  parentScope.url = $scope.host + (($scope.port === 80) ? '' : ':' + $scope.port) + $scope.path;\n                  parentScope.synced = true;\n                });\n                $uibModalInstance.close();\n                Notification.success({\n                  title: $scope.title,\n                  message: 'Connected to <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>'\n                });\n              });\n\n              syncWS.addEventListener('message', function (evt) {\n                var data = evt.data;\n                if (data.substr(0, 'push/'.length) === 'push/') {\n                  data = data.substr('push/'.length);\n                }\n\n                var loader = kFactory.createJSONLoader();\n                try {\n                  var model = loader.loadModelFromString(data).get(0);\n                  kEditor.setModel(model, function (err) {\n                    if (err) {\n                      Notification.error({\n                        title: $scope.title,\n                        message: 'Unable to update synced model from <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong><br/>' + err.message,\n                        delay: 15000\n                      });\n                    } else {\n                      Notification.success({\n                        title: $scope.title,\n                        message: 'Model updated from sync with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>'\n                      });\n                    }\n                  });\n                } catch (err) {\n                  Notification.error({\n                    title: $scope.title,\n                    message: 'Error: unable to load received message as a Kevoree JSON model',\n                    delay: 15000\n                  });\n                }\n              });\n\n              syncWS.addEventListener('error', function () {\n                Notification.error({\n                  title: $scope.title,\n                  message: 'Error: unable to sync with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong>',\n                  delay: 15000\n                });\n              });\n\n              syncWS.addEventListener('close', function () {\n                $timeout(function () {\n                  parentScope.synced = false;\n                });\n                Notification.warning({\n                  title: $scope.title,\n                  message: 'Connection with <strong>ws://' + $scope.host + ':' + $scope.port + $scope.path + '</strong> closed'\n                });\n              });\n            };\n\n            $scope.closeError = function () {\n              $scope.error = null;\n            };\n          }\n        });\n      } else {\n        Notification.warning({\n          title: 'Connect sync',\n          message: 'You are already synced'\n        });\n      }\n    };\n\n    $scope.save = function (evt, filename) {\n      evt.preventDefault();\n      var serializer = kFactory.createJSONSerializer();\n\n      try {\n        // serialize model\n        var modelStr = serializer.serialize(kEditor.getModel());\n        // prettify model\n        modelStr = JSON.stringify(JSON.parse(modelStr), null, 4);\n        // download model on client\n        saveFile.save(modelStr, filename, '.json', 'application/json');\n      } catch (err) {\n        Notification.error({\n          title: 'Save',\n          message: 'Unable to serialize model to JSON'\n        });\n      }\n    };\n\n    // copy/paste logic\n    var clipboard = [];\n    $scope.copy = function () {\n      clipboard = ui.getSelectedPaths()\n        .filter(function (elem) {\n          return typeof elem === 'string';\n        });\n    };\n    $scope.paste = function () {\n      clipboard.forEach(function (path) {\n        var model = kEditor.getModel();\n        var instance = model.findByPath(path);\n        if (instance) {\n          var clone = kModelHelper.clone(instance);\n          switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n            case 'node':\n              model.addNodes(clone);\n              if (instance.host) {\n                instance.host.addHosts(clone);\n              }\n              break;\n            case 'group':\n              model.addGroups(clone);\n              break;\n            case 'channel':\n              model.addHubs(clone);\n              break;\n            case 'component':\n              instance.eContainer()\n                .addComponents(clone);\n              break;\n          }\n        }\n      });\n      if (clipboard.length > 0) {\n        kEditor.drawModel();\n      }\n    };\n\n    $scope.fixOverlapping = function (evt) {\n      evt.preventDefault();\n      kEditor.fixOverlapping();\n    };\n\n    $scope.deleteAll = function (evt) {\n      evt.preventDefault();\n      $scope.deleteInstances(evt);\n      kEditor.getModel()\n        .removeAllPackages();\n    };\n\n    $scope.deleteInstances = function (evt) {\n      evt.preventDefault();\n      var model = kEditor.getModel();\n      model.removeAllNodes();\n      model.removeAllGroups();\n      model.removeAllHubs();\n      model.removeAllMBindings();\n      model.removeAllRepositories();\n    };\n\n    $scope.deleteSelection = function (evt) {\n      evt.preventDefault();\n      var deletions = ui.deleteSelected();\n      if (deletions === 0) {\n        Notification.warning({\n          title: 'Delete selected',\n          message: 'Nothing selected'\n        });\n      }\n    };\n\n    $scope.toggleShortcutHelp = function () {\n      hotkeys.toggleCheatSheet();\n    };\n\n    //$scope.undo = function (evt) {\n    //    evt.preventDefault();\n    //    console.log('undo');\n    //    Notification.warning({\n    //        title: 'Undo',\n    //        message: 'Not implemented yet',\n    //        delay: 3000\n    //    });\n    //};\n    //$scope.redo = function (evt) {\n    //    evt.preventDefault();\n    //    console.log('redo');\n    //    Notification.warning({\n    //        title: 'Redo',\n    //        message: 'Not implemented yet',\n    //        delay: 3000\n    //    });\n    //};\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+o',\n        description: 'Open a model from a file',\n        callback: $scope.open\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+m',\n        description: 'Merge a model from a file with current model in editor',\n        callback: $scope.merge\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+o',\n        description: 'Open a model from a node',\n        callback: $scope.openFromNode\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+m',\n        description: 'Merge a model from a node with current model in editor',\n        callback: $scope.mergeFromNode\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+shift+g',\n        description: 'Connect to a Web Socket server and stay synced with it',\n        callback: $scope.connectSync\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+s',\n        description: 'Save the current model into a JSON file',\n        callback: function (evt) {\n          evt.preventDefault();\n          var saveFile = $scope.save;\n          $uibModal\n            .open({\n              templateUrl: 'app/components/util/filename.modal.html',\n              size: 'sm',\n              controller: function ($scope, $uibModalInstance) {\n                $scope.title = 'Save model';\n                $scope.body = 'Would you like to save your current model to a file?';\n                $scope.filename = 'model' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n                $uibModalInstance.rendered.then(function () {\n                  $timeout(function () {\n                    jQuery('#filename')\n                      .focus();\n                  }, 250);\n                });\n\n                $scope.save = function () {\n                  function endsWith(str, suffix) {\n                    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n                  }\n                  var suffix = '.json';\n                  if (endsWith($scope.filename, suffix)) {\n                    $scope.filename = $scope.filename.substr(0, $scope.filename.length - suffix.length);\n                  }\n                  saveFile(evt, $scope.filename);\n                  $uibModalInstance.close();\n                };\n              }\n            });\n        }\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+o',\n        description: 'Fix overlapping',\n        callback: $scope.fixOverlapping\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+shift+d',\n        description: 'Delete everything in the current model',\n        callback: $scope.deleteAll\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'alt+shift+i',\n        description: 'Delete instances in the current model',\n        callback: $scope.deleteInstances\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'del',\n        description: 'Delete selected instances in the current model',\n        callback: $scope.deleteSelection\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+a',\n        description: 'Select all instances',\n        callback: function (evt) {\n          evt.preventDefault();\n          ui.selectAll();\n        }\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+c',\n        description: 'Copy the selected instance(s)',\n        callback: $scope.copy\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+v',\n        description: 'Paste the selected instance(s)',\n        callback: $scope.paste\n      });\n\n    //hotkeys.bindTo($scope).add({\n    //    combo: 'ctrl+z',\n    //    description: 'Undo the last modification',\n    //    callback: $scope.undo\n    //});\n    //\n    //hotkeys.bindTo($scope).add({\n    //    combo: 'ctrl+y',\n    //    description: 'Redo the last modification',\n    //    callback: $scope.redo\n    //});\n\n    $scope.$on('$destroy', function () {\n      unregister();\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .controller('InstanceNetworkModalCtrl', function ($scope, $uibModalInstance, $timeout, node, net, kFactory) {\n    $scope.node = node;\n    $scope.net = net;\n    $scope.newVal = {\n      name: null,\n      value: null\n    };\n\n    $scope.addNewVal = function () {\n      if ($scope.newVal.name && $scope.newVal.value) {\n        var val = kFactory.createValue();\n        val.name = $scope.newVal.name;\n        val.value = $scope.newVal.value;\n        $scope.net.addValues(val);\n        $scope.newVal.name = null;\n        $scope.newVal.value = null;\n        jQuery('input#newValName').focus();\n      }\n    };\n\n    $scope.add = function () {\n      node.addNetworkInformation($scope.net);\n      $uibModalInstance.close();\n    };\n\n    $scope.delete = function () {\n      $scope.net.delete();\n      $uibModalInstance.close();\n    };\n\n    $scope.canSave = function () {\n      return net.values.array.length > 0;\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:InstanceCtrl\n * @description\n * # InstanceCtrl\n * Controller of the editorApp instance editor\n */\nangular.module('editorApp')\n  .controller('InstanceCtrl', function ($scope, $timeout, $uibModal, hotkeys, ui, kEditor, kFactory, kInstance, kModelHelper) {\n    var vm = this;\n\n    var timeout;\n    vm.instance = null;\n    vm.type = null;\n    vm.mainCollapsed = false;\n    vm.dicCollapsed = false;\n    vm.netCollapsed = false;\n    vm.descCollapsed = false;\n    vm.fragCollapsed = {};\n\n    /**\n     * Process vm.instance TypeDefinition in order to set default values on the dictionaries\n     **/\n    function processTypeDefinition() {\n      vm.versions = vm.instance.typeDefinition.eContainer()\n        .select('typeDefinitions[name=' + vm.instance.typeDefinition.name + ']').array\n        .map(function (tdef) {\n          return tdef.version;\n        });\n      vm.instance.selectedVersion = vm.instance.typeDefinition.version;\n      vm.dus = vm.instance.typeDefinition.deployUnits.array;\n      var descMeta = vm.instance.typeDefinition.findMetaDataByID('description');\n      if (descMeta) {\n        vm.description = descMeta.value;\n      } else {\n        vm.description = '<em>- none -</em>';\n      }\n      if (vm.instance.typeDefinition.dictionaryType) {\n        vm.dicAttrs = vm.instance.typeDefinition.dictionaryType\n          .select('attributes[fragmentDependant=false]').array;\n        vm.fragDicAttrs = vm.instance.typeDefinition.dictionaryType\n          .select('attributes[fragmentDependant=true]').array;\n      } else {\n        vm.dicAttrs = [];\n        vm.fragDicAttrs = [];\n      }\n\n      // create dictionary values if none set\n      kInstance.initDictionaries(vm.instance);\n    }\n\n    /**\n     * Clean dictionary from unwanted attributes (when a version change occurs, this will strip out\n     * values that depend on unknown attributes in the new version)\n     * @param dic\n     * @param dicType\n     * @param isFragment\n     */\n    function processDictionary(dic, dicType, isFragment) {\n      if (dicType) {\n        dic.values.array.forEach(function (val) {\n          var attr = dicType.select('attributes[name=' + val.name + ']').array[0];\n          if (attr) {\n            if (vm.isTruish(attr.fragmentDependant)) {\n              if (!isFragment) {\n                val.delete();\n              }\n            } else {\n              if (isFragment) {\n                val.delete();\n              }\n            }\n          } else {\n            val.delete();\n          }\n        });\n      }\n    }\n\n    vm.changeName = function (form, name) {\n      if (form.name.$valid) {\n        vm.instance.name = name;\n      }\n    };\n\n    vm.changeVersion = function (version) {\n      if (version) {\n        vm.instance.typeDefinition = vm.instance.typeDefinition.eContainer()\n          .select('**/typeDefinitions[name=' + vm.instance.typeDefinition.name + ',version=' + version + ']').array[0];\n        processDictionary(vm.instance.dictionary, vm.instance.typeDefinition.dictionaryType, false);\n        vm.instance.fragmentDictionary.array.forEach(function (fragDic) {\n          processDictionary(fragDic, vm.instance.typeDefinition.dictionaryType, true);\n        });\n        processTypeDefinition();\n      }\n    };\n\n    vm.hasFragmentDictionary = function () {\n      if (vm.instance && vm.instance.fragmentDictionary) {\n        return vm.instance.fragmentDictionary.size() > 0;\n      } else {\n        return false;\n      }\n    };\n\n    vm.hasNetworkInformation = function () {\n      return vm.instance && (typeof (vm.instance.networkInformation) !== 'undefined');\n    };\n\n    vm.manageNetwork = function (evt, net) {\n      evt.stopPropagation();\n      $uibModal.open({\n        templateUrl: 'app/main/instance/network.modal.html',\n        size: 'md',\n        resolve: {\n          node: function () {\n            return vm.instance;\n          },\n          net: function () {\n            return net;\n          }\n        },\n        controller: 'InstanceNetworkModalCtrl'\n      });\n    };\n\n    vm.addNetwork = function () {\n      var net = kFactory.createNetworkInfo();\n      net.name = 'net' + vm.instance.networkInformation.size();\n\n      $uibModal.open({\n        templateUrl: 'app/main/instance/network.modal.html',\n        size: 'md',\n        resolve: {\n          node: function () {\n            return vm.instance;\n          },\n          net: function () {\n            return net;\n          }\n        },\n        controller: 'InstanceNetworkModalCtrl'\n      });\n    };\n\n    vm.openGroupModal = function () {\n      $uibModal.open({\n        templateUrl: 'app/main/instance/group.modal.html',\n        size: 'md',\n        resolve: {\n          group: function () {\n            return vm.instance;\n          }\n        },\n        controller: 'GroupModalCtrl'\n      });\n    };\n\n    vm.isTruish = kModelHelper.isTruish;\n\n    vm.isReadOnly = function () {\n      // TODO put that code in kModelHelper\n      if (vm.instance) {\n        var val = vm.instance.findMetaDataByID('access_mode');\n        return val && val.value === 'read-only';\n      }\n      return false;\n    };\n\n    vm.isVirtual = function () {\n      return kModelHelper.isVirtual(vm.instance);\n    };\n\n    function processSelection() {\n      $timeout(function () {\n        // do the process in a timeout to be sure it gets $digested\n        vm.instance = null;\n        vm.type = null;\n        vm.versions = [];\n        vm.dus = null;\n        vm.description = '<em>- none -</em>';\n        vm.dicAttrs = [];\n        vm.fragDicAttrs = [];\n        vm.processing = true;\n\n        var selection = kModelHelper.getSelection(kEditor.getModel());\n        if (selection.length === 1) {\n          vm.instance = selection[0];\n          if (vm.instance) {\n            vm.instance.selectedVersion = vm.instance.typeDefinition.version;\n            jQuery('.ui-notification').css('right', '260px');\n            // using preName to prevent user from naming two instances with the same name\n            vm.instance.preName = vm.instance.name;\n            vm.type = kModelHelper.getTypeDefinitionType(vm.instance.typeDefinition);\n            processTypeDefinition();\n            vm.processing = false;\n          }\n        }\n      });\n    }\n\n    processSelection();\n    var unregister = kEditor.addModelUpdateListener('selected', processSelection, true);\n    var unregister2 = kEditor.addNewModelListener('selected', processSelection);\n\n    $scope.$on('$destroy', function () {\n      unregister();\n      unregister2();\n      $timeout.cancel(timeout);\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n    .factory('groupModalHolder', function() {\n      return {\n        host: '127.0.0.1',\n        port: '9000',\n        path: '/'\n      };\n    })\n    .controller('GroupModalCtrl', function($scope, $uibModalInstance, $timeout, group, kEditor, kWs, groupModalHolder) {\n      $scope.type = 'push to';\n      $scope.action = 'push';\n      $scope.group = group;\n      $scope.selectedHost = groupModalHolder.host;\n      $scope.selectedPort = groupModalHolder.port;\n      $scope.selectedPath = groupModalHolder.path;\n      $scope.processing = false;\n      $scope.modelHasErrors = kEditor.modelHasErrors();\n\n      $scope.hosts = {\n        '127.0.0.1': 'default'\n      };\n\n      $scope.ports = {\n        '9000': 'default'\n      };\n\n      $scope.paths = {\n        '/': 'default'\n      };\n\n      $scope.changeHost = function() {\n        groupModalHolder.host = $scope.selectedHost;\n      };\n      $scope.changePort = function() {\n        groupModalHolder.port = $scope.selectedPort;\n      };\n      $scope.changePath = function() {\n        groupModalHolder.path = $scope.selectedPath;\n      };\n\n      if (group.dictionary) {\n        var host = group.dictionary.findValuesByID('host');\n        if (host && !$scope.hosts[host.value]) {\n          $scope.hosts[host.value] = group.name;\n        }\n\n        var port = group.dictionary.findValuesByID('port');\n        if (port && !$scope.ports[port.value]) {\n          $scope.ports[port.value] = group.name;\n        }\n\n        var path = group.dictionary.findValuesByID('path');\n        if (path && !$scope.paths[path.value]) {\n          $scope.paths[path.value] = group.name;\n        }\n      }\n\n      group.subNodes.array.forEach(function(node) {\n        var fragDic = group.findFragmentDictionaryByID(node.name);\n\n        if (fragDic) {\n          var port = fragDic.findValuesByID('port'),\n            path = fragDic.findValuesByID('path');\n\n          if (port && !$scope.ports[port.value]) {\n            $scope.ports[port.value] = node.name;\n          }\n\n          if (path && !$scope.paths[path.value]) {\n            $scope.paths[path.value] = node.name;\n          }\n        }\n\n        node.networkInformation.array.forEach(function(net) {\n          net.values.array.forEach(function(val) {\n            if (!$scope.hosts[val.value]) {\n              $scope.hosts[val.value] = node.name;\n            }\n          });\n        });\n      });\n\n      $scope.closeError = function() {\n        $scope.error = null;\n      };\n\n      $scope.closeModelHasErrorsWarning = function () {\n        $scope.modelHasErrors = null;\n      };\n\n      $scope.closeSuccess = function() {\n        $scope.success = null;\n      };\n\n      var ws;\n      $scope.push = function() {\n        $scope.action = 'pushed to';\n        $scope.error = null;\n        $scope.processing = true;\n        $timeout(function() {\n          ws = kWs.pushModel(\n              kEditor.getModel(),\n              $scope.selectedHost,\n              $scope.selectedPort,\n              $scope.selectedPath,\n              function(err) {\n                $timeout(function() {\n                  if (err) {\n                    $scope.processing = false;\n                    $scope.error = err.message;\n                  } else {\n                    $scope.processing = false;\n                    $scope.success = true;\n                  }\n                });\n              });\n        });\n      };\n\n      $scope.pull = function() {\n        $scope.action = 'pulled from';\n        $scope.error = null;\n        $scope.processing = true;\n        ws = kWs.getModel(\n            $scope.selectedHost,\n            $scope.selectedPort,\n            $scope.selectedPath,\n            function(err, model) {\n              $timeout(function() {\n                if (err) {\n                  $scope.processing = false;\n                  $scope.error = err.message;\n                } else {\n                  $scope.processing = false;\n                  $scope.success = true;\n                  kEditor.setModel(model);\n                }\n              });\n            });\n      };\n\n      $scope.close = function() {\n        if (ws) {\n          ws.close();\n        }\n        $uibModalInstance.close();\n      };\n    });\n","'use strict';\n\nangular.module('editorApp')\n    .controller('SelectChanModalCtrl', function ($scope, $uibModalInstance, startPort, endPort, orderByFilter, kInstance, kEditor, kFactory, kModelHelper, KWE_POSITION) {\n      var selected;\n      $scope.instances = orderByFilter(kEditor.getModel().hubs.array.filter(function (chan) {\n        chan.selected = false;\n        return !kModelHelper.isAlreadyBound(endPort, chan) &&\n                !kModelHelper.isAlreadyBound(startPort, chan) &&\n                kModelHelper.isCompatible(chan.typeDefinition, startPort.eContainer().eContainer()) &&\n                kModelHelper.isCompatible(chan.typeDefinition, endPort.eContainer().eContainer());\n      }), 'typeDefinition.name');\n      $scope.types = orderByFilter(kModelHelper.getChannelTypes(kEditor.getModel()).filter(function (type) {\n        type.selected = false;\n        return kModelHelper.isCompatible(type, startPort.eContainer().eContainer()) &&\n                kModelHelper.isCompatible(type, endPort.eContainer().eContainer());\n      }), 'name');\n\n      if ($scope.types.length > 0) {\n        $scope.types[0].selected = true;\n        selected = $scope.types[0];\n      }\n\n      $scope.isValid = function () {\n        for (var i=0; i < $scope.instances.length; i++) {\n          if ($scope.instances[i].selected) {\n            return true;\n          }\n        }\n\n        for (i=0; i < $scope.types.length; i++) {\n          if ($scope.types[i].selected) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      $scope.select = function (chan) {\n        if (!chan.selected) {\n          $scope.instances.forEach(function (elem) {\n            if (chan.path() !== elem.path() && elem.selected) {\n              elem.selected = false;\n            }\n          });\n          $scope.types.forEach(function (elem) {\n            if (chan.path() !== elem.path() && elem.selected) {\n              elem.selected = false;\n            }\n          });\n          chan.selected = !chan.selected;\n          selected = chan;\n        }\n      };\n\n      $scope.confirm = function () {\n        var chanInstance;\n        if (selected.getRefInParent() === 'typeDefinitions') {\n                // selected elem is a TypeDefinition => create an instance\n          chanInstance = kFactory.createChannel();\n          chanInstance.name = 'chan'+parseInt(Math.random()*1000);\n          chanInstance.typeDefinition = selected;\n          chanInstance.started = true;\n          var pos = kFactory.createValue();\n          pos.name = KWE_POSITION;\n          pos.value = JSON.stringify({ x: 100, y: 100 });\n          chanInstance.addMetaData(pos);\n          kInstance.initDictionaries(chanInstance);\n          kEditor.getModel().addHubs(chanInstance);\n        } else {\n          chanInstance = selected;\n        }\n        $uibModalInstance.close(chanInstance);\n      };\n    });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:EditorCtrl\n * @description\n * # EditorCtrl\n * Controller of the editorApp editor\n */\nangular.module('editorApp')\n\t.controller('EditorCtrl', function ($scope, kEditor, ui, uiUtils, kModelHelper, kFactory, kInstance, hotkeys, Notification, KWE_POSITION, KWE_FOLDED) {\n\t\t// init the UI kFactory\n  ui.init();\n\n\t\t// process model to create the instance UIs\n  kEditor.drawModel();\n\n  $scope.dropDroppable = {\n    onDrop: 'onDrop'\n  };\n  $scope.dropOptions = {\n    accept: function (obj) {\n      var accept = false;\n      var pkgPath = obj[0].dataset.pkgPath;\n      var tdefName = obj[0].innerHTML.trim();\n      var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n      var tdef = kModelHelper.findBestVersion(tdefs.array);\n      var type = kModelHelper.getTypeDefinitionType(tdef);\n\n      if (type === 'component') {\n        accept = ui.getDropTarget();\n      } else {\n        accept = true;\n      }\n\n\t\t\t\t// TODO improve to handle TypeDef checks\n      return accept;\n    }\n  };\n\n\t\t/**\n\t\t * Adds a new instance to the model based on the dropped TypeDefinition\n\t\t * @param evt\n\t\t * @param obj\n\t\t */\n  $scope.onDrop = function (evt, obj) {\n    var pkgPath = angular.element(obj.draggable).scope().tdef.pkgPath;\n    var tdefName = angular.element(obj.draggable).scope().tdef.name;\n    var tdefs = kEditor.getModel().select(pkgPath + '/typeDefinitions[name=' + tdefName + ']');\n    var tdef = kModelHelper.findBestVersion(tdefs.array);\n    var type = kModelHelper.getTypeDefinitionType(tdef);\n    var m = ui.editor.transform().localMatrix;\n\n    function preProcess(instance) {\n      instance.typeDefinition = tdef;\n      instance.started = true;\n      var pos = kFactory.createValue();\n      pos.name = KWE_POSITION;\n      var pt = uiUtils.getPointInEditor(ui.mousePos.x, ui.mousePos.y);\n      pos.value = JSON.stringify({\n        x: pt.x - m.e,\n        y: pt.y - m.f\n      });\n      instance.addMetaData(pos);\n      kInstance.initDictionaries(instance);\n    }\n\n    var model = kEditor.getModel();\n    var dropTarget = ui.getDropTarget();\n    var instance, node;\n    switch (type) {\n      case 'node':\n        instance = kFactory.createContainerNode();\n        instance.name = 'node' + parseInt(Math.random() * 1000);\n        preProcess(instance);\n        model.addNodes(instance);\n        if (dropTarget) {\n          node = model.findByPath(dropTarget.attr('data-path'));\n          if (node) {\n            node.addHosts(instance);\n          }\n        }\n        break;\n\n      case 'group':\n        instance = kFactory.createGroup();\n        instance.name = 'group' + parseInt(Math.random() * 1000);\n        preProcess(instance);\n        kInstance.initFragmentDictionaries(instance);\n        model.addGroups(instance);\n        break;\n\n      case 'component':\n        instance = kFactory.createComponentInstance();\n        instance.name = 'comp' + parseInt(Math.random() * 1000);\n        preProcess(instance);\n        if (dropTarget) {\n          node = model.findByPath(dropTarget.attr('data-path'));\n          if (node) {\n            node.addComponents(instance);\n          }\n        } else {\n          Notification.warning({\n            title: 'Add component',\n            message: 'You have to drop components in nodes',\n            delay: 5000\n          });\n        }\n        break;\n\n      case 'channel':\n        instance = kFactory.createChannel();\n        instance.name = 'chan' + parseInt(Math.random() * 1000);\n        preProcess(instance);\n        kInstance.initFragmentDictionaries(instance);\n        model.addHubs(instance);\n        break;\n    }\n\n    ui.setDropTarget(null);\n    return true;\n  };\n\n\t\t/**\n\t\t * Moves selected instances up, right, down, left\n\t\t * @param {String} axis \"up\", \"down\", \"right\", \"left\"\n\t\t * @param {Number} delta number of pixel to offset from current position\n\t\t */\n  function moveInstance(axis, delta) {\n    return function () {\n\t\t\t\t// ui.getSelected().forEach(function (elem) {\n\t\t\t\t//     switch (axis) {\n\t\t\t\t//         case 'up':\n\t\t\t\t//             elem.transform(elem.transform().local + 'T0,-' + delta);\n\t\t\t\t//             break;\n\t\t\t\t//\n\t\t\t\t//         case 'right':\n\t\t\t\t//             elem.transform(elem.transform().local + 'T'+delta+',0');\n\t\t\t\t//             break;\n\t\t\t\t//\n\t\t\t\t//         case 'down':\n\t\t\t\t//             elem.transform(elem.transform().local + 'T0,' + delta);\n\t\t\t\t//             break;\n\t\t\t\t//\n\t\t\t\t//         case 'left':\n\t\t\t\t//             elem.transform(elem.transform().local + 'T-'+delta+',0');\n\t\t\t\t//             break;\n\t\t\t\t//     }\n\t\t\t\t// });\n      var selected = ui.getSelectedPaths();\n      if (selected) {\n        selected.forEach(function (path) {\n          if (path) {\n            var elem = kEditor.getModel().findByPath(path);\n            if (elem && typeof elem.findMetaDataByID === 'function') {\n              var posMeta = elem.findMetaDataByID(KWE_POSITION);\n              if (posMeta) {\n                var pt = JSON.parse(posMeta.value);\n                switch (axis) {\n                  case 'up':\n                    pt.y -= delta;\n                    break;\n\n                  case 'right':\n                    pt.x += delta;\n                    break;\n\n                  case 'down':\n                    pt.y += delta;\n                    break;\n\n                  case 'left':\n                    pt.x -= delta;\n                    break;\n                }\n                posMeta.value = JSON.stringify(pt);\n              }\n            }\n          }\n        });\n      }\n    };\n  }\n\n  hotkeys.bindTo($scope).add({\n    combo: 'f',\n    description: 'Fold/Unfold selected node',\n    callback: function () {\n      var selected = ui.getSelectedPaths();\n      if (selected) {\n        selected.forEach(function (path) {\n          if (path) {\n            var elem = kEditor.getModel().findByPath(path);\n            if (kModelHelper.getTypeDefinitionType(elem.typeDefinition) === 'node') {\n              var foldMeta = elem.findMetaDataByID(KWE_FOLDED);\n              if (!foldMeta) {\n                foldMeta = kFactory.createValue();\n                foldMeta.name = KWE_FOLDED;\n                foldMeta.value = true;\n                elem.addMetaData(foldMeta);\n              } else {\n                var val = kModelHelper.isTruish(foldMeta.value);\n                foldMeta.value = !val;\n              }\n            }\n          }\n        });\n      }\n    }\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'up',\n    description: 'Move the selected instances 1 pixel up',\n    callback: moveInstance('up', 1)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+up',\n    description: 'Move the selected instances 15 pixel up',\n    callback: moveInstance('up', 15)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'right',\n    description: 'Move the selected instances 1 pixel right',\n    callback: moveInstance('right', 1)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+right',\n    description: 'Move the selected instances 15 pixel right',\n    callback: moveInstance('right', 15)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'down',\n    description: 'Move the selected instances 1 pixel down',\n    callback: moveInstance('down', 1)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+down',\n    description: 'Move the selected instances 15 pixel down',\n    callback: moveInstance('down', 15)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'left',\n    description: 'Move the selected instances 1 pixel left',\n    callback: moveInstance('left', 1)\n  });\n\n  hotkeys.bindTo($scope).add({\n    combo: 'ctrl+left',\n    description: 'Move the selected instances 15 pixel left',\n    callback: moveInstance('left', 15)\n  });\n});\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .component('tdefDetail', {\n      templateUrl: 'app/libraries/tdef-detail.html',\n      bindings: {\n        tdef: '<',\n        versions: '<',\n        disabled: '<',\n        onVersionChanged: '&',\n        onAddDusToModel: '&',\n      },\n      controller: TdefDetailController\n    });\n\n  TdefDetailController.$inject = ['$q', 'kRegistry'];\n\n  function TdefDetailController($q, kRegistry) {\n    var ctrl = this;\n\n    ctrl.versions = null;\n    ctrl.selectedVersion = null;\n    ctrl.baseUrl = kRegistry.getUrl();\n    ctrl.$onChanges = $onChanges;\n    ctrl.changeVersion = changeVersion;\n    ctrl.addDusToModel = addDusToModel;\n\n    function $onChanges(changes) {\n      if (changes.versions && changes.versions.currentValue) {\n        ctrl.selectedVersion = ctrl.versions.find(function (tdef) {\n          return ctrl.tdef.version === tdef.version;\n        });\n      }\n    }\n\n    function changeVersion() {\n      if (!ctrl.disabled) {\n        ctrl.onVersionChanged({ tdef: ctrl.selectedVersion });\n      }\n    }\n\n    function addDusToModel(dus) {\n      if (!ctrl.disabled) {\n        ctrl.onAddDusToModel({ dus: dus });\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('libraries', {\n        parent: 'app',\n        url: '/libs',\n        views: {\n          'content@': {\n            templateUrl: 'app/libraries/libraries.html',\n            controller: 'LibrariesCtrl',\n            controllerAs: 'vm'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:LibrariesCtrl\n * @description\n * # LibrariesCtrl\n * Controller of the editorApp registry libraries page\n */\nangular.module('editorApp')\n  .controller('LibrariesCtrl', function ($q, $uibModal, kRegistry, kEditor, kFactory, Notification) {\n    var vm = this;\n    vm.namespaces = [];\n    vm.tdefs = [];\n    vm.selectNs = selectNs;\n    vm.selectTdef = selectTdef;\n    vm.tdefDetail = null;\n    vm.changeTdefVersion = changeTdefVersion;\n    vm.addDusToModel = addDusToModel;\n\n    // initial process: retrieve all namespaces from registry\n    kRegistry.namespace.all()\n      .then(function (namespaces) {\n        vm.namespaces = namespaces.map(function (ns) {\n          if (ns.name === 'kevoree') {\n            ns.active = true;\n          } else {\n            ns.active = false;\n          }\n          return ns;\n        });\n      })\n      .then(updateTdefs);\n\n    function updateTdefs() {\n      vm.tdefs = null;\n      vm.tdefDetail = null;\n      vm.tdefDetailVersions = null;\n      var activeNs = vm.namespaces.find(function (ns) {\n        return ns.active;\n      });\n      if (activeNs) {\n        return getTdefsByNamespace(activeNs)\n          .then(function () {\n            return getTdefVersions(vm.tdefDetail);\n          })\n          .then(function () {\n            return getTdefDus(vm.tdefDetail);\n          });\n      } else {\n        return null;\n      }\n    }\n\n    function getTdefsByNamespace(namespace) {\n      return kRegistry.tdef.getLatestsByNamespace(namespace.name)\n        .then(function (tdefs) {\n          vm.tdefs = tdefs.map(function (tdef, i) {\n            if (i === 0) {\n              tdef.active = true;\n              vm.tdefDetail = tdef;\n            } else {\n              tdef.active = false;\n            }\n            return tdef;\n          });\n        });\n    }\n\n    function getTdefVersions(tdef) {\n      if (tdef) {\n        return kRegistry.tdef.getAllByNamespaceAndName(tdef.namespace, tdef.name)\n          .then(function (tdefs) {\n            vm.tdefDetailVersions = tdefs;\n          });\n      } else {\n        return null;\n      }\n    }\n\n    function getTdefDus(tdef) {\n      if (tdef) {\n        return $q.all([\n          kRegistry.du.getReleases(tdef.namespace, tdef.name, tdef.version),\n          kRegistry.du.getLatests(tdef.namespace, tdef.name, tdef.version)\n        ]).then(function (results) {\n          vm.tdefDetail.releases = transformDUS(results[0]);\n          vm.tdefDetail.latests = transformDUS(results[1]);\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function selectNs(nsClicked) {\n      vm.disabled = true;\n      vm.namespaces.forEach(function (ns) {\n        if (ns.name === nsClicked.name) {\n          ns.active = !ns.active;\n        } else {\n          ns.active = false;\n        }\n      });\n      updateTdefs()\n        .then(function () {\n          vm.disabled = false;\n        });\n    }\n\n    function selectTdef(tdefClicked) {\n      vm.disabled = true;\n      vm.tdefDetail = null;\n      vm.tdefDetailVersions = null;\n      vm.tdefs.forEach(function (tdef) {\n        if (tdef.name === tdefClicked.name) {\n          tdef.active = !tdef.active;\n        } else {\n          tdef.active = false;\n        }\n      });\n      vm.tdefDetail = vm.tdefs.find(function (tdef) {\n        return tdef.active;\n      });\n      changeTdefVersion(vm.tdefDetail)\n        .then(function () {\n          vm.disabled = false;\n        });\n    }\n\n    function transformDUS(dus) {\n      dus.sort(function (a, b) {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return dus.map(function (du) {\n        du.active = false;\n        return du;\n      });\n    }\n\n    function changeTdefVersion(tdef) {\n      if (tdef) {\n        vm.tdefDetail = tdef;\n        return getTdefVersions(tdef)\n          .then(function () {\n            return getTdefDus(tdef);\n          });\n      } else {\n        return $q.resolve();\n      }\n    }\n\n    function addDusToModel(dus) {\n      var model = kEditor.getModel();\n      var tdef = model.select('/packages['+vm.tdefDetail.namespace+']/typeDefinitions[name='+vm.tdefDetail.name+',version='+vm.tdefDetail.version+']').array[0];\n      if (tdef) {\n        $uibModal.open({\n          templateUrl: 'app/libraries/dus.modal.html',\n          size: 'md',\n          resolve: {\n            tdef: function () {\n              return vm.tdefDetail;\n            },\n            currentDus: function () {\n              return tdef.deployUnits.array;\n            },\n            dus: function () {\n              return dus;\n            }\n          },\n          controller: 'DusModalController as vm'\n        }).result.then(function () {\n          // delete the previous deployUnits of the typeDef\n          tdef.deployUnits.array = [];\n          mergeDUSInModel(tdef, dus);\n          Notification.success({\n            title: 'Add to model',\n            message: 'DeployUnits successfully added to <strong>'+tdef.eContainer().name+'.'+tdef.name+'/'+tdef.version+'</strong>'\n          });\n        });\n      } else {\n        // no trace of typeDef in current model\n        var pkg = model.findPackagesByID(vm.tdefDetail.namespace);\n        if (!pkg) {\n          // namespace is not in model yet: add it\n          pkg = kFactory.createPackage().withName(vm.tdefDetail.namespace);\n          model.addPackages(pkg);\n        }\n        pkg.addTypeDefinitions(vm.tdefDetail.model);\n        tdef = model.select('/packages['+vm.tdefDetail.namespace+']/typeDefinitions[name='+vm.tdefDetail.name+',version='+vm.tdefDetail.version+']').array[0];\n        mergeDUSInModel(tdef, dus);\n        Notification.success({\n          title: 'Add to model',\n          message: '<strong>'+tdef.eContainer().name+'.'+tdef.name+'/'+tdef.version+'</strong> successfully added to model'\n        });\n      }\n    }\n\n    function mergeDUSInModel(tdef, dus) {\n      dus.forEach(function (du) {\n        if (!du.error) {\n          // add DeployUnits to package\n          tdef.eContainer().addDeployUnits(du.model);\n          // add DeployUnits to typedef\n          tdef.addDeployUnits(du.model);\n        }\n      });\n    }\n  });\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .component('klist', {\n      templateUrl: 'app/libraries/klist.html',\n      bindings: {\n        parent: '@', // @ for string constant\n        title: '@',\n        placeholder: '@',\n        props: '<', // < for one-way binding\n        elems: '<', // = for two-way binding\n        onSelect: '&', // & for output func\n        disabled: '<'\n      },\n      controller: KListController,\n    });\n\n  function KListController() {\n    var ctrl = this;\n\n    if (!angular.isDefined(ctrl.props))      { ctrl.props = []; }\n    if (!angular.isDefined(ctrl.selectable)) { ctrl.selectable = true; }\n\n    ctrl.select = function (elem) {\n      if (!ctrl.disabled) {\n        ctrl.onSelect({ elem: elem });\n      }\n    };\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .controller('DusModalController', DusModalController);\n\n  DusModalController.$inject = ['tdef', 'currentDus', 'dus'];\n\n  function DusModalController(tdef, currentDus, dus) {\n    var vm = this;\n\n    vm.tdef = tdef;\n    vm.dus = dus;\n    vm.currentDus = currentDus;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .component('dusInstaller', {\n      templateUrl: 'app/libraries/dus-installer.html',\n      bindings: {\n        tag: '@',\n        dus: '<',\n        disabled: '<',\n        onAddToModel: '&'\n      },\n      controller: DusInstallerController,\n    });\n\n  DusInstallerController.$inject = [];\n\n  function DusInstallerController() {\n    var ctrl = this;\n\n    ctrl.addToModel = addToModel;\n\n    function addToModel() {\n      if (!ctrl.disabled) {\n        ctrl.onAddToModel({ dus: ctrl.dus });\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('kevscript', {\n        parent: 'app',\n        url: '/kevscript',\n        views: {\n          'content@': {\n            templateUrl: 'app/kevscript/kevscript.html',\n            controller: 'KevScriptCtrl'\n          }\n        }\n      });\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name editorApp.controller:KevScriptCtrl\n * @description\n * # KevScriptCtrl\n * Controller of the editorApp kevscript editor page\n */\nangular.module('editorApp')\n  .controller('KevScriptCtrl', function ($rootScope, $scope, $uibModal, $timeout, $state, hotkeys, kEditor, kScript, saveFile, storage, Notification) {\n    var editor = null;\n\n    function saveToFile(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      $uibModal\n        .open({\n          templateUrl: 'app/components/util/filename.modal.html',\n          size: 'sm',\n          scope: $scope,\n          controller: function ($scope, $uibModalInstance) {\n            $scope.title = 'Save Kevscript';\n            $scope.body = 'Would you like to save your current KevScript to a file?';\n            $scope.filename = 'script' + (Math.floor(Math.random() * (1000 - 100)) + 100);\n\n            $scope.save = function () {\n              function endsWith(str, suffix) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n              }\n              var suffix = '.kevs';\n              if (endsWith($scope.filename, suffix)) {\n                $scope.filename = $scope.filename.substr(0, $scope.filename.length - '.kevs'.length);\n              }\n              saveFile.save($scope.kevscript, $scope.filename, suffix, 'kevscript');\n              $uibModalInstance.close();\n            };\n          }\n        })\n        .result.finally(function () {\n          if (editor) {\n            editor.focus();\n          }\n        });\n    }\n\n    function openFromFile(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      jQuery('input#kevscript-upload').click();\n    }\n\n    $scope.kevscript = '';\n    $scope.processing = false;\n    $scope.message = null;\n    $scope.ctxVars = {};\n    $scope.error = null;\n    $scope.lintWarnings = [];\n    $scope.linting = false;\n    $scope.typing = false;\n    $scope.editorState = 'idle';\n    $scope.editorOptions = {\n      mode: 'kevscript',\n      theme: 'kevscript',\n      lineWrapping: true,\n      lineNumbers: true,\n      styleActiveLine: true,\n      extraKeys: {\n        'Shift-Enter': function () {\n          $scope.merge();\n        },\n        'Ctrl-Space': function (cm) {\n          cm.showHint({ hint: CodeMirror.hint.kevscript, completeSingle: false, alignWithWord: false });\n        },\n        'Ctrl-S': saveToFile,\n        'Ctrl-O': openFromFile\n      },\n      gutters: ['CodeMirror-lint-markers'],\n      lint: {\n        getAnnotations: CodeMirror.lint.kevscript($scope.ctxVars),\n        async: true\n      }\n    };\n\n    $scope.dndLoad = function (filename, data) {\n      if (filename.endsWith('.kevs')) {\n        $scope.kevscript = data;\n      } else {\n        $scope.kevscript = '';\n        $rootScope.dndLoad(filename, data);\n      }\n    };\n\n    $scope.editorLoaded = function (_editor) {\n      editor = _editor;\n      CodeMirror.hint.kevscript.async = true;\n      editor.on('beforeChange', function () {\n        $timeout(function () {\n          $scope.editorState = 'typing';\n          $scope.error = null;\n          $scope.lintWarnings = [];\n        });\n      });\n      editor.on('lintStart', function () {\n        $timeout(function () {\n          $scope.editorState = 'linting';\n        });\n      });\n      editor.on('lintDone', function (error, lintErrors, model) {\n        $timeout(function () {\n          $scope.editorState = 'idle';\n          $scope.model = model;\n          $scope.error = error || lintErrors.filter(function (err) {\n            return err.severity === 'error';\n          })[0];\n          $scope.lintWarnings = lintErrors\n            .filter(function (error) {\n              return error.severity === 'warning';\n            });\n          $scope.linting = false;\n        });\n      });\n      editor.focus();\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.uploadKevscript = function () {\n      var kevscriptUpload = jQuery('#kevscript-upload');\n      kevscriptUpload.on('change', function (event) {\n        var reader = new FileReader();\n        reader.onloadend = function () {\n          $scope.kevscript = editor.setValue(reader.result);\n        };\n        reader.readAsBinaryString(event.target.files[0]);\n      });\n      kevscriptUpload.trigger('click');\n    };\n\n    $scope.closeMessage = function () {\n      $scope.message = null;\n    };\n\n    $scope.isMergeable = function () {\n      return $scope.editorState === 'idle' &&\n        !$scope.processing &&\n        !$scope.error &&\n        $scope.kevscript.trim().length > 0;\n    };\n\n    $scope.clearCtxVars = function () {\n      Object.keys($scope.ctxVars).forEach(function (key) {\n        delete $scope.ctxVars[key];\n      });\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.addCtxVar = function (ctxVar) {\n      if (ctxVar.key && ctxVar.value) {\n        $scope.ctxVars[ctxVar.key] = ctxVar.value;\n        ctxVar.key = '';\n        ctxVar.value = '';\n        CodeMirror.signal(editor, 'change', editor);\n      }\n    };\n\n    $scope.onFileLoaded = function (filename, data) {\n      $scope.kevscript = data;\n    };\n\n    $scope.removeCtxVar = function (key) {\n      delete $scope.ctxVars[key];\n      CodeMirror.signal(editor, 'change', editor);\n    };\n\n    $scope.merge = function () {\n      if (!$scope.processing) {\n        $scope.processing = true;\n        $timeout(function () {\n          kEditor.setModel($scope.model, function (err) {\n            $scope.processing = false;\n            if (err) {\n              $scope.error = err;\n            } else {\n              editor.setValue('');\n              Notification.success({\n                title: 'KevScript',\n                message: 'Successfully merged'\n              });\n            }\n          });\n        });\n      }\n    };\n\n    $scope.model2kevs = function () {\n      try {\n        var modelStr = kScript.parseModel(kEditor.getModel());\n        editor.setValue(modelStr);\n      } catch (err) {\n        console.warn('[kevscript.controller.model2kevs()] Error creating Kevscript from model'); // eslint-disable-line\n        console.error(err.stack); // eslint-disable-line\n        Notification.error({\n          title: 'KevScript parser',\n          message: 'Unable to convert current model to KevScript',\n          delay: 5000\n        });\n      }\n    };\n\n    $scope.save = saveToFile;\n    $scope.open = openFromFile;\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+o',\n        description: 'Open a KevScript from a file',\n        callback: $scope.open\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'ctrl+s',\n        description: 'Save current KevScript to a file',\n        callback: $scope.save\n      });\n\n    hotkeys.bindTo($scope)\n      .add({\n        combo: 'shift+enter',\n        description: 'Merges current KevScript to model',\n        callback: function () {\n          if ($scope.isMergeable()) {\n            $scope.merge();\n          }\n        }\n      });\n\n    $scope.toggleShortcutHelp = function () {\n      hotkeys.toggleCheatSheet();\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n    .factory('util', function () {\n        /**\n         *\n         * @param val\n         * @returns {boolean}\n         */\n      function isTruish(val) {\n        return (val === 'true' || val > 0 || val === true);\n      }\n\n        /**\n         * @param {number} length optional\n         * @returns {string}\n         */\n      function randomString(length) {\n        length = length || 5;\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (var i=0; i < length; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n      }\n\n        /**\n         * @param {number} min val optional (default: 0)\n         * @param {number} max val optional (default: 65535)\n         * @returns {number}\n         */\n      function randomNumber(min, max) {\n        if (typeof min !== 'number') { min = 0; }\n        if (typeof max !== 'number') { max = 65535; }\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n\n        /**\n         * @returns {boolean}\n         */\n      function randomBoolean() {\n        return Math.random() < 0.5;\n      }\n\n        /**\n         * @param {array}\n         * @returns {array} unique (using \"===\" check) items array\n         */\n      function arrayUnique(array) {\n        var a = array.concat();\n        for (var i=0; i<a.length; ++i) {\n          for (var j=i+1; j<a.length; ++j) {\n            if (a[i] === a[j]) {\n              a.splice(j--, 1);\n            }\n          }\n        }\n        return a;\n      }\n\n      return {\n        isTruish: isTruish,\n        randomString: randomString,\n        randomNumber: randomNumber,\n        randomBoolean: randomBoolean,\n        arrayUnique: arrayUnique\n      };\n    });\n","'use strict';\n\nangular.module('editorApp')\n    .filter('trustHtml', function ($sce) {\n      return function (text) {\n        return $sce.trustAsHtml(text);\n      };\n    });\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .component('truncate', {\n      template: '<p class=\"text-justify\" ng-bind-html=\"$ctrl.trustedHtml\"></p><a ng-if=\"$ctrl.expandable\" href ng-click=\"$ctrl.toggle()\">{{ $ctrl.toggleText }}</a>',\n      bindings: {\n        content: '<',\n        length: '<'\n      },\n      controller: TruncateController\n    });\n\n  TruncateController.$inject = ['$sce'];\n\n  function TruncateController($sce) {\n    var ctrl = this;\n\n    ctrl.expanded = false;\n    ctrl.expandable = false;\n    ctrl.toggleText = 'Read more';\n    ctrl.$onChanges = $onChanges;\n    ctrl.toggle = toggle;\n    ctrl.expand = expand;\n    ctrl.reduce = reduce;\n\n    function $onChanges(changes) {\n      if (changes.content.currentValue) {\n        ctrl.expanded = true;\n        if (!angular.isNumber(ctrl.length)) {\n          ctrl.length = 200;\n        }\n        ctrl.expandable = ctrl.content.length > ctrl.length;\n        ctrl.toggleText = 'Reduce';\n        reduce();\n      }\n    }\n\n    function reduce() {\n      var modifiedContent = ctrl.content.substr(0, ctrl.length);\n      if (ctrl.expandable) {\n        modifiedContent += '...';\n      }\n      ctrl.expanded = false;\n      ctrl.toggleText = 'Read more';\n      ctrl.trustedHtml = $sce.trustAsHtml(modifiedContent);\n    }\n\n    function expand() {\n      ctrl.expanded = true;\n      ctrl.toggleText = 'Reduce';\n      ctrl.trustedHtml = $sce.trustAsHtml(ctrl.content);\n    }\n\n    function toggle() {\n      if (ctrl.expanded) {\n        reduce();\n      } else {\n        expand();\n      }\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n    .factory('saveFile', function () {\n      return {\n            /**\n             *\n             * @param data data to put into file\n             * @param filename file name without extension (null will use current time in milliseconds)\n             * @param ext file extension starting with a dot (ie. \".json\")\n             * @param type file mimetype (if none given: \"text/plain\")\n             */\n        save: function (data, filename, ext, type) {\n          filename = filename || 'model'+(Math.floor(Math.random() * (1000 - 100)) + 100);\n          ext = ext || '.txt';\n          type = type || 'text/plain';\n\n          var kevsAsBlob = new Blob([data], { type: type });\n\n          var downloadLink = document.createElement('a');\n          downloadLink.download = filename + ext;\n          downloadLink.innerHTML = 'Download File';\n          if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n                    // Chrome allows the link to be clicked\n                    // without actually adding it to the DOM.\n            downloadLink.href = URL.createObjectURL(kevsAsBlob);\n          } else {\n                    // Firefox requires the link to be added to the DOM\n                    // before it can be clicked.\n            downloadLink.href = URL.createObjectURL(kevsAsBlob);\n            downloadLink.onclick = function (e) {\n              document.body.removeChild(e.target);\n            };\n            downloadLink.style.display = 'none';\n            document.body.appendChild(downloadLink);\n          }\n\n          downloadLink.click();\n        }\n      };\n    });\n","'use strict';\n\nangular.module('editorApp').directive('onData', function($parse) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: function(scope, element, attrs) {\n      var fn = $parse(attrs.onData);\n\n      element.on('change', function(evt) {\n        var reader = new FileReader();\n\n        reader.onload = function(onLoadEvt) {\n          scope.$apply(function() {\n            fn(scope, {\n              $data: onLoadEvt.target.result,\n              $name: evt.target.files[0].name\n            });\n          });\n        };\n\n        try {\n          reader.readAsText(evt.target.files[0]);\n        } catch (ignore) { /* noop */ }\n      });\n\n      element.on('click', function() {\n        this.value = null;\n      });\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .filter('namingPattern', function (util) {\n    var rInt = new RegExp('\\\\{randomInt(:(\\\\d+):(\\\\d+))?\\\\}', 'g'),\n      rStr = new RegExp('\\\\{randomStr(:(\\\\d+))?\\\\}', 'g');\n\n    return function (text, map) {\n      if (typeof text === 'string') {\n        if (typeof map === 'object') {\n          Object.keys(map).forEach(function (key) {\n            text = text.replace(new RegExp('\\{'+key+'\\}', 'g'), map[key]);\n          });\n        }\n\n        var rIntMatch = rInt.exec(text);\n        var rIntVal = util.randomNumber();\n        if (rIntMatch && rIntMatch[2] && rIntMatch[3]) {\n          rIntVal = util.randomNumber(parseInt(rIntMatch[2]), parseInt(rIntMatch[3]));\n        }\n        var rStrMatch = rStr.exec(text);\n        var rStrVal = util.randomString();\n        if (rStrMatch && rStrMatch[2]) {\n          rStrVal = util.randomString(parseInt(rStrMatch[2]));\n        }\n        return text.replace(rInt, rIntVal)\n                   .replace(rStr, rStrVal);\n      } else {\n        throw new Error('namingPattern filter must be applied on string only.');\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kModelHelper', function (kFactory, KWE_POSITION, KWE_TAG, KWE_SELECTED, KWE_FOLDED) {\n    function genNewName(instance, type, count) {\n      if (typeof count === 'undefined') {\n        count = 0;\n      }\n      var newName = instance.name + '_' + count;\n      var conflictInst;\n      switch (type) {\n        case 'node':\n          conflictInst = instance.eContainer().findNodesByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'group':\n          conflictInst = instance.eContainer().findGroupsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'channel':\n          conflictInst = instance.eContainer().findHubsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n\n        case 'component':\n          conflictInst = instance.eContainer().findComponentsByID(newName);\n          if (conflictInst) {\n            newName = genNewName(instance, type, ++count);\n          }\n          break;\n      }\n      return newName;\n    }\n\n    return {\n      /**\n       *\n       * @param pkg\n       * @returns {*}\n       */\n      genPkgName: function (pkg) {\n        var name = pkg.name;\n\n        function walk(elem) {\n          if (elem.eContainer()) {\n            name = elem.name + '.' + name;\n            walk(elem.eContainer());\n          }\n        }\n        walk(pkg.eContainer());\n        return name;\n      },\n\n      getFqn: function (tdef) {\n        var pkg = this.genPkgName(tdef.eContainer());\n        if (pkg === 'org.kevoree.library') {\n          pkg = '';\n        } else {\n          pkg += '.';\n        }\n        return pkg + tdef.name + '/' + tdef.version;\n      },\n\n      /**\n       *\n       * @param tdef\n       * @returns {*}\n       */\n      getTypeDefinitionType: function (tdef) {\n        if (tdef) {\n          switch (tdef.metaClassName()) {\n            case 'org.kevoree.NodeType':\n              return 'node';\n\n            case 'org.kevoree.GroupType':\n              return 'group';\n\n            case 'org.kevoree.ComponentType':\n              return 'component';\n\n            case 'org.kevoree.ChannelType':\n              return 'channel';\n          }\n        }\n        return null;\n      },\n\n      /**\n       *\n       * @param tdefs\n       * @returns {*}\n       */\n      findBestVersion: function (tdefs) {\n        var best = tdefs[0];\n        for (var i=1; i < tdefs.length; i++) {\n          if (parseInt(best.version, 10) <= parseInt(tdefs[i].version, 10)) {\n            best = tdefs[i];\n          }\n        }\n        return best;\n      },\n\n      /**\n       *\n       * @param tdef\n       * @returns {Array}\n       */\n      getPlatforms: function (tdef) {\n        var platforms = [];\n\n        if (tdef) {\n          tdef.deployUnits.array.forEach(function (du) {\n            var platform = du.findFiltersByID('platform');\n            if (platform && platforms.indexOf(platform.value) === -1) {\n              platforms.push(platform.value);\n            }\n          });\n        }\n\n        return platforms;\n      },\n\n      /**\n       * Returns the list of KWE_TAG from the instance if any\n       * @param instance\n       * @returns {array}\n       */\n      getTags: function (instance) {\n        var tags = [];\n        var meta = instance.findMetaDataByID(KWE_TAG);\n        if (meta && meta.value.length > 0) {\n          tags = meta.value.split(',');\n        }\n        return tags;\n      },\n\n      /**\n       *\n       * @param node\n       * @returns {number}\n       */\n      getNodeTreeHeight: function getNodeTreeHeight(node) {\n        if (node.hosts.size() === 0) {\n          return 0;\n        }\n\n        var heights = node.hosts.array.map(getNodeTreeHeight);\n        var max = 0;\n        heights.forEach(function (height) {\n          if (height > max) {\n            max = height;\n          }\n        });\n        return max + 1;\n      },\n\n      /**\n       * Returns all the node types of the given model\n       */\n      getNodeTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.NodeType';\n        });\n      },\n\n      /**\n       * Returns all the group types of the given model\n       */\n      getGroupTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.GroupType';\n        });\n      },\n\n      /**\n       * Returns all the component types of the given model\n       */\n      getComponentTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.ComponentType';\n        });\n      },\n\n      /**\n       * Returns all the channel types of the given model\n       */\n      getChannelTypes: function (model) {\n        return model.select('**/typeDefinitions[*]').array.filter(function (tdef) {\n          return tdef.metaClassName() === 'org.kevoree.ChannelType';\n        });\n      },\n\n      /**\n       *\n       * @param nodes\n       * @returns {Array}\n       */\n      getNodeTreeHeights: function (nodes) {\n        var heights = [];\n        nodes.forEach(function (node) {\n          var height = this.getNodeTreeHeight(node);\n          if (heights.indexOf(height) === -1) {\n            heights.push(height);\n          }\n        }.bind(this));\n        return heights;\n      },\n\n      /**\n       *\n       * @param comp\n       * @returns {number}\n       */\n      getCompDepth: function (comp) {\n        var depth = 0;\n\n        function walk(node) {\n          if (node.host) {\n            depth += 1;\n            walk(node.host);\n          }\n        }\n        walk(comp.eContainer());\n\n        return depth;\n      },\n\n      getNbInstances: function (model) {\n        return this.getNbNodes(model) +\n          this.getNbGroups(model) +\n          this.getNbChannels(model) +\n          this.getNbComponents(model);\n      },\n\n      getNbNodes: function (model) {\n        return model.nodes.array.length;\n      },\n\n      getNbGroups: function (model) {\n        return model.groups.array.length;\n      },\n\n      getNbChannels: function (model) {\n        return model.hubs.array.length;\n      },\n\n      getNbComponents: function (model) {\n        var count = 0;\n        model.nodes.array.forEach(function (node) {\n          count += node.components.array.length;\n        });\n        return count;\n      },\n\n      /**\n       * Returns the highest node instance containing this component or node\n       * @param instance ContainerNode\n       */\n      getHighestNode: function (instance) {\n        switch (instance.getRefInParent()) {\n          case 'components':\n            return this.getHighestNode(instance.eContainer());\n\n          case 'hosts':\n            return this.getHighestNode(instance.host);\n\n          case 'nodes':\n            if (instance.host) {\n              return this.getHighestNode(instance.host);\n            } else {\n              return instance;\n            }\n        }\n      },\n\n      /**\n       * Checks if tdefSrc is compatible with this node instance\n       * @param tdef\n       * @param node\n       */\n      isCompatible: function (tdef, node) {\n        if (tdef && node) {\n          if (tdef.select('metaData[name=virtual]').array.length > 0) {\n            // tdef is virtual, so it is compatible\n            return true;\n\n          } else {\n            var nodePlatforms = [];\n            node.typeDefinition.deployUnits.array\n              .forEach(function (du) {\n                var filter = du.findFiltersByID('platform');\n                if (filter) {\n                  nodePlatforms.push(filter.value);\n                }\n              });\n\n            for (var i = 0; i < nodePlatforms.length; i++) {\n              if (tdef.select('deployUnits[name=*]/filters[name=platform,value=' + nodePlatforms[i] + ']').array.length > 0) {\n                return true;\n              }\n            }\n          }\n        }\n        return false;\n      },\n\n      /**\n       * Tells whether or not a binding is already made between this port and chan\n       * @param port\n       * @param chan\n       * @returns {boolean}\n       */\n      isAlreadyBound: function (port, chan) {\n        var bound = false;\n        if (port) {\n          for (var i = 0; i < port.bindings.array.length; i++) {\n            if (port.bindings.array[i].hub && (port.bindings.array[i].hub.path() === chan.path())) {\n              return true;\n            }\n          }\n        }\n        return bound;\n      },\n\n      /**\n       * Returns true if the given value is truish (means that it is close to say \"true\")\n       * @param val\n       * @returns {boolean}\n       */\n      isTruish: function (val) {\n        return (val === true || val === 'true' || val > 0);\n      },\n\n      /**\n       * Returns true if the given instance dictionaries are valid\n       * @param instance\n       * @returns {boolean}\n       */\n      isValid: function (instance) {\n        if (instance.typeDefinition &&\n          instance.typeDefinition.dictionaryType &&\n          instance.typeDefinition.dictionaryType.attributes.array.length > 0) {\n          if (instance.dictionary &&\n            instance.dictionary.values.array.length > 0) {\n            for (var i = 0; i < instance.dictionary.values.array.length; i++) {\n              var val = instance.dictionary.values.array[i];\n              var attr = instance.typeDefinition.dictionaryType.findAttributesByID(val.name);\n              if (!this.isValueValid(val, attr)) {\n                return false;\n              }\n            }\n          } else {\n            for (var j = 0; j < instance.typeDefinition.dictionaryType.attributes.array.length; j++) {\n              if (!this.isTruish(instance.typeDefinition.dictionaryType.attributes.array[j].optional)) {\n                return false;\n              }\n            }\n          }\n        }\n\n        return true;\n      },\n\n      /**\n       *\n       *\n       */\n      isValueValid: function (val, attr) {\n        if (!this.isTruish(attr.optional)) {\n          if (typeof val.value === 'undefined' || val.value === null || val.value.length === 0) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      isVirtual: function (elem) {\n        if (elem) {\n          if (elem.metaClassName() === 'org.kevoree.ComponentInstance' ||\n              elem.metaClassName() === 'org.kevoree.ContainerNode' ||\n              elem.metaClassName() === 'org.kevoree.Group' ||\n              elem.metaClassName() === 'org.kevoree.Channel') {\n            return this.isVirtual(elem.typeDefinition);\n          } else if (elem.metaClassName() === 'org.kevoree.ComponentType' ||\n              elem.metaClassName() === 'org.kevoree.NodeType' ||\n              elem.metaClassName() === 'org.kevoree.GroupType' ||\n              elem.metaClassName() === 'org.kevoree.ChannelType') {\n            var virtual = elem.findMetaDataByID('virtual');\n            return virtual !== null;\n          } else if (elem.metaClassName() === 'org.kevoree.MBinding') {\n            if (elem.hub) {\n              return this.isVirtual(elem.hub.typeDefinition);\n            }\n          }\n        }\n        return false;\n      },\n\n      /**\n       * @param channel instance\n       * @returns false if channel is only fragmented on one node\n       */\n      isChannelDistributed: function (channel) {\n        var nodes = {};\n\n        channel.bindings.array.forEach(function (binding) {\n          if (binding.port && binding.port.eContainer()) {\n            var comp = binding.port.eContainer();\n            var node = this.getHighestNode(comp);\n            nodes[node.path()] = true;\n          }\n        }.bind(this));\n\n        return Object.keys(nodes).length > 1;\n      },\n\n      isSelected: function (instance) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_SELECTED);\n          if (meta) {\n            return this.isTruish(meta.value);\n          }\n        }\n        return false;\n      },\n\n      isFolded: function (instance) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_FOLDED);\n          if (meta) {\n            return this.isTruish(meta.value);\n          }\n        }\n        return false;\n      },\n\n      setSelected: function (instance, selected) {\n        if (instance && instance.findMetaDataByID) {\n          var meta = instance.findMetaDataByID(KWE_SELECTED);\n          if (!meta) {\n            meta = kFactory.createValue();\n            meta.name = KWE_SELECTED;\n            instance.addMetaData(meta);\n          }\n          meta.value = selected;\n        }\n      },\n\n      setFolded: function (instance, folded) {\n        if (instance) {\n          var meta = instance.findMetaDataByID(KWE_FOLDED);\n          if (!meta) {\n            meta = kFactory.createValue();\n            meta.name = KWE_FOLDED;\n            instance.addMetaData(meta);\n          }\n          meta.value = folded;\n        }\n      },\n\n      isAttributeInType: function (instance, attrName, isFragment) {\n        if (instance.typeDefinition.dictionaryType) {\n          var attr = instance.typeDefinition.dictionaryType.findAttributesByID(attrName);\n          return attr && (attr.fragmentDependant === isFragment);\n        }\n        return false;\n      },\n\n      getSelection: function (model) {\n        return model.select('**/metaData[name=' + KWE_SELECTED + ',value=true]').array.map(function (meta) {\n          return meta.eContainer();\n        });\n      },\n\n      /**\n       *\n       * @param fqn\n       * @returns {string}\n       */\n      fqnToPath: function (fqn) {\n        // check for version\n        fqn = fqn.split('/');\n        var vers;\n        if (fqn.length === 2) {\n          vers = fqn.pop();\n        }\n\n        fqn = fqn[0].split('.');\n        var last = fqn.pop();\n        if (fqn.length === 0) {\n          fqn = 'packages[name=' + last;\n        } else {\n          fqn = 'packages[' + fqn.join(']/packages[') + ']/*[name=' + last;\n        }\n\n        if (vers) {\n          fqn += ',version=' + vers;\n        }\n\n        fqn += ']';\n\n        return fqn;\n      },\n\n      /**\n       *\n       * @param fqn\n       * @returns {string}\n       */\n      pkgFqnToPath: function (fqn) {\n        fqn = fqn.split('.');\n        var last = fqn.pop();\n        if (fqn.length === 0) {\n          return 'packages[' + last + ']';\n        } else {\n          return 'packages[' + fqn.join(']/packages[') + ']/packages[' + last + ']';\n        }\n      },\n\n      /**\n       *\n       * @param instance the instance to clone\n       */\n      clone: function (instance) {\n        var that = this;\n\n        function initClone(clone) {\n          clone.started = instance.started;\n          var instancePosMeta = instance.findMetaDataByID(KWE_POSITION);\n          if (instancePosMeta) {\n            var instancePos = JSON.parse(instancePosMeta.value);\n            var pos = kFactory.createValue();\n            pos.name = KWE_POSITION;\n            pos.value = JSON.stringify({\n              x: instancePos.x + 50,\n              y: instancePos.y + 50\n            });\n            clone.addMetaData(pos);\n          }\n\n          clone.dictionary = that.cloneDictionary(instance.dictionary);\n        }\n\n        var clone;\n        switch (this.getTypeDefinitionType(instance.typeDefinition)) {\n          case 'node':\n            clone = kFactory.createContainerNode();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'node');\n            instance.components.array.forEach(function (comp) {\n              clone.addComponents(that.clone(comp));\n            });\n            instance.hosts.array.forEach(function (subNode) {\n              var clonedNode = that.clone(subNode);\n              instance.eContainer().addNodes(clonedNode);\n              clone.addHosts(clonedNode);\n            });\n            break;\n\n          case 'group':\n            clone = kFactory.createGroup();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'group');\n            break;\n\n          case 'channel':\n            clone = kFactory.createChannel();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'channel');\n            break;\n\n          case 'component':\n            clone = kFactory.createComponentInstance();\n            initClone(clone);\n            clone.typeDefinition = instance.eContainer().eContainer().findByPath(instance.typeDefinition.path());\n            clone.name = genNewName(instance, 'component');\n            break;\n        }\n\n        return clone;\n      },\n\n      /**\n       * @param dic a dictionary\n       */\n      cloneDictionary: function (dic) {\n        var clone = kFactory.createDictionary().withGenerated_KMF_ID('0.0');\n        if (dic) {\n          dic.values.array.forEach(function (val) {\n            var newVal = kFactory.createValue();\n            newVal.name = val.name;\n            newVal.value = val.value;\n            clone.addValues(newVal);\n          });\n        }\n        return clone;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n\t.filter('isCompatible', function (kModelHelper, kEditor) {\n  return function (items, type, nodeName) {\n    if (type === 'component') {\n      return items.filter(function (item) {\n        if (item && item.tdef && nodeName) {\n          var isCompatible = kModelHelper.isCompatible(item.tdef, kEditor.getModel().findNodesByID(nodeName));\n          return isCompatible;\n        } else {\n          return false;\n        }\n      });\n    } else {\n      return items;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('hljs', function () {\n    return {\n      restrict: 'AE',\n      scope: { content: '=' },\n      link: function(scope, element) {\n        // element.addClass('hljs');\n        // element[0].innerHTML = scope.content;\n        hljs.highlightBlock(element[0]);\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('focus', function ($timeout) {\n    return {\n      restrict: 'A',\n      link: function (scope, elem, attrs) {\n        scope.$watch(attrs.focus, function (value) {\n          var delay, show;\n          if (angular.isNumber(value)) {\n            delay = value;\n            show = true;\n          } else {\n            delay = 0;\n            show = Boolean(value);\n          }\n          if (show) {\n            $timeout(function () {\n              elem[0].focus();\n              if (typeof elem[0].select === 'function') {\n                elem[0].select();\n              }\n            }, delay);\n          }\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('dropTarget', function ($parse) {\n    var DND_CLASS = 'dnd-overlay';\n\n    return {\n      restrict: 'A',\n      scope: false,\n      link: function (scope, element, attrs) {\n        var tid;\n        var fn = $parse(attrs.dropTarget);\n        var elem = jQuery(element[0]);\n        var overlay = jQuery('<div class=\"'+DND_CLASS+'\" style=\"display: none;\"><p class=\"center-message\">Drop to load the model</p></div>');\n\n        elem.append(overlay);\n\n        elem.on('dragleave', dragLeaveHandler);\n        elem.on('dragover', dragOverHandler);\n        elem.on('drop', dropHandler);\n\n        scope.$on('$destroy', function() {\n          elem.off('dragleave', dragLeaveHandler);\n          elem.off('dragover', dragOverHandler);\n          elem.off('drop', dropHandler);\n        });\n\n        function dropHandler(event) {\n          var dataTransfer = event.originalEvent.dataTransfer;\n          if (dataTransfer) {\n            if (dataTransfer.files.length) {\n              var file = dataTransfer.files[0];\n              var reader = new FileReader();\n\n              reader.onloadend = function (event) {\n                scope.$apply(function () {\n                  fn(scope, {\n                    $event: event,\n                    $data: event.target.result,\n                    $name: file.name\n                  });\n                });\n              };\n\n              reader.readAsText(file);\n            }\n          }\n\n          event.stopPropagation();\n          event.preventDefault();\n          overlay.hide();\n        }\n\n        function dragOverHandler(event) {\n          clearTimeout(tid);\n          event.stopPropagation();\n          event.preventDefault();\n          overlay.show();\n        }\n\n        function dragLeaveHandler(event) {\n          tid = setTimeout(function () {\n            event.stopPropagation();\n            overlay.hide();\n          }, 200);\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .filter('camelize', function () {\n    return function (text) {\n      if (typeof text === 'string') {\n        return text.replace(/(?:^|[-_])(\\w)/g, function (_, c) {\n          return c ? c.toUpperCase () : '';\n        });\n      } else {\n        throw new Error('Camelize filter must be used on string only');\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('fileread', [function () {\n    return {\n      controller: function ($scope, $element, $attrs) {\n        $element.bind('change', function (event) {\n          var reader = new FileReader();\n          reader.onload = function (loadEvent) {\n            $scope.fileread = loadEvent.target.result;\n            $scope.$eval($attrs.onfileread);\n          };\n          reader.readAsBinaryString(event.target.files[0]);\n        });\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('editorApp')\n\t.service('storage', function () {\n  return {\n    get: function (key, defaultVal) {\n      var val = localStorage.getItem(key);\n      if (val) {\n        return JSON.parse(val).val;\n      } else {\n        return defaultVal;\n      }\n    },\n    set: function (key, val) {\n      localStorage.setItem(key, JSON.stringify({\n        val: val\n      }));\n    },\n    remove: function (key) {\n      localStorage.removeItem(key);\n    },\n    clear: function () {\n      localStorage.clear();\n    },\n    keys: function () {\n      var keys = [];\n      for (var i = 0, len = localStorage.length; i < len; ++i) {\n        keys.push(localStorage.key(i));\n      }\n      return keys;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp').service('kWs', function (kFactory) {\n  function cleanPath(path) {\n    if (!path) {\n      path = '/';\n    } else {\n      if (path.substr(0, 1) !== '/') {\n        path = '/' + path;\n      }\n    }\n    return path;\n  }\n\n  return {\n\n    /**\n     *\n     * @param host\n     * @param port\n     * @param path\n     * @param callback\n     * @returns {WebSocket}\n     */\n    getModel: function (host, port, path, callback) {\n      var answer = false,\n        failed = false,\n        ws = null,\n        timeout = setTimeout(function () {\n          answer = true;\n          failed = true;\n          try {\n            ws.close();\n          } catch (err) { /* ignore */ }\n          var err = new Error('Connection with ws://' + host + ':' + port + path + ' timed out');\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        }, 5000);\n      path = cleanPath(path);\n\n      try {\n        ws = new WebSocket('ws://' + host + ':' + port + path);\n\n        ws.onopen = function () {\n          clearTimeout(timeout);\n          ws.send('pull');\n        };\n\n        ws.onmessage = function (msg) {\n          try {\n            var loader = kFactory.createJSONLoader();\n            var model = loader.loadModelFromString(msg.data).get(0);\n            answer = true;\n            ws.close();\n            setTimeout(function () {\n              // prevent try/catch to catch an error in callback\n              callback(null, model, 'ws://' + host + ':' + port + path);\n            });\n          } catch (err) {\n            clearTimeout(timeout);\n            console.warn('[ws.factory.getModel()] Error parsing model from message:'); // eslint-disable-line\n            console.warn('[ws.factory.getModel()] msg.data=' + msg.data); // eslint-disable-line\n            answer = true;\n            ws.close();\n            callback(new Error('Unable to load received model from ws://' + host + ':' + port + path), null, 'ws://' + host + ':' + port + path);\n          }\n        };\n\n        ws.onerror = function (err) {\n          failed = true;\n          err = new Error('Unable to connect to ws://' + host + ':' + port + path);\n          clearTimeout(timeout);\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        };\n\n        ws.onclose = function () {\n          if (!answer && !failed) {\n            clearTimeout(timeout);\n            var err = new Error('Connection with ws://' + host + ':' + port + path + ' closed');\n            callback(err, null, 'ws://' + host + ':' + port + path);\n          }\n        };\n      } catch (err) {\n        clearTimeout(timeout);\n        callback(new Error('Unable to load received model from ws://' + host + ':' + port + path), null, 'ws://' + host + ':' + port + path);\n      }\n\n      return ws;\n    },\n\n    /**\n     *\n     * @param model\n     * @param host\n     * @param port\n     * @param path\n     * @param callback\n     * @returns {WebSocket|null}\n     */\n    pushModel: function (model, host, port, path, callback) {\n      var modelStr,\n        sent = false,\n        failed = false,\n        ws = null,\n        timeout = setTimeout(function () {\n          sent = true;\n          failed = true;\n          try {\n            ws.close();\n          } catch (err) { /* ignore */ }\n          var err = new Error('Connection with ws://' + host + ':' + port + path + ' timed out');\n          callback(err, null, 'ws://' + host + ':' + port + path);\n        }, 5000);\n\n      try {\n        var serializer = kFactory.createJSONSerializer();\n        modelStr = serializer.serialize(model);\n      } catch (err) {\n        var error = new Error('Unable to serialize current model');\n        callback(error);\n        return null;\n      }\n\n      if (modelStr) {\n        path = cleanPath(path);\n\n        ws = new WebSocket('ws://' + host + ':' + port + path);\n\n        ws.onopen = function () {\n          clearTimeout(timeout);\n          ws.send('push/' + modelStr);\n          sent = true;\n          ws.close();\n          callback();\n        };\n\n        ws.onerror = function (err) {\n          failed = true;\n          err = new Error('Unable to connect to ws://' + host + ':' + port + path);\n          clearTimeout(timeout);\n          callback(err);\n        };\n\n        ws.onclose = function () {\n          if (!sent && !failed) {\n            clearTimeout(timeout);\n            var err = new Error('Connection with ws://' + host + ':' + port + path + ' closed');\n            callback(err, null, 'ws://' + host + ':' + port + path);\n          }\n        };\n      }\n\n      return ws;\n    }\n  };\n});\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiUtils', function (kModelHelper, NODE_HEIGHT, NODE_WIDTH, COMP_HEIGHT, CHANNEL_RADIUS, GROUP_RADIUS) {\n    /**\n     *\n     * @param node\n     * @returns {number}\n     */\n    function getNodeUIHeight(node) {\n      var height = NODE_HEIGHT; // minimum node height\n\n      node.components.array.forEach(function (comp) {\n        height += getCompUIHeight(comp) + 10;\n      });\n\n      node.hosts.array.forEach(function (child) {\n        height += getNodeUIHeight(child) + 10;\n      });\n\n      return height;\n    }\n\n    function getCompUIHeight(comp) {\n      if (comp.typeDefinition.provided.size() === 0 && comp.typeDefinition.required.size() === 0) {\n        return COMP_HEIGHT;\n      } else if (comp.typeDefinition.provided.size() > comp.typeDefinition.required.size()) {\n        return COMP_HEIGHT * comp.typeDefinition.provided.size();\n      } else {\n        return COMP_HEIGHT * comp.typeDefinition.required.size();\n      }\n    }\n\n    /**\n     * Returns the highest node path regarding the given SVG element (supposed to be a .node or a .comp)\n     * @param elem\n     */\n    function getHighestNodePath(elem) {\n      if (elem.parent().hasClass('instance')) {\n        return getHighestNodePath(elem.parent());\n      } else {\n        return elem.attr('data-path');\n      }\n    }\n\n    function getAbsoluteBBox(elem) {\n      var bbox = elem.getBBox();\n\n      function walkUp(elem) {\n        if (elem.parent() && elem.parent().hasClass('instance')) {\n          var parentBox = elem.parent().getBBox();\n          bbox.x += parentBox.x;\n          bbox.y += parentBox.y;\n          walkUp(elem.parent());\n        }\n      }\n      walkUp(elem);\n      return bbox;\n    }\n\n    /**\n     *\n     * @param elem\n     * @param x\n     * @param y\n     * @param m transform matrix (translations & zoom of the editor panel)\n     */\n    function isPointInsideElem(elem, x, y, m) {\n      var bbox = getAbsoluteBBox(elem);\n      bbox.x = (bbox.x * m.a) + m.e;\n      bbox.y = (bbox.y * m.a) + m.f;\n      bbox.width *= m.a;\n      bbox.height *= m.a;\n      return x >= bbox.x &&\n        x <= bbox.x + bbox.width &&\n        y >= bbox.y &&\n        y <= bbox.y + bbox.height;\n    }\n\n    /**\n     * @param x\n     * @param y\n     * @returns { x, y } points within the editor context (equivalent to Chrome's offsetX offsetY)\n     */\n    function getPointInEditor(x, y) {\n      var offset = jQuery('svg#editor').offset();\n      return { x: x - offset.left, y: y - offset.top };\n    }\n\n    function computeWireNodeAnchor(from, to, width, height) {\n      function getHorizontalAlignment() {\n        if (from.x >= to.x + width / 3 && from.x <= to.x + (width / 3) * 2) {\n          return 'middle';\n\n\n        } else if (from.x > to.x + (width / 3) * 2) {\n          return 'right';\n\n        } else {\n          return 'left';\n        }\n      }\n\n      function getVerticalAlignment() {\n        if (from.y >= to.y + height / 3 && from.y <= to.y + (height / 3) * 2) {\n          return 'middle';\n\n        } else if (from.y > to.y + (height / 3) * 2) {\n          return 'bottom';\n\n        } else {\n          return 'top';\n        }\n      }\n\n      var alignment = getVerticalAlignment() + '-' + getHorizontalAlignment();\n      switch (alignment) {\n        default:\n        case 'top-left':\n          return {\n            x: to.x + 2,\n            y: to.y + 2\n          };\n\n        case 'top-middle':\n          return {\n            x: to.x + width / 2,\n            y: to.y\n          };\n\n        case 'top-right':\n          return {\n            x: to.x + width - 2,\n            y: to.y + 2\n          };\n\n        case 'middle-left':\n          return {\n            x: to.x,\n            y: to.y + height / 2\n          };\n\n        case 'middle-right':\n          return {\n            x: to.x + width,\n            y: to.y + height / 2\n          };\n\n        case 'bottom-left':\n          return {\n            x: to.x + 2,\n            y: to.y + height - 2\n          };\n\n        case 'bottom-middle':\n          return {\n            x: to.x + width / 2,\n            y: to.y + height\n          };\n\n        case 'bottom-right':\n          return {\n            x: to.x + width - 2,\n            y: to.y + height - 2\n          };\n      }\n    }\n\n    function computeBindingCoords(portElem, chanElem) {\n      var chanM = chanElem.transform().localMatrix,\n        chan = {\n          x: chanM.e,\n          y: chanM.f\n        },\n        compBox = getAbsoluteBBox(portElem.parent()),\n        portM = portElem.transform().localMatrix,\n        port = {\n          x: compBox.x + portM.e + 2,\n          y: compBox.y + portM.f + COMP_HEIGHT - 5\n        },\n        middle = {\n          x: 0,\n          y: 0\n        };\n\n      if (port.x > chan.x) {\n        middle.x = chan.x + (port.x - chan.x) / 2;\n      } else {\n        middle.x = port.x + (chan.x - port.x) / 2;\n      }\n\n      middle.y = ((port.y >= chan.y) ? port.y : chan.y) + 20;\n\n      return {\n        chan: chan,\n        port: port,\n        middle: middle\n      };\n    }\n\n    /**\n     *\n     * @param model\n     */\n    function updateSVGDefs(model) {\n      var editor = document.getElementById('editor');\n      if (editor) {\n        var defs = editor.getElementsByTagName('defs')[0];\n        var clipPath;\n        if (!document.getElementById('group-clip')) {\n          clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n          clipPath.id = 'group-clip';\n          var grpCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n          grpCircle.setAttribute('cx', 0 + '');\n          grpCircle.setAttribute('cy', 0 + '');\n          grpCircle.setAttribute('r', (GROUP_RADIUS - 4) + '');\n          clipPath.appendChild(grpCircle);\n          defs.appendChild(clipPath);\n        }\n\n        if (!document.getElementById('chan-clip')) {\n          clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n          clipPath.id = 'chan-clip';\n          var chanCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n          chanCircle.setAttribute('cx', 0 + '');\n          chanCircle.setAttribute('cy', 0 + '');\n          chanCircle.setAttribute('r', (CHANNEL_RADIUS - 4) + '');\n          clipPath.appendChild(chanCircle);\n          defs.appendChild(clipPath);\n        }\n\n        var nodeTreeHeights = kModelHelper.getNodeTreeHeights(model.nodes.array);\n        nodeTreeHeights.forEach(function (height) {\n          if (!document.getElementById('node-clip-' + height)) {\n            var nodeClip = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n            nodeClip.id = 'node-clip-' + height;\n            var nodeRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            nodeRect.setAttribute('width', (NODE_WIDTH + (20 * height) - 5) + '');\n            nodeRect.setAttribute('height', '100%');\n            nodeRect.setAttribute('x', 2 + '');\n            nodeRect.setAttribute('y', 0 + '');\n            nodeClip.appendChild(nodeRect);\n            defs.appendChild(nodeClip);\n          }\n\n          if (!document.getElementById('comp-clip-' + height)) {\n            var compClip = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n            compClip.id = 'comp-clip-' + height;\n            var compRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            compRect.setAttribute('width', (NODE_WIDTH + (20 * height) - 60) + '');\n            compRect.setAttribute('height', '100%');\n            compRect.setAttribute('x', 20 + '');\n            compRect.setAttribute('y', 0 + '');\n            compClip.appendChild(compRect);\n            defs.appendChild(compClip);\n          }\n        });\n      }\n    }\n\n    return {\n      getAbsoluteBBox: getAbsoluteBBox,\n      getNodeUIHeight: getNodeUIHeight,\n      getCompUIHeight: getCompUIHeight,\n      getHighestNodePath: getHighestNodePath,\n      isPointInsideElem: isPointInsideElem,\n      computeWireNodeAnchor: computeWireNodeAnchor,\n      computeBindingCoords: computeBindingCoords,\n      updateSVGDefs: updateSVGDefs,\n      getPointInEditor: getPointInEditor\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('ui', function (util, uiUtils, uiCreateGroup, uiCreateGroupWire, uiCreateNode, uiCreateComponent, uiCreateBinding, uiCreateChannel, kModelHelper, kFactory, Notification, KWE_POSITION, NODE_WIDTH, NODE_HEIGHT, INVALID_RADIUS, GROUP_RADIUS, CHANNEL_RADIUS) {\n\n    var ui = {\n      /**\n       * Current editor model\n       */\n      model: null,\n\n      /**\n       * Overed instance (node)\n       */\n      overedInstancePath: null,\n\n      /**\n       * Dragged instance path\n       */\n      draggedInstancePath: null,\n\n      /**\n       * Mouse position holder\n       */\n      mousePos: {\n        x: 0,\n        y: 0\n      },\n\n      /**\n       * Must be called before any other methods\n       */\n      init: function () {\n        var editor = new Snap('svg#editor');\n        editor.zpd({\n          zoomThreshold: [0.2, 1],\n          zoomScale: 0.05\n        });\n        var zpdEditor = this.editor = editor.select('#snapsvg-zpd-' + editor.id);\n        zpdEditor.addClass('zpd');\n        editor.mousedown(function (evt) {\n          if (evt.which === 1) {\n            // remove all selected state\n            editor.selectAll('.selected')\n              .forEach(function (elem) {\n                elem.removeClass('selected');\n                var path = elem.parent().attr('data-path');\n                if (path && path.length > 0) {\n                  var instance = ui.model.findByPath(path);\n                  kModelHelper.setSelected(instance, false);\n                }\n              });\n          }\n        });\n        uiUtils.updateSVGDefs(this.model);\n\n        // create an observer instance\n        var observer = new MutationObserver(function (mutations) {\n          mutations.forEach(function (mutation) {\n            if (mutation.attributeName === 'transform') {\n              var matrix = zpdEditor.transform()\n                .localMatrix;\n              editor\n                .select('#coord-text')\n                .attr({\n                  text: '(' + parseInt(matrix.e, 10) + ', ' + parseInt(matrix.f, 10) + ') ' + parseInt(matrix.a * 100, 10) + '%'\n                });\n            }\n          });\n        });\n\n        // pass in the target node, as well as the observer options\n        observer.observe(zpdEditor.node, {\n          attributes: true,\n          childList: false,\n          characterData: false\n        });\n\n        editor.dblclick(function () {\n          zpdEditor.animate({\n            transform: 's1,t0,0'\n          }, 400, mina.ease);\n        });\n\n        editor\n          .text('100%', '100%', '(0, 0) 100%')\n          .attr({\n            id: 'coord-text',\n            fill: '#000',\n            textAnchor: 'end'\n          })\n          .transform('t-5,-5');\n      },\n\n      createGroup: function (instance) {\n        uiCreateGroup(this, instance);\n      },\n\n      createGroupWire: function (group, node) {\n        uiCreateGroupWire(this, group, node);\n      },\n\n      createNode: function (instance) {\n        uiCreateNode(this, instance);\n      },\n\n      createComponent: function (instance) {\n        return uiCreateComponent(this, instance);\n      },\n\n      createBinding: function (instance) {\n        uiCreateBinding(this, instance);\n      },\n\n      createChannel: function (instance) {\n        uiCreateChannel(this, instance);\n      },\n\n      updateValidity: function (instance) {\n        if (this.editor) {\n          var elem = this.editor.select('.instance[data-path=\"' + instance.path() + '\"]');\n          var icon = this.editor.select('.instance[data-path=\"' + instance.path() + '\"] > .invalid-icon');\n          if (kModelHelper.isValid(instance)) {\n            if (icon) {\n              icon.remove();\n            }\n          } else {\n            if (icon) {\n              icon.remove();\n            }\n            icon = this.editor\n              .circle(0, 0, INVALID_RADIUS)\n              .attr({\n                'class': 'invalid-icon',\n                fill: 'red',\n                stroke: 'black',\n                title: 'Invalid dictionary attributes'\n              });\n            var matrix = icon.transform()\n              .localMatrix;\n            switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n              case 'node':\n                matrix.e = elem.getBBox()\n                  .width - (INVALID_RADIUS * 2);\n                matrix.f = INVALID_RADIUS * 2;\n                break;\n\n              case 'group':\n                matrix.f = -GROUP_RADIUS + (INVALID_RADIUS * 2);\n                break;\n\n              case 'channel':\n                matrix.f = -CHANNEL_RADIUS + (INVALID_RADIUS * 2);\n                break;\n\n              case 'component':\n                matrix.e = elem.getBBox()\n                  .width;\n                break;\n            }\n            icon.transform(matrix);\n            elem.append(icon);\n          }\n        }\n      },\n\n      deleteInstance: function (parent, path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          if (elem.hasClass('comp') || elem.hasClass('node')) {\n            var highestNodePath = uiUtils.getHighestNodePath(elem);\n            if (ui.draggedInstancePath === path) {\n              // append it to the editor\n              this.editor.append(elem);\n            } else {\n              this.editor.selectAll('.group-wire[data-to=\"' + path + '\"]')\n                .remove();\n              elem.remove();\n            }\n\n            ui.refreshNode(highestNodePath);\n\n            // refresh all group-wire from this whole node\n            var highestNode = ui.model.findByPath(highestNodePath);\n            if (highestNode) {\n              highestNode.groups.array.forEach(function (group) {\n                ui.createGroupWire(group, highestNode);\n              });\n              highestNode.hosts.array.forEach(function redrawWire(child) {\n                child.groups.array.forEach(function (group) {\n                  ui.createGroupWire(group, child);\n                });\n                child.hosts.array.forEach(redrawWire);\n              });\n\n              // redraw parent bindings\n              highestNode.components.array.forEach(function (comp) {\n                comp.provided.array.forEach(function (port) {\n                  port.bindings.array.forEach(function (binding) {\n                    ui.createBinding(binding);\n                  });\n                });\n                comp.required.array.forEach(function (port) {\n                  port.bindings.array.forEach(function (binding) {\n                    ui.createBinding(binding);\n                  });\n                });\n              });\n\n              // redraw sibling bindings\n              highestNode.hosts.array.forEach(function redrawBindings(child) {\n                child.components.array.forEach(function (comp) {\n                  comp.provided.array.forEach(function (port) {\n                    port.bindings.array.forEach(function (binding) {\n                      ui.createBinding(binding);\n                    });\n                  });\n                  comp.required.array.forEach(function (port) {\n                    port.bindings.array.forEach(function (binding) {\n                      ui.createBinding(binding);\n                    });\n                  });\n                });\n                child.hosts.array.forEach(redrawBindings);\n              });\n            }\n          } else {\n            elem.remove();\n          }\n        }\n      },\n\n      deleteGroupWire: function (groupPath, nodePath) {\n        var elem = this.editor.select('.group-wire[data-from=\"' + groupPath + '\"][data-to=\"' + nodePath + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteBinding: function (bindingPath) {\n        var elem = this.editor.select('.binding[data-path=\"' + bindingPath + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteSelected: function () {\n        var selected = this.getSelected();\n        selected.forEach(function (elem) {\n          var path = elem.attr('data-path');\n          if (path) {\n            var instance = ui.model.findByPath(path);\n            if (instance) {\n              var readOnly = false;\n              if (typeof instance.findMetaDataByID === 'function') {\n                var val = instance.findMetaDataByID('access_mode');\n                readOnly = (val && val.value === 'read-only');\n              }\n              if (readOnly) {\n                Notification.warning({\n                  title: 'Delete instance',\n                  message: 'Cannot delete read-only instance \"' + instance.name + '\"',\n                  delay: 3000\n                });\n              } else {\n                if (instance.hosts) {\n                  // also remove child nodes recursively\n                  instance.hosts.array.forEach(function deleteChild(node) {\n                    node.hosts.array.forEach(deleteChild);\n                    node.delete();\n                  });\n                }\n                instance.delete();\n              }\n            }\n          } else {\n            if (elem.hasClass('group-wire')) {\n              var grp = ui.model.findByPath(elem.attr('data-from')),\n                node = ui.model.findByPath(elem.attr('data-to'));\n              if (node && grp) {\n                node.removeGroups(grp);\n                grp.removeSubNodes(node);\n              }\n            } else {\n              // TODO for component ports wire\n            }\n          }\n        });\n        return selected.length;\n      },\n\n      removeUIElem: function (path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          elem.remove();\n        }\n      },\n\n      deleteNodes: function () {\n        this.editor.selectAll('.node')\n          .remove();\n        this.editor.selectAll('.group-wire')\n          .remove();\n      },\n\n      deleteGroups: function () {\n        this.editor.selectAll('.group')\n          .remove();\n        this.editor.selectAll('.group-wire')\n          .remove();\n      },\n\n      deleteChannels: function () {\n        this.editor.selectAll('.chan')\n          .remove();\n      },\n\n      deleteBindings: function () {\n        this.editor.selectAll('.binding')\n          .remove();\n      },\n\n      updateInstance: function (previousPath, instance) {\n        var elem = this.editor.select('.instance[data-path=\"' + previousPath + '\"]');\n        if (elem) {\n          // update data-path and name\n          elem.attr({\n            'data-path': instance.path()\n          });\n          var name = elem.select('text.name');\n          if (name) {\n            name.attr({\n              text: instance.name\n            });\n          }\n\n          // update location only if not a child of someone\n          if (!elem.parent()\n            .hasClass('node')) {\n            elem.relocate(instance);\n          }\n\n          // update children data-path if any\n          if (instance.components || instance.hosts) {\n            instance.components.array.forEach(function (comp) {\n              var compElem = elem.select('.instance[data-path=\"' + previousPath + '/components[' + comp.name + ']\"]');\n              if (compElem) {\n                compElem.attr({\n                  'data-path': comp.path()\n                    .replace(previousPath, instance.path())\n                });\n              }\n            });\n          }\n\n          // update started state\n          if (elem.hasClass('comp')) {\n            elem.select('.bg')\n              .attr({\n                fillOpacity: util.isTruish(instance.started) ? 1 : 0.65\n              });\n          } else {\n            if (name) {\n              name.attr({\n                fill: util.isTruish(instance.started) ? '#fff' : '#000'\n              });\n            }\n          }\n\n          // update group-wire if it is a node\n          if (elem.hasClass('node')) {\n            this.editor\n              .selectAll('.group-wire[data-to=\"' + previousPath + '\"]')\n              .attr({\n                'data-to': instance.path()\n              });\n          }\n\n          if (elem.hasClass('group')) {\n            this.editor\n              .selectAll('.group-wire[data-from=\"' + previousPath + '\"]')\n              .attr({\n                'data-from': instance.path()\n              });\n          }\n        }\n      },\n\n      updatePosition: function (instance) {\n        var elem = this.editor.select('.instance[data-path=\"' + instance.path() + '\"]');\n        if (elem) {\n          if (!elem.parent()\n            .hasClass('node')) {\n            elem.relocate(instance);\n          }\n        }\n      },\n\n      updateCompTypeDefinition: function (comp, oldTypeDef) {\n        oldTypeDef.required.array.forEach(function (oldPortType) {\n          var found = false;\n          comp.typeDefinition.required.array.forEach(function (portType) {\n            if (portType.name === oldPortType.name) {\n              found = true;\n              // port still exists in new typeDef\n              var port = comp.findRequiredByID(portType.name);\n              if (port) {\n                port.portTypeRef = portType;\n              }\n            }\n          });\n          if (!found) {\n            var port = comp.findRequiredByID(oldPortType.name);\n            if (port) {\n              port.bindings.array.forEach(function (binding) {\n                binding.delete();\n              });\n              port.delete();\n            }\n          }\n        });\n\n        oldTypeDef.provided.array.forEach(function (oldPortType) {\n          var found = false;\n          comp.typeDefinition.provided.array.forEach(function (portType) {\n            if (portType.name === oldPortType.name) {\n              found = true;\n              // port still exists in new typeDef\n              var port = comp.findProvidedByID(oldPortType.name);\n              if (port) {\n                port.portTypeRef = portType;\n              }\n            }\n          });\n          if (!found) {\n            var port = comp.findProvidedByID(oldPortType.name);\n            if (port) {\n              port.bindings.array.forEach(function (binding) {\n                binding.delete();\n              });\n              port.delete();\n            }\n          }\n        });\n\n        // recreate the new component\n        var compUi = ui.createComponent(comp);\n        compUi.select('.bg')\n          .addClass('selected');\n        this.refreshNode(comp.eContainer()\n          .path());\n      },\n\n      toggleFold: function (node, isFolded) {\n        function toggleChannel(chan) {\n          var uiChan = ui.editor.select('.chan[data-path=\"' + chan.path() + '\"]');\n          if (uiChan) {\n            if (kModelHelper.isChannelDistributed(chan)) {\n              if (isFolded) {\n                uiChan.attr({\n                  strokeDasharray: '5 3'\n                });\n              } else {\n                uiChan.attr({\n                  strokeDasharray: ''\n                });\n              }\n            } else {\n              if (isFolded) {\n                uiChan.addClass('hide');\n              } else {\n                uiChan.removeClass('hide');\n              }\n            }\n          }\n        }\n\n        function toggleBinding(binding) {\n          if (binding.hub) {\n            toggleChannel(binding.hub);\n          }\n\n          var uiBinding = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n          if (uiBinding) {\n            if (isFolded) {\n              uiBinding.addClass('hide');\n            } else {\n              uiBinding.removeClass('hide');\n            }\n          }\n        }\n\n        function togglePort(port) {\n          port.bindings.array.forEach(toggleBinding);\n        }\n\n        function toggleComp(comp) {\n          comp.provided.array.forEach(togglePort);\n          comp.required.array.forEach(togglePort);\n\n          var uiComp = ui.editor.select('.comp[data-path=\"' + comp.path() + '\"]');\n          if (uiComp) {\n            if (isFolded) {\n              uiComp.addClass('hide');\n            } else {\n              uiComp.removeClass('hide');\n            }\n          }\n        }\n\n        function toggleSubNodes(node) {\n          node.components.array.forEach(toggleComp);\n          node.hosts.array.forEach(toggleSubNodes);\n\n          var uiNode = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n          if (uiNode) {\n            if (isFolded) {\n              uiNode.addClass('hide');\n            } else {\n              uiNode.removeClass('hide');\n            }\n          }\n        }\n\n        node.components.array.forEach(toggleComp);\n        node.hosts.array.forEach(toggleSubNodes);\n\n        var uiNode = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n        if (uiNode) {\n          if (isFolded) {\n            uiNode.select('.bg')\n              .attr({\n                height: NODE_HEIGHT,\n                strokeDasharray: '5 3'\n              });\n          } else {\n            uiNode.select('.bg')\n              .attr({\n                height: uiUtils.getNodeUIHeight(node),\n                strokeDasharray: ''\n              });\n          }\n        }\n      },\n\n      /**\n       * Refresh a node's UI (and it's children too)\n       * @param path\n       */\n      refreshNode: function (path) {\n        var instance = ui.model.findByPath(path);\n        if (instance) {\n          var node = ui.editor.select('.node[data-path=\"' + path + '\"]');\n          var treeHeight = kModelHelper.getNodeTreeHeight(instance);\n          var computedWidth = NODE_WIDTH + (20 * treeHeight);\n          if (instance.host) {\n            computedWidth = NODE_WIDTH + (20 * (kModelHelper.getNodeTreeHeight(instance.host) - 1));\n          }\n\n          node.relocate(instance);\n\n          node.select('.bg')\n            .attr({\n              width: computedWidth,\n              height: uiUtils.getNodeUIHeight(instance)\n            });\n\n          ui.editor\n            .selectAll('.node[data-path=\"' + path + '\"] > text')\n            .attr({\n              x: computedWidth / 2,\n              'clip-path': 'url(#node-clip-' + treeHeight + ')'\n            });\n\n          instance.components.array.forEach(function (comp) {\n            ui.refreshComp(comp.path());\n          });\n\n          instance.hosts.array.forEach(function (host) {\n            ui.refreshNode(host.path());\n          });\n\n          // apply dx,dy transformation of level-1 children\n          var children = ui.editor.selectAll('.node[data-path=\"' + instance.path() + '\"] > .instance')\n            .items;\n          var dy = NODE_HEIGHT;\n          children.forEach(function (child) {\n            child.transform('t' + ((computedWidth - child.select('.bg')\n              .asPX('width')) / 2) + ',' + dy);\n            dy += child.select('.bg')\n              .asPX('height') + 10;\n          });\n\n          instance.components.array.forEach(function (comp) {\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(function (binding) {\n                ui.createBinding(binding);\n              });\n            });\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(function (binding) {\n                ui.createBinding(binding);\n              });\n            });\n          });\n\n          this.updateValidity(instance);\n        }\n      },\n\n      /**\n       *\n       * @param path\n       */\n      refreshComp: function (path) {\n        var instance = ui.model.findByPath(path);\n        if (instance) {\n          var comp = ui.editor.select('.comp[data-path=\"' + path + '\"]');\n          var host = ui.editor.select('.node[data-path=\"' + instance.eContainer()\n            .path() + '\"]');\n          var treeHeight = kModelHelper.getNodeTreeHeight(instance.eContainer());\n          var computedWidth = host.select('.bg')\n            .asPX('width') - 20;\n\n          if (comp && host) {\n            comp.select('.bg')\n              .attr({\n                width: computedWidth\n              });\n            ui.editor\n              .selectAll('.comp[data-path=\"' + path + '\"] > text')\n              .attr({\n                x: computedWidth / 2,\n                'clip-path': 'url(#comp-clip-' + treeHeight + ')'\n              });\n\n            var PORT_X_PADDING = 3;\n            instance.typeDefinition.required.array.forEach(function (portType) {\n              var port = comp.select('.required[data-name=\"' + portType.name + '\"]');\n              port.transform('t' + (computedWidth - PORT_X_PADDING) + ',' + port.transform()\n                .localMatrix.f);\n            });\n\n            this.updateValidity(instance);\n          }\n        } else {\n          this.createComponent(instance);\n        }\n      },\n\n      getSelected: function () {\n        return this.editor\n          .selectAll('.selected')\n          .items\n          .map(function (elem) {\n            // all selected element are in groups so we need to return the parent\n            return elem.parent();\n          });\n      },\n\n      getSelectedPaths: function () {\n        return this.getSelected()\n          .map(function (elem) {\n            return elem.attr('data-path');\n          });\n      },\n\n      getSelectedNodes: function () {\n        return this.editor\n          .selectAll('.node > .selected')\n          .items\n          .map(function (bg) {\n            return bg.parent();\n          });\n      },\n\n      getNodePathAtPoint: function (x, y) {\n        var container = this.getEditorContainer();\n        var node = ui.getHoveredNode(x - container.offsetLeft, y - container.offsetTop);\n        if (node) {\n          return node.attr('data-path');\n        } else {\n          return null;\n        }\n      },\n\n      getEditorContainer: function () {\n        return document.getElementById('editor-container');\n      },\n\n      selectAll: function () {\n        this.editor.selectAll('.bg')\n          .items.forEach(function (elem) {\n            elem.addClass('selected');\n          });\n      },\n\n      isSelected: function (path) {\n        var elem = this.editor.select('.instance[data-path=\"' + path + '\"]');\n        if (elem) {\n          if (elem.select('.bg')\n            .hasClass('selected')) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n\n      setDropTarget: function (elem) {\n        this.dropTarget = elem;\n      },\n\n      getDropTarget: function () {\n        return this.dropTarget;\n      },\n\n      setModel: function (model) {\n        this.model = model;\n        if (this.editor) {\n          uiUtils.updateSVGDefs(model);\n\n          this.editor.clear();\n        }\n      },\n\n      getHoveredNode: function (x, y, bannedPath) {\n        var m = this.editor.transform()\n          .localMatrix;\n        return this.editor\n          .selectAll('.node')\n          .items\n          .filter(function (node) {\n            if (bannedPath) {\n              return node.attr('data-path') !== bannedPath &&\n                uiUtils.isPointInsideElem(node, x, y, m);\n            } else {\n              return uiUtils.isPointInsideElem(node, x, y, m);\n            }\n          })\n          .sort(function (a, b) {\n            return a.getBBox()\n              .width - b.getBBox()\n              .width;\n          })[0];\n      },\n\n      getHoveredChan: function (x, y) {\n        var chans = this.editor\n          .selectAll('.chan')\n          .items;\n        for (var i = 0; i < chans.length; i++) {\n          if (Snap.path.isPointInsideBBox(chans[i].getBBox(), x, y)) {\n            return chans[i];\n          }\n        }\n        return null;\n      },\n\n      getHoveredPort: function (x, y) {\n        var ports = this.editor\n          .selectAll('.port')\n          .items;\n        for (var i = 0; i < ports.length; i++) {\n          if (uiUtils.isPointInsideElem(ports[i], x, y, this.editor.transform()\n              .localMatrix)) {\n            return ports[i];\n          }\n        }\n        return null;\n      },\n\n      hasErrors: function () {\n        return this.editor.selectAll('.invalid-icon')\n          .length > 0;\n      },\n\n      order: function () {\n        this.editor.selectAll('.binding')\n          .forEach(function (binding) {\n            binding.node.parentNode.appendChild(binding.node);\n          });\n      }\n    };\n\n    /**\n     *\n     */\n    Snap.plugin(function (Snap, Element) {\n      var dragStart = function (x, y, evt) {\n        if (!this.parent()\n          .hasClass('instance')) {\n          var instances = jQuery(ui.editor.node)\n            .find('> .instance');\n          this.node.parentNode.insertBefore(this.node, instances[instances.length - 1].nextSibling);\n        }\n\n        this.data('dragStartX', x);\n        this.data('dragStartY', y);\n\n        ui.draggedInstancePath = this.attr('data-path');\n\n        var handlers = this.data('dragStart');\n        if (handlers) {\n          handlers.forEach(function (handler) {\n            handler.apply(this, [x, y, evt]);\n          }.bind(this));\n        }\n\n        if (this.hasClass('comp') || this.hasClass('node')) {\n          var bbox = uiUtils.getAbsoluteBBox(this);\n          this.data('ot', 't' + bbox.x + ',' + bbox.y);\n        } else {\n          this.data('ot', this.transform()\n            .local);\n        }\n\n        this.data('hasMoved', false);\n      };\n\n      var dragMove = function (dx, dy, x, y, evt) {\n        var dragStartX = this.data('dragStartX'),\n          dragStartY = this.data('dragStartY');\n        if (typeof dragStartX !== 'undefined' && typeof dragStartY !== 'undefined') {\n          if ((typeof dx === 'object') && (dx.type === 'touchmove')) {\n            evt = dx;\n            x = evt.changedTouches[0].clientX;\n            y = evt.changedTouches[0].clientY;\n            dx = x - dragStartX;\n            dy = y - dragStartY;\n          }\n\n          this.transform(this.data('ot') + (this.data('ot') ? 'T' : 't') + [dx, dy]);\n\n          if (this.data('hasMoved')) {\n            var handlers = this.data('dragMove');\n            if (handlers) {\n              handlers.forEach(function (handler) {\n                handler.apply(this, [dx, dy, x, y, evt]);\n              }.bind(this));\n            }\n          } else {\n            this.data('hasMoved', true);\n            var firstDragMoveHandlers = this.data('firstDragMove');\n            if (firstDragMoveHandlers) {\n              firstDragMoveHandlers.forEach(function (handler) {\n                handler.apply(this, [dx, dy, x, y, evt]);\n              }.bind(this));\n            }\n          }\n        }\n      };\n\n      var dragEnd = function () {\n        var args = arguments;\n        if (this.data('hasMoved')) {\n          // update position\n          var instance = ui.model.findByPath(this.attr('data-path'));\n          if (instance) {\n            // update model with new position on drag end\n            var pos = instance.findMetaDataByID(KWE_POSITION);\n            if (!pos) {\n              pos = kFactory.createValue();\n              pos.name = KWE_POSITION;\n              instance.addMetaData(pos);\n            }\n            var matrix = this.transform()\n              .localMatrix;\n            pos.value = JSON.stringify({\n              x: matrix.e,\n              y: matrix.f\n            });\n          }\n\n          // trigger handlers\n          var handlers = this.data('dragEnd');\n          if (handlers) {\n            handlers.forEach(function (handler) {\n              handler.apply(this, args);\n            }.bind(this));\n          }\n\n          this.data('hasMoved', false);\n        }\n        this.removeData('dragStartX');\n        this.removeData('dragStartY');\n        this.removeData('ot');\n        ui.draggedInstancePath = null;\n      };\n\n      Element.prototype.draggable = function () {\n        return this.drag(function (dx, dy, x, y, evt) {\n          if (evt.which === 1) {\n            dragMove.apply(this, arguments);\n          }\n        }, function (x, y, evt) {\n          if (evt.which === 1) {\n            dragStart.apply(this, arguments);\n          }\n        }, function (evt) {\n          if (evt.which === 1) {\n            dragEnd.apply(this, arguments);\n          }\n        });\n      };\n\n      Element.prototype.dragStart = function (handler) {\n        var handlers = this.data('dragStart') || [];\n        handlers.push(handler);\n        return this.data('dragStart', handlers);\n      };\n\n      Element.prototype.dragEnd = function (handler) {\n        var handlers = this.data('dragEnd') || [];\n        handlers.push(handler);\n        return this.data('dragEnd', handlers);\n      };\n\n      Element.prototype.dragMove = function (handler) {\n        var handlers = this.data('dragMove') || [];\n        handlers.push(handler);\n        return this.data('dragMove', handlers);\n      };\n\n      Element.prototype.startPtDrag = function (handler) {\n        return this.data('startPtDrag', handler);\n      };\n\n      Element.prototype.endPtDrag = function (handler) {\n        return this.data('endPtDrag', handler);\n      };\n\n      Element.prototype.firstDragMove = function (handler) {\n        var handlers = this.data('firstDragMove') || [];\n        handlers.push(handler);\n        return this.data('firstDragMove', handlers);\n      };\n\n      Element.prototype.selectable = function (instance) {\n        var selectable = function (evt) {\n          if (evt.which === 1) {\n            evt.cancelBubble = true;\n\n            if (!evt.ctrlKey && !evt.shiftKey) {\n              ui.editor.selectAll('.selected')\n                .forEach(function (elem) {\n                  elem.removeClass('selected');\n                  var path = elem.parent().attr('data-path');\n                  if (path && path.length > 0) {\n                    var instance = ui.model.findByPath(path);\n                    kModelHelper.setSelected(instance, false);\n                  }\n                });\n            }\n            if (evt.ctrlKey || evt.shiftKey) {\n              this.select('.bg')\n                .toggleClass('selected');\n              if (this.select('.bg')\n                .hasClass('selected')) {\n                kModelHelper.setSelected(instance, true);\n              } else {\n                kModelHelper.setSelected(instance, false);\n              }\n\n            } else {\n              this.select('.bg')\n                .addClass('selected');\n              kModelHelper.setSelected(instance, true);\n            }\n          }\n        };\n\n        return this\n          .mousedown(selectable)\n          .touchstart(selectable);\n      };\n\n      Element.prototype.relocate = function (instance) {\n        var meta = instance.findMetaDataByID(KWE_POSITION);\n        var pos = {\n          x: 100,\n          y: 100\n        };\n        if (meta) {\n          try {\n            pos = JSON.parse(meta.value);\n          } catch (ignore) {\n            pos = {\n              x: 100,\n              y: 100\n            };\n          }\n        } else {\n          meta = kFactory.createValue();\n          meta.name = KWE_POSITION;\n          meta.value = JSON.stringify(pos);\n          instance.addMetaData(meta);\n        }\n        return this.transform('t' + pos.x + ',' + pos.y);\n      };\n    });\n\n    return ui;\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .constant('GROUP_RADIUS', 55)\n  .constant('GROUP_PLUG_RADIUS', 10)\n  .constant('NODE_WIDTH', 210)\n  .constant('NODE_HEIGHT', 50)\n  .constant('COMP_HEIGHT', 40)\n  .constant('CHANNEL_RADIUS', 12)\n  .constant('INVALID_RADIUS', 5);\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateNode', function (uiUtils, util, kModelHelper, NODE_WIDTH, NODE_HEIGHT) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var treeHeight = kModelHelper.getNodeTreeHeight(instance);\n      var computedWidth = NODE_WIDTH + (20 * treeHeight);\n      if (instance.host) {\n        computedWidth = NODE_WIDTH + (20 * (kModelHelper.getNodeTreeHeight(instance.host) - 1));\n      }\n      var computedHeight = uiUtils.getNodeUIHeight(instance);\n\n      var bg = ui.editor\n        .rect(0, 0, computedWidth, computedHeight, 8)\n        .attr({\n          fill: 'white',\n          fillOpacity: 0.1,\n          stroke: 'white',\n          strokeWidth: 2,\n          class: kModelHelper.isSelected(instance) ? 'bg selected' : 'bg'\n        });\n\n      var nameText = ui.editor\n        .text(computedWidth / 2, NODE_HEIGHT / 2 - 2, instance.name)\n        .attr({\n          fill: util.isTruish(instance.started) ? '#fff' : '#000',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#node-clip-' + treeHeight + ')'\n        });\n\n      var tdefText = ui.editor\n        .text(computedWidth / 2, (NODE_HEIGHT / 2) + 12, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#node-clip-' + treeHeight + ')'\n        });\n\n      var node = ui.editor\n        .group()\n        .attr({\n          'class': 'instance node',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText)\n        .selectable(instance)\n        .draggable()\n        .dragStart(function () {\n          var container = document.getElementById('editor-container');\n          this.data('offset', {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          });\n        })\n        .firstDragMove(function () {\n          var args = arguments;\n          if (instance.host) {\n            // remove instance from host\n            instance.host.removeHosts(instance);\n          }\n\n          // trigger bindings firstDragMove while dragging start\n          var redrawBindings = function (comp) {\n            var redrawBinding = function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('firstDragMove').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            }.bind(this);\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n          }.bind(this);\n          instance.components.array.forEach(redrawBindings);\n\n          // recursive redraw\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(redrawBindings);\n            child.hosts.array.forEach(redrawChild);\n          });\n        })\n        .dragMove(function (dx, dy, clientX, clientY) {\n          var args = arguments;\n\n          // ui-error feedback\n          clearTimeout(this.data('dragTimeout'));\n          var nodeElem = this.data('hoveredNode');\n          if (nodeElem) {\n            nodeElem.select('.bg').removeClass('hovered error');\n          }\n\n          var timeout = setTimeout(function () {\n            var offset = this.data('offset') || {\n              left: 0,\n              right: 0\n            };\n            var nodeElem = ui.getHoveredNode(clientX - offset.left, clientY - offset.top, instance.path());\n            if (nodeElem) {\n              this.data('hoveredNode', nodeElem);\n              nodeElem.select('.bg').addClass('hovered');\n            } else {\n              this.data('hoveredNode', null);\n            }\n          }.bind(this), 100);\n          this.data('dragTimeout', timeout);\n\n          // redraw group-wire while dragging\n          var redrawWire = function (group, node) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n            if (wire) {\n              wire.data('endPtDrag').apply(wire, args);\n            }\n          };\n          instance.groups.array.forEach(function (group) {\n            redrawWire(group, instance);\n          });\n\n          // redraw bindings while dragging\n          var redrawBindings = function (comp) {\n            var redrawBinding = function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('endPtDrag').apply(elem, args);\n              }\n            }.bind(this);\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(redrawBinding);\n            });\n          }.bind(this);\n          instance.components.array.forEach(redrawBindings);\n\n          // recursive redraw\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(redrawBindings);\n            child.groups.array.forEach(function (group) {\n              redrawWire(group, child);\n            });\n            child.hosts.array.forEach(redrawChild);\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n\n          var hoveredNode = this.data('hoveredNode');\n          if (hoveredNode) {\n            // remove green ui-feedback\n            hoveredNode.select('.bg').removeClass('hovered error');\n\n            // put it in the hovered node\n            node.remove();\n            ui.model.findByPath(hoveredNode.attr('data-path')).addHosts(instance);\n          }\n\n          function updateWire(group, node) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n            if (wire) {\n              wire.data('dragEnd').forEach(function (handler) {\n                handler.apply(wire, args);\n              });\n            }\n          }\n          instance.groups.array.forEach(function (group) {\n            this.removeData(group.path());\n            updateWire(group, instance);\n          }.bind(this));\n\n          clearTimeout(this.data('dragTimeout'));\n\n          // update bindings coords when dragging done\n          function updateBindings(comp) {\n            function updateBindingCoords(binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('dragEnd').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            }\n\n            comp.provided.array.forEach(function (port) {\n              port.bindings.array.forEach(updateBindingCoords);\n            });\n\n            comp.required.array.forEach(function (port) {\n              port.bindings.array.forEach(updateBindingCoords);\n            });\n          }\n          instance.components.array.forEach(updateBindings);\n          instance.hosts.array.forEach(function redrawChild(child) {\n            child.components.array.forEach(updateBindings);\n            child.groups.array.forEach(function (group) {\n              updateWire(group, child);\n            });\n            child.hosts.array.forEach(redrawChild);\n          });\n\n          this.removeData('dragTimeout');\n          this.removeData('hoveredNode');\n          this.removeData('offset');\n        });\n\n      if (instance.host) {\n        var host = ui.editor.select('.node[data-path=\"' + instance.host.path() + '\"]');\n        var children = host.selectAll('.node[data-path=\"' + instance.host.path() + '\"] > .instance').items;\n        var dx = (host.select('.bg').asPX('width') - computedWidth) / 2,\n          dy = NODE_HEIGHT;\n        children.forEach(function (child) {\n          dy += child.select('.bg').asPX('height') + 10;\n        });\n        host.append(node);\n        node.transform('t' + dx + ',' + dy);\n      } else {\n        node.relocate(instance);\n      }\n\n      ui.updateValidity(instance);\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateGroupWire', function (uiUtils, util, GROUP_RADIUS) {\n    return function (ui, group, node) {\n      var grpElem, nodeElem, wireElem, wireBg, pt, data = {};\n\n      function computeData() {\n        grpElem = ui.editor.select('.group[data-path=\"' + group.path() + '\"]');\n        nodeElem = ui.editor.select('.node[data-path=\"' + node.path() + '\"]');\n        wireElem = ui.editor.select('.group-wire[data-from=\"' + group.path() + '\"][data-to=\"' + node.path() + '\"]');\n\n        var grpMatrix = grpElem.transform().localMatrix,\n          toBox = uiUtils.getAbsoluteBBox(nodeElem);\n\n        data = {\n          from: {\n            x: 0,\n            y: 0\n          },\n          to: {\n            x: toBox.x - grpMatrix.e,\n            y: toBox.y - grpMatrix.f\n          },\n          width: nodeElem.select('.bg').asPX('width'),\n          height: nodeElem.select('.bg').asPX('height')\n        };\n      }\n      computeData();\n      var toAnchor = uiUtils.computeWireNodeAnchor(data.from, data.to, data.width, data.height);\n      if (wireElem) {\n        // update data\n        wireElem\n          .data('data', data);\n        // update bg location\n        wireBg = wireElem\n          .select('path')\n          .attr({\n            d: 'M' + data.from.x + ',' + data.from.y + ' ' + toAnchor.x + ',' + toAnchor.y\n          });\n        pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n        wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + toAnchor.x + ',' + toAnchor.y });\n        // update node plug location\n        wireElem\n          .select('circle')\n          .attr({\n            cx: toAnchor.x,\n            cy: toAnchor.y\n          });\n      } else {\n        wireBg = ui.editor\n          .path('M' + data.from.x + ',' + data.from.y + ' ' + toAnchor.x + ',' + toAnchor.y)\n          .attr({\n            fill: 'none',\n            stroke: '#5aa564',\n            strokeWidth: 4,\n            strokeLineCap: 'round',\n            strokeLineJoin: 'round',\n            'class': 'bg'\n          })\n          .mouseover(function () {\n            this.attr({\n              strokeWidth: 5\n            });\n          })\n          .mouseout(function () {\n            this.attr({\n              strokeWidth: 4\n            });\n          });\n\n        var nodePlug = ui.editor\n          .circle(toAnchor.x, toAnchor.y, 4)\n          .attr({\n            fill: 'white'\n          });\n\n        grpElem\n          .group()\n          .attr({\n            'class': 'group-wire',\n            'data-from': group.path(),\n            'data-to': node.path()\n          })\n          .data('data', data)\n          .append(wireBg)\n          .append(nodePlug)\n          .selectable()\n          .startPtDrag(function (dx, dy) {\n            var data = this.data('data');\n            var newTo = {\n              x: data.to.x - dx,\n              y: data.to.y - dy\n            };\n            var anchor = uiUtils.computeWireNodeAnchor(data.from, newTo, data.width, data.height);\n            wireBg.attr({\n              d: 'M' + data.from.x + ',' + data.from.y + ' ' + anchor.x + ',' + anchor.y\n            });\n            pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n            wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + anchor.x + ',' + anchor.y });\n            nodePlug.attr({\n              cx: anchor.x,\n              cy: anchor.y\n            });\n          })\n          .endPtDrag(function (dx, dy) {\n            var data = this.data('data');\n            var nTo = {\n              x: data.to.x + dx,\n              y: data.to.y + dy\n            };\n            var anchor = uiUtils.computeWireNodeAnchor(data.from, nTo, data.width, data.height);\n            wireBg.attr({\n              d: 'M' + data.from.x + ',' + data.from.y + ' ' + anchor.x + ',' + anchor.y\n            });\n            pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n            wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + anchor.x + ',' + anchor.y });\n            nodePlug.attr({\n              cx: anchor.x,\n              cy: anchor.y\n            });\n          })\n          .dragEnd(function () {\n            computeData();\n            this.data('data', data);\n          });\n\n        pt = wireBg.getPointAtLength(GROUP_RADIUS + 2);\n        wireBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' ' + toAnchor.x + ',' + toAnchor.y });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateGroup', function (kModelHelper, uiUtils, util, GROUP_RADIUS, GROUP_PLUG_RADIUS) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var bg = ui.editor\n        .circle(0, 0, GROUP_RADIUS)\n        .attr({\n          fill: 'green',\n          stroke: '#000',\n          strokeWidth: 3,\n          'class': kModelHelper.isSelected(instance) ? 'bg selected' : 'bg',\n          opacity: 0.75\n        });\n\n      var plug = ui.editor\n        .circle(0, (GROUP_RADIUS / 2) + GROUP_PLUG_RADIUS, GROUP_PLUG_RADIUS)\n        .attr({\n          fill: '#f1c30f',\n          'class': 'group-plug'\n        })\n        .mouseover(function () {\n          this.attr({\n            r: GROUP_PLUG_RADIUS + 1\n          });\n        })\n        .mouseout(function () {\n          this.attr({\n            r: GROUP_PLUG_RADIUS\n          });\n        })\n        .drag(\n          function (dx, dy, cx, cy) {\n            var plugPos = this.data('plugPos');\n            this.data('wire').attr({\n              d: 'M' + plugPos.x + ',' + plugPos.y + ' ' + (plugPos.x + dx) + ',' + (plugPos.y + dy)\n            });\n\n            clearTimeout(this.data('wireTimeout'));\n            var nodeElem = this.data('hoveredNode');\n            if (nodeElem) {\n              nodeElem.select('.bg').removeClass('hovered error');\n            }\n\n            var timeout = setTimeout(function () {\n              var pt = uiUtils.getPointInEditor(cx, cy);\n              var nodeElem = ui.getHoveredNode(pt.x, pt.y);\n              if (nodeElem) {\n                this.data('hoveredNode', nodeElem);\n                var nodeBg = nodeElem.select('.bg');\n                nodeBg.addClass('hovered');\n\n                var node = ui.model.findByPath(nodeElem.attr('data-path'));\n                if (instance.findSubNodesByID(node.name)) {\n                  nodeBg.addClass('error');\n                }\n              } else {\n                this.data('hoveredNode', null);\n              }\n            }.bind(this), 100);\n            this.data('wireTimeout', timeout);\n          },\n          function () {\n            var grpM = group.transform().localMatrix; // eslint-disable-line\n            var plugPos = {\n              x: grpM.e,\n              y: grpM.f + (GROUP_RADIUS / 2) + GROUP_PLUG_RADIUS\n            };\n            this.data('plugPos', plugPos);\n            var wire = ui.editor\n              .path('M' + plugPos.x + ',' + plugPos.y + ' ' + plugPos.x + ',' + plugPos.y)\n              .attr({\n                fill: 'none',\n                stroke: '#5aa564',\n                strokeWidth: 5,\n                strokeLineCap: 'round',\n                strokeLineJoin: 'round',\n                opacity: 0.7\n              });\n            this.data('wire', wire);\n          },\n          function () {\n            var nodeElem = this.data('hoveredNode');\n            if (nodeElem) {\n              if (!nodeElem.select('.bg').hasClass('error')) {\n                // node elem found\n                var nodeInstance = ui.model.findByPath(nodeElem.attr('data-path'));\n                if (instance.findSubNodesByID(nodeInstance.name)) {\n                  // this node is already connected to the group\n                } else {\n                  // this node is not connected to the group\n                  instance.addSubNodes(nodeInstance);\n                }\n              }\n\n              // remove ui feedback\n              nodeElem.select('.bg').removeClass('hovered error');\n            }\n\n            this.data('wire').remove();\n            clearTimeout(this.data('wireTimeout'));\n\n            this.removeData('wire');\n            this.removeData('hoveredNode');\n            this.removeData('plugPos');\n            this.removeData('wireTimeout');\n          }\n        );\n\n      var nameText = ui.editor\n        .text(0, -5, instance.name)\n        .attr({\n          fill: util.isTruish(instance.started) ? '#fff' : '#000',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#group-clip)'\n        });\n\n      var tdefText = ui.editor\n        .text(0, 10, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#group-clip)'\n        });\n\n      var group = ui.editor\n        .group()\n        .attr({\n          'class': 'instance group',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText)\n        .append(plug)\n        .selectable(instance)\n        .draggable()\n        .dragMove(function () {\n          var args = arguments;\n          instance.subNodes.array.forEach(function (subNode) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + instance.path() + '\"][data-to=\"' + subNode.path() + '\"]');\n            if (wire) {\n              wire.data('startPtDrag').apply(wire, args);\n            }\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n          instance.subNodes.array.forEach(function (subNode) {\n            var wire = ui.editor.select('.group-wire[data-from=\"' + instance.path() + '\"][data-to=\"' + subNode.path() + '\"]');\n            if (wire) {\n              wire.data('dragEnd').forEach(function (handler) {\n                handler.apply(wire, args);\n              });\n            }\n          });\n        })\n        .relocate(instance);\n\n      ui.updateValidity(instance);\n\n      plug.touchstart(function (evt) {\n        evt.cancelBubble = true;\n      });\n      plug.mousedown(function (evt) {\n        evt.cancelBubble = true;\n      });\n\n      return group;\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateComponent', function ($uibModal, uiUtils, util, kFactory, kModelHelper, Notification, COMP_HEIGHT, NODE_HEIGHT) {\n    return function (ui, instance) {\n      var output, input;\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var host = ui.editor.select('.instance[data-path=\"' + instance.eContainer().path() + '\"]');\n      var computedWidth = host.select('.bg').asPX('width') - 20,\n        computedHeight = uiUtils.getCompUIHeight(instance);\n      var hostHeight = kModelHelper.getNodeTreeHeight(instance.eContainer());\n      var bg = ui.editor\n        .rect(0, 0, computedWidth, computedHeight, 3)\n        .attr({\n          fill: 'black',\n          fillOpacity: util.isTruish(instance.started) ? 1 : 0.65,\n          stroke: 'white',\n          strokeWidth: 1.5,\n          'class': kModelHelper.isSelected(instance) ? 'bg selected' : 'bg'\n        });\n\n      var nameText = ui.editor\n        .text(computedWidth / 2, computedHeight / 2, instance.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'class': 'name',\n          'clip-path': 'url(#comp-clip-' + hostHeight + ')'\n        });\n\n      var tdefText = ui.editor\n        .text(computedWidth / 2, (computedHeight / 2) + 12, instance.typeDefinition.name)\n        .attr({\n          fill: 'white',\n          textAnchor: 'middle',\n          'clip-path': 'url(#comp-clip-' + hostHeight + ')'\n        });\n\n      var comp = ui.editor\n        .group()\n        .attr({\n          'class': 'instance comp',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        .append(nameText)\n        .append(tdefText);\n\n      var PORT_X_PADDING = 3,\n        providedDy = 0,\n        requiredDy = 0;\n      instance.typeDefinition.provided.array.forEach(function (portType) {\n        var portPlug = ui.editor\n          .rect(-8, 5, 10, COMP_HEIGHT - 10, 2)\n          .attr({\n            fill: '#bc7645',\n            stroke: '#ECCA40',\n            strokeWidth: 2\n          })\n          .mouseover(function () {\n            this.attr({\n              strokeWidth: 3\n            });\n          })\n          .mouseout(function () {\n            this.attr({\n              strokeWidth: 2\n            });\n          })\n          .mousedown(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .touchstart(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .drag(\n            function (dx, dy, cx, cy) {\n              var portPos = this.data('portPos');\n              var middle = { x: 0, y: 0 };\n              if (portPos.x > (portPos.x + dx)) {\n                middle.x = (portPos.x + dx) + (portPos.x - (portPos.x + dx)) / 2;\n              } else {\n                middle.x = portPos.x + ((portPos.x + dx) - portPos.x) / 2;\n              }\n\n              middle.y = ((portPos.y >= (portPos.y + dy)) ? portPos.y : (portPos.y + dy)) + 20;\n              this.data('binding').attr({\n                d: 'M' + portPos.x + ',' + portPos.y + ' Q' + middle.x + ',' + middle.y + ' ' + (portPos.x + dx) + ',' + (portPos.y + dy)\n              });\n\n              clearTimeout(this.data('bindingTimeout'));\n              var portElem = this.data('hoveredPort');\n              if (portElem) {\n                portElem.select('text').removeClass('hovered error');\n              }\n              var chanElem = this.data('hoveredChan');\n              if (chanElem) {\n                chanElem.select('.bg').removeClass('hovered error');\n              }\n\n              var timeout = setTimeout(function () {\n                var pt = uiUtils.getPointInEditor(cx, cy);\n                var portElem = ui.getHoveredPort(pt.x, pt.y);\n                if (portElem) {\n                  this.data('hoveredChan', null);\n                  this.data('hoveredPort', portElem);\n                  var portText = portElem.select('text');\n                  portText.addClass('hovered');\n\n                  if (portElem.hasClass('provided')) {\n                    portText.addClass('error');\n                  }\n\n                } else {\n                  this.data('hoveredPort', null);\n                  var chanElem = ui.getHoveredChan(portPos.x + dx, portPos.y + dy);\n                  if (chanElem) {\n                    this.data('hoveredChan', chanElem);\n                    var chanBg = chanElem.select('.bg');\n                    chanBg.addClass('hovered');\n\n                    var chan = ui.model.findByPath(chanElem.attr('data-path'));\n                    if (kModelHelper.isAlreadyBound(instance.findProvidedByID(portType.name), chan) ||\n                      !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                      chanBg.addClass('error');\n                    }\n                  } else {\n                    this.data('hoveredChan', null);\n                  }\n                }\n              }.bind(this), 100);\n              this.data('bindingTimeout', timeout);\n            },\n            function () {\n              var portM = input.transform().localMatrix,\n                compBox = uiUtils.getAbsoluteBBox(comp);\n              var portPos = {\n                x: portM.e + compBox.x,\n                y: portM.f + compBox.y + ((COMP_HEIGHT - 6) / 2) + 3\n              };\n              this.data('portPos', portPos);\n              var binding = ui.editor\n                .path('M' + portPos.x + ',' + portPos.y + ' ' + portPos.x + ',' + portPos.y)\n                .attr({\n                  fill: 'none',\n                  stroke: '#ECCA40',\n                  strokeWidth: 5,\n                  strokeLineCap: 'round',\n                  strokeLineJoin: 'round',\n                  opacity: 0.7\n                });\n              this.data('binding', binding);\n            },\n            function () {\n              clearTimeout(this.data('bindingTimeout'));\n\n              var port = instance.findProvidedByID(portType.name);\n              if (!port) {\n                port = kFactory.createPort();\n                port.name = portType.name;\n                port.portTypeRef = portType;\n                instance.addProvided(port);\n              }\n\n              var hoveredChan = this.data('hoveredChan');\n              if (hoveredChan) {\n                var chan = ui.model.findByPath(hoveredChan.attr('data-path'));\n                if (!hoveredChan.select('.bg').hasClass('error')) {\n                  if (chan) {\n                    var binding = kFactory.createMBinding();\n                    binding.hub = chan;\n                    binding.port = port;\n                    ui.model.addMBindings(binding);\n                  }\n                } else {\n                  if (chan && !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                    Notification.error({\n                      title: 'Binding error',\n                      message: '<strong>' + chan.typeDefinition.name + '</strong> cannot run on platform <strong>' + kModelHelper.getPlatforms(instance.eContainer().typeDefinition).join('') + '</strong>',\n                      delay: 10000\n                    });\n                  }\n                }\n\n                // remove ui feedback\n                hoveredChan.select('.bg').removeClass('hovered error');\n              } else {\n                var hoveredPort = this.data('hoveredPort');\n                if (hoveredPort) {\n                  if (!hoveredPort.select('text').hasClass('error')) {\n                    var otherPortName = hoveredPort.attr('data-name');\n                    var otherPortComp = ui.model.findByPath(hoveredPort.parent().attr('data-path'));\n                    var otherPort = otherPortComp.findRequiredByID(otherPortName);\n                    if (!otherPort) {\n                      otherPort = kFactory.createPort();\n                      otherPort.name = otherPortName;\n                      otherPort.portTypeRef = otherPortComp.typeDefinition.findRequiredByID(otherPortName);\n                      otherPortComp.addRequired(otherPort);\n                    }\n\n                    $uibModal\n                      .open({\n                        templateUrl: 'app/main/editor/select-chan.modal.html',\n                        controller: 'SelectChanModalCtrl',\n                        resolve: {\n                          startPort: port,\n                          endPort: otherPort\n                        }\n                      })\n                      .result.then(function (chanInstance) {\n                        if (chanInstance) {\n                          var binding = kFactory.createMBinding();\n                          binding.hub = chanInstance;\n                          binding.port = port;\n                          ui.model.addMBindings(binding);\n\n                          var binding2 = kFactory.createMBinding();\n                          binding2.hub = chanInstance;\n                          binding2.port = otherPort;\n                          ui.model.addMBindings(binding2);\n                        }\n                      });\n                  }\n                  hoveredPort.select('text').removeClass('hovered error');\n                }\n              }\n\n              this.data('binding').remove();\n\n              this.removeData('binding');\n              this.removeData('bindingTimeout');\n              this.removeData('hoveredPort');\n              this.removeData('hoveredChan');\n              this.removeData('portPos');\n            });\n\n        var text = ui.editor\n          .text(6, COMP_HEIGHT - 4, portType.name.substr(0, 6))\n          .attr({\n            fill: 'white',\n            title: portType.name\n          })\n          .append(Snap.parse('<title>' + portType.name + '</title>'));\n\n        input = ui.editor\n          .group()\n          .attr({\n            'class': 'port provided',\n            'data-name': portType.name\n          })\n          .append(portPlug)\n          .append(text)\n          .transform('t' + PORT_X_PADDING + ',' + providedDy);\n\n        comp.append(input);\n\n        providedDy += COMP_HEIGHT;\n      });\n\n      instance.typeDefinition.required.array.forEach(function (portType) {\n        var portPlug = ui.editor\n          .rect(-3, 5, 10, COMP_HEIGHT - 10, 2)\n          .attr({\n            fill: '#bc7645',\n            stroke: '#C60808',\n            strokeWidth: 2\n          })\n          .mouseover(function () {\n            this.attr({ strokeWidth: 3 });\n          })\n          .mouseout(function () {\n            this.attr({ strokeWidth: 2 });\n          })\n          .mousedown(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .touchstart(function (evt) {\n            evt.cancelBubble = true;\n          })\n          .drag(\n            function (dx, dy, cx, cy) {\n              var portPos = this.data('portPos');\n              var middle = {\n                x: 0,\n                y: 0\n              };\n              if (portPos.x > (portPos.x + dx)) {\n                middle.x = (portPos.x + dx) + (portPos.x - (portPos.x + dx)) / 2;\n              } else {\n                middle.x = portPos.x + ((portPos.x + dx) - portPos.x) / 2;\n              }\n\n              middle.y = ((portPos.y >= (portPos.y + dy)) ? portPos.y : (portPos.y + dy)) + 20;\n              this.data('binding').attr({\n                d: 'M' + portPos.x + ',' + portPos.y + ' Q' + middle.x + ',' + middle.y + ' ' + (portPos.x + dx) + ',' + (portPos.y + dy)\n              });\n\n              clearTimeout(this.data('bindingTimeout'));\n              var portElem = this.data('hoveredPort');\n              if (portElem) {\n                portElem.select('text').removeClass('hovered error');\n              }\n              var chanElem = this.data('hoveredChan');\n              if (chanElem) {\n                chanElem.select('.bg').removeClass('hovered error');\n              }\n\n              var timeout = setTimeout(function () {\n                var pt = uiUtils.getPointInEditor(cx, cy);\n                var portElem = ui.getHoveredPort(pt.x, pt.y);\n                if (portElem) {\n                  this.data('hoveredChan', null);\n                  this.data('hoveredPort', portElem);\n                  if (portElem.hasClass('required')) {\n                    portElem.select('text').addClass('hovered error');\n                  } else {\n                    portElem.select('text').addClass('hovered');\n                  }\n                } else {\n                  this.data('hoveredPort', null);\n                  var chanElem = ui.getHoveredChan(portPos.x + dx, portPos.y + dy);\n                  if (chanElem) {\n                    this.data('hoveredChan', chanElem);\n                    var chanBg = chanElem.select('.bg');\n                    chanBg.addClass('hovered');\n\n                    var chan = ui.model.findByPath(chanElem.attr('data-path'));\n                    if (kModelHelper.isAlreadyBound(instance.findRequiredByID(portType.name), chan) ||\n                      !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                      chanBg.addClass('error');\n                    }\n                  } else {\n                    this.data('hoveredChan', null);\n                  }\n                }\n              }.bind(this), 100);\n              this.data('bindingTimeout', timeout);\n            },\n            function () {\n              var portM = output.transform().localMatrix,\n                compBox = uiUtils.getAbsoluteBBox(comp);\n              var portPos = {\n                x: portM.e + compBox.x,\n                y: portM.f + compBox.y + ((COMP_HEIGHT - 6) / 2) + 3\n              };\n              this.data('portPos', portPos);\n              var binding = ui.editor\n                .path('M' + portPos.x + ',' + portPos.y + ' ' + portPos.x + ',' + portPos.y)\n                .attr({\n                  fill: 'none',\n                  stroke: '#C60808',\n                  strokeWidth: 5,\n                  strokeLineCap: 'round',\n                  strokeLineJoin: 'round',\n                  opacity: 0.7\n                });\n              this.data('binding', binding);\n            },\n            function () {\n              clearTimeout(this.data('bindingTimeout'));\n\n              var port = instance.findRequiredByID(portType.name);\n              if (!port) {\n                port = kFactory.createPort();\n                port.name = portType.name;\n                port.portTypeRef = portType;\n                instance.addRequired(port);\n              }\n\n              var hoveredChan = this.data('hoveredChan');\n              if (hoveredChan) {\n                var chan = ui.model.findByPath(hoveredChan.attr('data-path'));\n                if (!hoveredChan.select('.bg').hasClass('error')) {\n                  if (chan) {\n                    var binding = kFactory.createMBinding();\n                    binding.hub = chan;\n                    binding.port = port;\n                    ui.model.addMBindings(binding);\n                  }\n                } else {\n                  if (chan && !kModelHelper.isCompatible(chan.typeDefinition, instance.eContainer())) {\n                    Notification.error({\n                      title: 'Binding error',\n                      message: '<strong>' + chan.typeDefinition.name + '</strong> cannot run on platform <strong>' + kModelHelper.getPlatforms(instance.eContainer().typeDefinition).join('') + '</strong>',\n                      delay: 10000\n                    });\n                  }\n                }\n\n                // remove ui feedback\n                hoveredChan.select('.bg').removeClass('hovered error');\n              } else {\n                var hoveredPort = this.data('hoveredPort');\n                if (hoveredPort) {\n                  if (!hoveredPort.select('text').hasClass('error')) {\n                    var otherPortName = hoveredPort.attr('data-name');\n                    var otherPortComp = ui.model.findByPath(hoveredPort.parent().attr('data-path'));\n                    var otherPort = otherPortComp.findProvidedByID(otherPortName);\n                    if (!otherPort) {\n                      otherPort = kFactory.createPort();\n                      otherPort.name = otherPortName;\n                      otherPort.portTypeRef = otherPortComp.typeDefinition.findProvidedByID(otherPortName);\n                      otherPortComp.addProvided(otherPort);\n                    }\n\n                    $uibModal\n                      .open({\n                        templateUrl: 'app/main/editor/select-chan.modal.html',\n                        controller: 'SelectChanModalCtrl',\n                        resolve: {\n                          startPort: port,\n                          endPort: otherPort\n                        }\n                      })\n                      .result.then(function (chanInstance) {\n                        if (chanInstance) {\n                          var binding = kFactory.createMBinding();\n                          binding.hub = chanInstance;\n                          binding.port = port;\n                          ui.model.addMBindings(binding);\n\n                          var binding2 = kFactory.createMBinding();\n                          binding2.hub = chanInstance;\n                          binding2.port = otherPort;\n                          ui.model.addMBindings(binding2);\n                        }\n                      });\n                  }\n                  hoveredPort.select('text').removeClass('hovered error');\n                }\n              }\n\n              this.data('binding').remove();\n\n              this.removeData('binding');\n              this.removeData('bindingTimeout');\n              this.removeData('hoveredChan');\n              this.removeData('hoveredPort');\n              this.removeData('portPos');\n            });\n\n        var text = ui.editor\n          .text(-6, COMP_HEIGHT - 4, portType.name.substr(0, 6))\n          .attr({\n            fill: 'white',\n            textAnchor: 'end',\n            title: portType.name\n          })\n          .append(Snap.parse('<title>' + portType.name + '</title>'));\n\n        output = ui.editor\n          .group()\n          .attr({\n            'class': 'port required',\n            'data-name': portType.name\n          })\n          .append(portPlug)\n          .append(text)\n          .transform('t' + (computedWidth - PORT_X_PADDING) + ',' + requiredDy);\n\n        comp.append(output);\n\n        requiredDy += COMP_HEIGHT;\n      });\n\n      comp.selectable(instance)\n        .draggable()\n        .dragStart(function () {\n          var container = document.getElementById('editor-container');\n          this.data('offset', {\n            left: container.offsetLeft,\n            top: container.offsetTop\n          });\n        })\n        .firstDragMove(function () {\n          var args = arguments;\n\n          this.data('parentNode', instance.eContainer());\n          instance.eContainer().removeComponents(instance);\n\n          // redraw bindings after component when dragging start\n          var redrawBindings = function (port) {\n            port.bindings.array.forEach(function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('firstDragMove').forEach(function (handler) {\n                  handler.apply(elem, args);\n                });\n              }\n            });\n          };\n          instance.provided.array.forEach(redrawBindings);\n          instance.required.array.forEach(redrawBindings);\n        })\n        .dragMove(function (dx, dy, clientX, clientY) {\n          var args = arguments;\n\n          // ui-error feedback\n          clearTimeout(this.data('dragTimeout'));\n          var nodeElem = this.data('hoveredNode');\n          if (nodeElem) {\n            nodeElem.select('.bg').removeClass('hovered error');\n          }\n\n          var timeout = setTimeout(function () {\n            var offset = this.data('offset');\n            var nodeElem = ui.getHoveredNode(clientX - offset.left, clientY - offset.top, instance.path());\n            if (nodeElem) {\n              this.data('hoveredNode', nodeElem);\n              nodeElem.select('.bg').addClass('hovered');\n            } else {\n              this.data('hoveredNode', null);\n            }\n          }.bind(this), 100);\n          this.data('dragTimeout', timeout);\n\n          // redraw bindings when dragging\n          var redrawBindings = function (port) {\n            port.bindings.array.forEach(function (binding) {\n              var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n              if (elem) {\n                elem.data('endPtDrag').apply(elem, args);\n              }\n            });\n          };\n          instance.provided.array.forEach(redrawBindings);\n          instance.required.array.forEach(redrawBindings);\n        })\n        .dragEnd(function () {\n          var hoveredNode = this.data('hoveredNode');\n          if (hoveredNode) {\n            // remove ui-feedback classes\n            hoveredNode.select('.bg').removeClass('hovered error');\n\n            comp.remove();\n            ui.model.findByPath(hoveredNode.attr('data-path')).addComponents(instance);\n          } else {\n            // if dropped in \"nothing\" then put it back into its old host node\n            comp.remove();\n            this.data('parentNode').addComponents(instance);\n          }\n\n          clearTimeout(this.data('dragTimeout'));\n\n          this.removeData('parentNode');\n          this.removeData('offset');\n          this.removeData('hoveredNode');\n          this.removeData('dragTimeout');\n        });\n\n      var children = host.selectAll('.instance[data-path=\"' + instance.eContainer().path() + '\"] > .instance').items;\n      var dx = (host.select('.bg').asPX('width') - computedWidth) / 2,\n        dy = NODE_HEIGHT;\n      children.forEach(function (child) {\n        dy += child.select('.bg').asPX('height') + 10;\n      });\n      comp.transform('t' + dx + ',' + dy);\n      host.append(comp);\n\n      ui.updateValidity(instance);\n\n      return comp;\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateChannel', function (kModelHelper, uiUtils, util, CHANNEL_RADIUS) {\n    return function (ui, instance) {\n      ui.removeUIElem(instance.path());\n      uiUtils.updateSVGDefs(ui.model);\n\n      var bg = ui.editor\n        .circle(0, 0, CHANNEL_RADIUS)\n        .attr({\n          fill: '#DB661D',\n          stroke: util.isTruish(instance.started) ? '#fff' : '#000',\n          strokeWidth: 2,\n          class: kModelHelper.isSelected(instance) ? 'bg selected' : 'bg',\n          opacity: 0.75,\n          title: instance.name + ': ' + instance.typeDefinition.name\n        });\n\n      // var nameText = ui.editor\n      //     .text(0, -5, instance.name)\n      //     .attr({\n      //         fill: util.isTruish(instance.started) ? '#fff' : '#000',\n      //         textAnchor: 'middle',\n      //         'class': 'name',\n      //         'clip-path': 'url(#chan-clip)'\n      //     });\n      //\n      // var tdefText = ui.editor\n      //     .text(0, 10, instance.typeDefinition.name)\n      //     .attr({\n      //         fill: 'white',\n      //         textAnchor: 'middle',\n      //         'clip-path': 'url(#chan-clip)'\n      //     });\n\n      var channel = ui.editor\n        .group()\n        .attr({\n          'class': 'instance chan',\n          'data-path': instance.path()\n        })\n        .append(bg)\n        // .append(nameText)\n        // .append(tdefText)\n        .selectable(instance)\n        .draggable()\n        .dragMove(function () {\n          var args = arguments;\n          instance.bindings.array.forEach(function (binding) {\n            //factory.createBinding(binding);\n            var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n            elem.data('startPtDrag').apply(elem, args);\n          });\n        })\n        .dragEnd(function () {\n          var args = arguments;\n\n          // update bindings coords when done\n          instance.bindings.array.forEach(function (binding) {\n            var elem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n            if (elem) {\n              elem.data('dragEnd').forEach(function (handler) {\n                handler.apply(elem, args);\n              });\n            }\n          });\n        })\n        .relocate(instance);\n\n      bg\n        .mousemove(function (e, cx, cy) {\n          clearTimeout(this.data('showName'));\n          var timeout = setTimeout(function () {\n            var pt = uiUtils.getPointInEditor(cx, cy + 5),\n              textAnchor, x;\n            var width = ui.editor.getBBox().width;\n            if (pt.x > (width / 2)) {\n              x = -(CHANNEL_RADIUS * 2);\n              textAnchor = 'end';\n            } else {\n              x = CHANNEL_RADIUS * 2;\n              textAnchor = 'start';\n            }\n            var elem = channel.select('.name');\n            if (elem) {\n              elem.attr({ x: x, textAnchor: textAnchor });\n            } else {\n              channel.append(ui.editor\n                .text(x, 0, instance.name + ': ' + instance.typeDefinition.name)\n                .attr({\n                  fill: util.isTruish(instance.started) ? '#fff' : '#000',\n                  textAnchor: textAnchor,\n                  'class': 'name'\n                }));\n            }\n          }, 300);\n          this.data('showName', timeout);\n        })\n        .mouseout(function () {\n          clearTimeout(this.data('showName'));\n          var elem = channel.select('.name');\n          if (elem) {\n            elem.remove();\n          }\n        });\n\n      ui.updateValidity(instance);\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('uiCreateBinding', function (uiUtils, CHANNEL_RADIUS) {\n    return function (ui, binding) {\n      if (binding.hub && binding.port) {\n        var portElem = ui.editor.select('.comp[data-path=\"' + binding.port.eContainer().path() + '\"] .port[data-name=\"' + binding.port.name + '\"]'),\n          chanElem = ui.editor.select('.chan[data-path=\"' + binding.hub.path() + '\"]'),\n          bindingElem = ui.editor.select('.binding[data-path=\"' + binding.path() + '\"]');\n\n        if (portElem && chanElem) {\n          var coords = uiUtils.computeBindingCoords(portElem, chanElem);\n          if (bindingElem) {\n            bindingElem.data('coords', coords);\n            var path0 = bindingElem\n              .select('.bg')\n              .attr({\n                d: 'M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y\n              });\n            var pt0 = path0.getPointAtLength(CHANNEL_RADIUS + 1);\n            path0.attr({ d: 'M' + pt0.x + ',' + pt0.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n          } else {\n            var bindingBg = ui.editor\n              .path('M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y)\n              .attr({\n                fill: 'none',\n                stroke: (binding.port.getRefInParent() === 'provided') ? '#ECCA40' : '#C60808',\n                strokeWidth: 5,\n                strokeLineCap: 'round',\n                strokeLineJoin: 'round',\n                opacity: 0.7,\n                'class': 'bg'\n              })\n              .mouseover(function () {\n                this.attr({\n                  opacity: 0.85,\n                  strokeWidth: 6\n                });\n              })\n              .mouseout(function () {\n                this.attr({\n                  opacity: 0.7,\n                  strokeWidth: 5\n                });\n              });\n\n            var pt1 = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n            bindingBg.attr({ d: 'M' + pt1.x + ',' + pt1.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n\n            ui.editor\n              .group()\n              .attr({\n                'class': 'binding',\n                'data-path': binding.path()\n              })\n              .data('coords', coords)\n              .append(bindingBg)\n              .selectable()\n              .firstDragMove(function () {\n                this.appendTo(ui.editor);\n              })\n              .startPtDrag(function (dx, dy) {\n                var coords = this.data('coords');\n                var chanDx = coords.chan.x + dx,\n                  chanDy = coords.chan.y + dy;\n\n                if (coords.port.x > chanDx) {\n                  coords.middle.x = chanDx + (coords.port.x - chanDx) / 2;\n                } else {\n                  coords.middle.x = coords.port.x + (chanDx - coords.port.x) / 2;\n                }\n\n                coords.middle.y = ((coords.port.y >= chanDy) ? coords.port.y : chanDy) + 20;\n\n                bindingBg.attr({\n                  d: 'M' + chanDx + ',' + chanDy + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y\n                });\n                var pt = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n                bindingBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + coords.port.x + ',' + coords.port.y });\n              })\n              .endPtDrag(function (dx, dy) {\n                var coords = this.data('coords');\n                var portDx = coords.port.x + dx,\n                  portDy = coords.port.y + dy;\n\n                if (portDx > coords.chan.x) {\n                  coords.middle.x = coords.chan.x + (portDx - coords.chan.x) / 2;\n                } else {\n                  coords.middle.x = portDx + (coords.chan.x - portDx) / 2;\n                }\n\n                coords.middle.y = ((portDy >= coords.chan.y) ? portDy : coords.chan.y) + 20;\n\n                bindingBg.attr({\n                  d: 'M' + coords.chan.x + ',' + coords.chan.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + portDx + ',' + portDy\n                });\n                var pt = bindingBg.getPointAtLength(CHANNEL_RADIUS + 1);\n                bindingBg.attr({ d: 'M' + pt.x + ',' + pt.y + ' Q' + coords.middle.x + ',' + coords.middle.y + ' ' + portDx + ',' + portDy });\n              })\n              .dragEnd(function () {\n                var portElem = ui.editor.select(\n                    '.comp[data-path=\"' + binding.port.eContainer().path() + '\"] ' +\n                    '.port[data-name=\"' + binding.port.name + '\"]'),\n                  chanElem = ui.editor.select('.chan[data-path=\"' + binding.hub.path() + '\"]');\n                this.data('coords', uiUtils.computeBindingCoords(portElem, chanElem));\n              });\n          }\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('stringToNumber', function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function (value) {\n          return value;\n        });\n        ngModel.$formatters.push(function (value) {\n          return parseFloat(value);\n        });\n      }\n    };\n  });\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .factory('kRegistry', KevoreeRegistryService);\n\n  KevoreeRegistryService.$inject = ['$q', 'storage', 'kFactory', 'KEVOREE_REGISTRY_URL'];\n\n  function KevoreeRegistryService($q, storage, kFactory, KEVOREE_REGISTRY_URL) {\n    var cachedUrl = null;\n    var loader = kFactory.createJSONLoader();\n\n    // INIT REGISTRY URL\n    var storedUrl = storage.get('registry');\n    if (storedUrl) {\n      try {\n        setUrl(new URL(storedUrl));\n      } catch (ignore) {\n        Notification.error({\n          title: 'Kevoree Registry',\n          message: 'Stored URL in local storage is malformed. You should update it',\n          delay: 8000\n        });\n      }\n    } else {\n      setUrl(new URL(KEVOREE_REGISTRY_URL));\n    }\n\n    return {\n      getUrl: getUrl,\n      setUrl: setUrl,\n      transformTdef: transformTdef,\n      namespace: {\n        all: allNamespaces\n      },\n      tdef: {\n        getLatestsByNamespace: getLatestTdefsByNamespace,\n        getAllByNamespaceAndName: getAllTdefsByNamespaceAndName,\n      },\n      du: {\n        getReleases: getDuReleases,\n        getLatests: getDuLatests,\n      }\n    };\n\n    function setUrl(url) {\n      var port;\n      if (url.port && url.port.length > 0) {\n        port = parseInt(url.port);\n      } else {\n        if (url.protocol === 'http:') {\n          port = 80;\n        } else {\n          port = 443;\n        }\n      }\n      TinyConf.set('registry.host', url.hostname);\n      TinyConf.set('registry.port', port);\n      TinyConf.set('registry.ssl', url.protocol === 'https:');\n      cachedUrl = url;\n      storage.set('registry', url.toString());\n    }\n\n    function getUrl() {\n      return cachedUrl;\n    }\n\n    function allNamespaces() {\n      return $q.when(KevoreeRegistryClient.namespace.all());\n    }\n\n    function getLatestTdefsByNamespace(namespace) {\n      return $q.when(KevoreeRegistryClient.tdef.getLatestsByNamespace(namespace))\n        .then(function (tdefs) {\n          tdefs.sort(function (a, b) {\n            if (a.name < b.name) {\n              return -1;\n            }\n            if (a.name > b.name) {\n              return 1;\n            }\n            return 0;\n          });\n          return tdefs.map(transformTdef);\n        });\n    }\n\n    function getAllTdefsByNamespaceAndName(namespace, name) {\n      return $q.when(KevoreeRegistryClient.tdef.getAllByNamespaceAndName(namespace, name))\n        .then(function (tdefs) {\n          return tdefs.map(transformTdef);\n        });\n    }\n\n    function getDuReleases(namespace, name, version) {\n      return $q.when(KevoreeRegistryClient.du.getReleases(namespace, name, version))\n        .then(function (dus) {\n          return dus.map(transformDu);\n        });\n    }\n\n    function getDuLatests(namespace, name, version) {\n      return $q.when(KevoreeRegistryClient.du.getLatests(namespace, name, version))\n        .then(function (dus) {\n          return dus.map(transformDu);\n        });\n    }\n\n    function transformTdef(tdef) {\n      try {\n        tdef.model = loader.loadModelFromString(tdef.model).get(0);\n        tdef.type = inferType(tdef.model);\n        tdef.description = getDescription(tdef.model);\n      } catch (err) {\n        tdef.error = 'Unable to parse model';\n        tdef.type = inferTypeFromJSON(tdef.model);\n        tdef.description = getDescriptionFromJSON(tdef.model);\n      }\n      return tdef;\n    }\n\n    function transformDu(du) {\n      try {\n        var model = loader.loadModelFromString(du.model).get(0);\n        // TODO hacky way to get directly to the deployUnits\n        // because legacy-wise we upload a full model for DeployUnits on\n        // the registry but that is *not* useful => strip it down here\n        du.model = model.packages.array[0].deployUnits.array[0];\n      } catch (err) {\n        du.error = 'Unable to parse model';\n      }\n      return du;\n    }\n\n    function inferType(model) {\n      if (model.metaClassName() === 'org.kevoree.NodeType') {\n        return 'node';\n      } else if (model.metaClassName() === 'org.kevoree.ComponentType') {\n        return 'component';\n      } else if (model.metaClassName() === 'org.kevoree.ChannelType') {\n        return 'channel';\n      } else if (model.metaClassName() === 'org.kevoree.GroupType') {\n        return 'group';\n      }\n    }\n\n    function getDescription(model) {\n      var meta = model.findMetaDataByID('description');\n      if (meta) {\n        return meta.value;\n      } else {\n        return null;\n      }\n    }\n\n    function inferTypeFromJSON(model) {\n      if (model.class.startsWith('org.kevoree.NodeType')) {\n        return 'node';\n      } else if (model.class.startsWith('org.kevoree.ComponentType')) {\n        return 'component';\n      } else if (model.class.startsWith('org.kevoree.ChannelType')) {\n        return 'channel';\n      } else if (model.class.startsWith('org.kevoree.GroupType')) {\n        return 'group';\n      }\n    }\n\n    function getDescriptionFromJSON(model) {\n      var desc = model.metaData.find(function (meta) {\n        return meta.name === 'description';\n      });\n      return desc ? desc.value : null;\n    }\n  }\n})();\n","'use strict';\n\nangular.module('editorApp')\n  .directive('loadingOverlay', function (kEditor) {\n    return {\n      restrict: 'A',\n      scope: false,\n      link: function (scope, elem) {\n        var id = 'id_' + Math.floor((Math.random()*10000)+1);\n        var overlay = jQuery('<div>', { id: id, class: 'overlay' }).append(\n            jQuery('<p>', { class: 'center-message' }).html('Loading model...'));\n\n        function preSetModelHandler() {\n          elem.append(overlay);\n        }\n\n        function postSetModelHandler() {\n          overlay.remove();\n        }\n\n        var unregister = kEditor.addPreSetModelHandler(preSetModelHandler);\n        var unregister2 = kEditor.addPostSetModelHandler(postSetModelHandler);\n        scope.$on('$destroy', function () {\n          unregister();\n          unregister2();\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kScript', function () {\n    var noop = function noop() {};\n    var logger = {\n      info: function (tag, msg) {\n        console.log('KevScript', msg); // eslint-disable-line\n      },\n      debug: function (tag, msg) {\n        console.debug('KevScript', msg); // eslint-disable-line\n      },\n      error: function (tag, msg) {\n        console.error('KevScript', msg); // eslint-disable-line\n      },\n      warn: function (tag, msg) {\n        console.warn('KevScript', msg); // eslint-disable-line\n      },\n      toString: function () {\n        return 'KevScript';\n      },\n      setLevel: noop,\n      setTag: noop\n    };\n\n    return new KevoreeKevscript(logger, {\n      resolver: KevoreeKevscript.Resolvers.tagResolverFactory(logger,\n        KevoreeKevscript.Resolvers.modelResolverFactory(logger,\n          KevoreeKevscript.Resolvers.registryResolverFactory(logger)))\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kFactory', function () {\n    return new KevoreeLibrary.factory.DefaultKevoreeFactory();\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .directive('instanceName', function (kEditor) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        instance: '&instance',\n        instanceType: '&instanceType'\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        ctrl.$parsers.push(function checkUnicity(value) {\n          var model = kEditor.getModel();\n          var elem;\n\n          switch (scope.instanceType()) {\n            case 'node':\n              elem = model.findNodesByID(value);\n              break;\n            case 'group':\n              elem = model.findGroupsByID(value);\n              break;\n            case 'channel':\n              elem = model.findHubsByID(value);\n              break;\n            case 'component':\n              elem = scope.instance().eContainer().findComponentsByID(value);\n              break;\n          }\n\n          if (elem) {\n            // something has already this name\n            if (elem.path() === scope.instance().path()) {\n              // it is the same old value, everything is fine\n              ctrl.$setValidity('notUniqueName', true);\n            } else {\n              // it matches another instance in the model => wrong\n              ctrl.$setValidity('notUniqueName', false);\n            }\n          } else {\n            // name is ok\n            ctrl.$setValidity('notUniqueName', true);\n          }\n          return value;\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .factory('kInstance', function (kFactory, kModelHelper) {\n    return {\n      /**\n       * Init instance dictionaries with default values and stuff\n       * @param instance\n       */\n      initDictionaries: function (instance) {\n        // create dictionary values if none set\n        instance.dictionary = instance.dictionary || kFactory.createDictionary().withGenerated_KMF_ID('0.0');\n        if (instance.typeDefinition.dictionaryType) {\n          instance.typeDefinition.dictionaryType.attributes\n            .array.forEach(function (attr) {\n              var val;\n              if (!kModelHelper.isTruish(attr.fragmentDependant)) {\n                // attribute is not fragment dependant\n                val = instance.dictionary.findValuesByID(attr.name);\n                if (!val) {\n                  val = kFactory.createValue();\n                  val.name = attr.name;\n                  val.value = attr.defaultValue;\n                  instance.dictionary.addValues(val);\n                }\n              } else {\n                // attribute is fragment dependant\n                // create fragment dictionaries if needed\n                switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n                  case 'channel':\n                    instance.bindings.array.forEach(function (binding) {\n                      if (binding.port) {\n                        if (!instance.findFragmentDictionaryByID(binding.port.eContainer().eContainer().name)) {\n                          var fragDic = kFactory.createFragmentDictionary();\n                          fragDic.name = binding.port.eContainer().eContainer().name;\n                          instance.addFragmentDictionary(fragDic);\n                        }\n                      }\n                    });\n                    break;\n\n                  case 'group':\n                    instance.subNodes.array.forEach(function (node) {\n                      if (!instance.findFragmentDictionaryByID(node.name)) {\n                        var fragDic = kFactory.createFragmentDictionary();\n                        fragDic.name = node.name;\n                        instance.addFragmentDictionary(fragDic);\n                      }\n                    });\n                    break;\n                }\n                // add default value to fragment dictionaries that does not already have them\n                instance.fragmentDictionary.array.forEach(function (fragDic) {\n                  val = fragDic.findValuesByID(attr.name);\n                  if (!val) {\n                    val = kFactory.createValue();\n                    val.name = attr.name;\n                    val.value = attr.defaultValue;\n                    fragDic.addValues(val);\n                  }\n                });\n              }\n            });\n        }\n      },\n\n      /**\n       * Init instance fragment dictionaries (normal dictionary will not be init)\n       * @param instance\n       */\n      initFragmentDictionaries: function (instance) {\n        if (instance.typeDefinition.dictionaryType) {\n          instance.typeDefinition.dictionaryType.attributes\n            .array.forEach(function (attr) {\n              var val;\n              if (kModelHelper.isTruish(attr.fragmentDependant)) {\n                // attribute is fragment dependant\n                // create fragment dictionaries if needed\n                switch (kModelHelper.getTypeDefinitionType(instance.typeDefinition)) {\n                  case 'channel':\n                    instance.bindings.array.forEach(function (binding) {\n                      if (binding.port) {\n                        if (!instance.findFragmentDictionaryByID(binding.port.eContainer().eContainer().name)) {\n                          var fragDic = kFactory.createFragmentDictionary();\n                          fragDic.name = binding.port.eContainer().eContainer().name;\n                          instance.addFragmentDictionary(fragDic);\n                        }\n                      }\n                    });\n                    break;\n\n                  case 'group':\n                    instance.subNodes.array.forEach(function (node) {\n                      if (!instance.findFragmentDictionaryByID(node.name)) {\n                        var fragDic = kFactory.createFragmentDictionary();\n                        fragDic.name = node.name;\n                        instance.addFragmentDictionary(fragDic);\n                      }\n                    });\n                    break;\n                }\n                // add default value to fragment dictionaries that does not already have them\n                instance.fragmentDictionary.array.forEach(function (fragDic) {\n                  val = fragDic.findValuesByID(attr.name);\n                  if (!val) {\n                    val = kFactory.createValue();\n                    val.name = attr.name;\n                    val.value = attr.defaultValue;\n                    fragDic.addValues(val);\n                  }\n                });\n              }\n            });\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('editorApp').factory('kEditor', function ($timeout, kFactory, kModelHelper, kInstance, ui, Notification, KWE_POSITION, KWE_FOLDED, KWE_SELECTED, KWE_TAG, CHANNEL_RADIUS, GROUP_RADIUS) {\n  function modelReactor(editor) {\n    /**\n     * Updates UI according to model changes\n     * @param trace\n     */\n    return function (trace) {\n      var fragDic,\n        highestNode;\n      editor.invokeModelUpdateListeners();\n\n      function processRefreshRecursively(node) {\n        node.components.array.forEach(function (comp) {\n          comp.provided.array.forEach(function (port) {\n            port.bindings.array.forEach(function (binding) {\n              if (ui.editor) {\n                ui.createBinding(binding);\n              }\n            });\n          });\n          comp.required.array.forEach(function (port) {\n            port.bindings.array.forEach(function (binding) {\n              if (ui.editor) {\n                ui.createBinding(binding);\n              }\n            });\n          });\n        });\n        node.groups.array.forEach(function (group) {\n          if (ui.editor) {\n            ui.createGroupWire(group, node);\n          }\n        });\n        node.hosts.array.forEach(processRefreshRecursively);\n      }\n\n      if (trace.elementAttributeName === 'typeDefinitions' || trace.elementAttributeName === 'packages') {\n        editor.invokeModelUpdateListeners('tdefs');\n      }\n\n      try {\n        if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.REMOVE) {\n          //console.log('REMOVE', trace);\n          if (trace.previousPath === '/') {\n            if (trace.elementAttributeName === 'hubs' || trace.elementAttributeName === 'nodes' || trace.elementAttributeName === 'groups') {\n              if (ui.editor) {\n                ui.deleteInstance(trace.source, trace.previous_value); // jshint ignore:line\n              }\n              editor.invokeModelUpdateListeners('selected');\n            } else if (trace.elementAttributeName === 'mBindings') {\n              if (ui.editor) {\n                ui.deleteBinding(trace.previous_value); // jshint ignore:line\n              }\n            }\n          } else {\n            if (trace.elementAttributeName === 'hosts' || trace.elementAttributeName === 'components') {\n              if (ui.editor) {\n                ui.deleteInstance(trace.source, trace.previous_value); // jshint ignore:line\n              }\n              editor.invokeModelUpdateListeners('selected');\n\n            } else if (trace.elementAttributeName === 'groups') {\n              // means detaching a node from a group\n              if (ui.editor) {\n                ui.deleteGroupWire(trace.previous_value, trace.previousPath); // jshint ignore:line\n              }\n              fragDic = trace.value.findFragmentDictionaryByID(trace.source.name);\n              if (fragDic) {\n                fragDic.delete();\n              }\n            } else if (trace.elementAttributeName === 'bindings') {\n              if (trace.source.getRefInParent() === 'hubs') {\n                trace.source.fragmentDictionary.array.forEach(function (dic) {\n                  var hasBinding = false;\n\n                  // check if there is a binding for this dictionnary\n                  for (var i = 0; i < trace.source.bindings.size(); i++) {\n                    var binding = trace.source.bindings.get(i);\n                    if (binding.port) {\n                      if (binding.port.eContainer().eContainer().name === dic.name) {\n                        hasBinding = true;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (!hasBinding) {\n                    // no binding found for this dictionary => delete it\n                    dic.delete();\n                  }\n                });\n              }\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.REMOVE_ALL) {\n          //console.log('REMOVE_ALL', trace);\n          if (trace.previousPath === '/') {\n            switch (trace.elementAttributeName) {\n              case 'hubs':\n                if (ui.editor) {\n                  ui.deleteChannels();\n                }\n                break;\n\n              case 'nodes':\n                if (ui.editor) {\n                  ui.deleteNodes();\n                }\n                break;\n\n              case 'groups':\n                if (ui.editor) {\n                  ui.deleteGroups();\n                }\n                break;\n\n              case 'mBindings':\n                if (ui.editor) {\n                  ui.deleteBindings();\n                }\n                break;\n            }\n          } else {\n            switch (trace.elementAttributeName) {\n              case 'groups':\n                trace.value.array.forEach(function (group) {\n                  if (ui.editor) {\n                    ui.deleteGroupWire(group.path(), trace.previousPath);\n                  }\n                  var fragDic = group.findFragmentDictionaryByID(trace.source.name);\n                  if (fragDic) {\n                    fragDic.delete();\n                  }\n                });\n                break;\n\n              case 'bindings':\n                trace.value.array.forEach(function (binding) {\n                  if (ui.editor) {\n                    ui.deleteBinding(binding.path());\n                  }\n                  if (!binding.hub || !binding.port) {\n                    binding.delete();\n                  }\n                });\n                //uiFactory.deleteBindings(trace.previousPath);\n                // TODO check if there is at least one binding to this node, otherwise\n                // we can remove all fragmentDictionaries between those bindings' channels and nodes\n                break;\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.ADD) {\n          //console.log('ADD', trace);\n          if (trace.previousPath === '/') {\n            switch (trace.elementAttributeName) {\n              case 'hubs':\n                //console.log('ADD hubs', trace);\n                if (ui.editor) {\n                  ui.createChannel(trace.value);\n                }\n                break;\n\n              case 'nodes':\n              case 'hosts':\n                //console.log('ADD nodes|hosts', trace);\n                if (ui.editor) {\n                  ui.createNode(trace.value);\n                  highestNode = kModelHelper.getHighestNode(trace.value);\n                  if (highestNode) {\n                    ui.refreshNode(highestNode.path());\n                  }\n                }\n                break;\n\n              case 'groups':\n                //console.log('ADD groups', trace);\n                if (ui.editor) {\n                  ui.createGroup(trace.value);\n                }\n                break;\n\n              case 'mBindings':\n                //console.log('ADD mBinding', trace);\n                if (ui.editor) {\n                  ui.createBinding(trace.value);\n                }\n                break;\n            }\n          } else {\n            switch (trace.elementAttributeName) {\n              case 'groups':\n                //console.log('ADD .groups', trace);\n                if (ui.editor) {\n                  ui.createGroupWire(trace.value, trace.source);\n                }\n                break;\n\n              case 'components':\n                //console.log('ADD .components', trace);\n                if (ui.editor) {\n                  ui.createComponent(trace.value);\n                }\n\n                highestNode = kModelHelper.getHighestNode(trace.value);\n                if (ui.editor) {\n                  ui.refreshNode(highestNode.path());\n                }\n                processRefreshRecursively(highestNode);\n                break;\n\n              case 'hosts':\n                //console.log('ADD .hosts', trace.source.path(), trace.value.path());\n                if (ui.editor) {\n                  ui.createNode(trace.value);\n                }\n\n                // recursively recreate children UIs\n                trace.value.components.array.forEach(function (comp) {\n                  if (ui.editor) {\n                    ui.createComponent(comp);\n                  }\n                });\n                trace.value.hosts.array.sort(function (a, b) {\n                  // TODO optimize this to loop only once to create node tree heights\n                  return kModelHelper.getNodeTreeHeight(b) - kModelHelper.getNodeTreeHeight(a);\n                }).forEach(function updateChildNode(childNode) {\n                  if (ui.editor) {\n                    ui.createNode(childNode);\n                  }\n                  childNode.components.array.forEach(function (comp) {\n                    if (ui.editor) {\n                      ui.createComponent(comp);\n                    }\n                  });\n                  childNode.hosts.array.forEach(updateChildNode);\n                });\n\n                highestNode = kModelHelper.getHighestNode(trace.source);\n                if (ui.editor) {\n                  ui.refreshNode(highestNode.path());\n                }\n                processRefreshRecursively(highestNode);\n                break;\n\n              case 'subNodes':\n                //console.log('ADD .subNodes', trace);\n                kInstance.initFragmentDictionaries(trace.source);\n                editor.invokeModelUpdateListeners('selected');\n                break;\n\n              case 'bindings':\n                editor.invokeModelUpdateListeners('selected');\n                break;\n\n              case 'metaData':\n                if (trace.value.name === KWE_FOLDED && trace.source.getRefInParent() === 'nodes') {\n                  if (ui.editor) {\n                    ui.toggleFold(trace.source, kModelHelper.isTruish(trace.value.value));\n                  }\n                }\n                break;\n            }\n          }\n\n        } else if (trace.etype === KevoreeLibrary.modeling.api.util.ActionType.object.SET) {\n          switch (trace.elementAttributeName) {\n            case 'name':\n              //console.log('SET name', trace);\n              if (trace.source.getRefInParent() === 'nodes') {\n                // update groups fragmentDictionaries\n                trace.source.groups.array.forEach(function (group) {\n                  fragDic = group.findFragmentDictionaryByID(trace.previous_value); // jshint ignore:line\n                  if (fragDic) {\n                    fragDic.name = trace.source.name;\n                  }\n                });\n                // update bindings fragmentDictionaries\n                trace.source.components.array.forEach(function (comp) {\n                  function processPort(port) {\n                    port.bindings.array.forEach(function (binding) {\n                      if (binding.hub) {\n                        fragDic = binding.hub.findFragmentDictionaryByID(trace.previous_value); // jshint ignore:line\n                        if (fragDic) {\n                          fragDic.name = trace.source.name;\n                        }\n                      }\n                    });\n                  }\n\n                  comp.provided.array.forEach(processPort);\n                  comp.required.array.forEach(processPort);\n                });\n              }\n              if (ui.editor) {\n                ui.updateInstance(trace.previousPath, trace.source);\n              }\n              break;\n\n            case 'value':\n              // console.log('SET value', trace);\n              if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_POSITION) {\n                if (ui.editor) {\n                  ui.updatePosition(trace.source.eContainer());\n                }\n                if (trace.source.eContainer().getRefInParent() === 'nodes') {\n                  processRefreshRecursively(trace.source.eContainer());\n                } else if (trace.source.eContainer().getRefInParent() === 'groups') {\n                  trace.source.eContainer().subNodes.array.forEach(function (node) {\n                    if (ui.editor) {\n                      ui.createGroupWire(trace.source.eContainer(), node);\n                    }\n                  });\n                } else if (trace.source.eContainer().getRefInParent() === 'hubs') {\n                  trace.source.eContainer().bindings.array.forEach(function (binding) {\n                    if (ui.editor) {\n                      ui.createBinding(binding);\n                    }\n                  });\n                }\n              } else if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_FOLDED) {\n                // fold/unfold\n                if (trace.source.eContainer().getRefInParent() === 'nodes') {\n                  if (ui.editor) {\n                    ui.toggleFold(trace.source.eContainer(), kModelHelper.isTruish(trace.source.value));\n                  }\n                }\n              } else if (trace.source.eContainer().getRefInParent() === 'dictionary') {\n                if (ui.editor) {\n                  ui.updateValidity(trace.source.eContainer().eContainer());\n                }\n              } else if (trace.source.getRefInParent() === 'metaData' && trace.source.name === KWE_SELECTED) {\n                editor.invokeModelUpdateListeners('selected');\n              }\n              break;\n\n            case 'started':\n              //console.log('SET started', trace);\n              if (ui.editor) {\n                ui.updateInstance(trace.previousPath, trace.source);\n              }\n              break;\n\n            case 'typeDefinition':\n              if (trace.value !== null) {\n                switch (trace.source.getRefInParent()) {\n                  case 'components':\n                    //console.log('SET typeDef', trace);\n                    if (ui.editor) {\n                      ui.updateCompTypeDefinition(trace.source, trace.previous_value); // jshint ignore:line\n                    }\n                    break;\n\n                  default:\n                    //console.log('SET typeDef unhandled', trace);\n                    break;\n                }\n              }\n              break;\n\n            default:\n              //console.log('SET ignored', trace);\n              break;\n          }\n        }\n      } catch (err) {\n        Notification.error({\n          title: 'Error',\n          message: 'Unable to update model'\n        });\n        console.error(err.stack); // eslint-disable-line\n      }\n    };\n  }\n\n  function KevoreeEditor() {\n    this.model = kFactory.createContainerRoot().withGenerated_KMF_ID(0);\n    kFactory.root(this.model);\n    this.preSetModelHandler = [];\n    this.postSetModelHandler = [];\n    this.modelUpdateListenersEnabled = true;\n    this.modelUpdateListeners = [];\n    this.newModelListeners = [];\n    this.modelListener = {\n      elementChanged: modelReactor(this)\n    };\n    ui.setModel(this.model);\n  }\n\n  KevoreeEditor.prototype = {\n    /**\n     *\n     * @returns {*}\n     */\n    getModel: function () {\n      return this.model;\n    },\n\n    /**\n     *\n     * @param model\n     */\n    setModel: function (model, callback) {\n      this.preSetModelHandler.forEach(function (handler) {\n        handler();\n      });\n      setTimeout(function () {\n        var error;\n        try {\n          KevoreeValidator(model); // jshint ignore:line\n          this.model = model;\n          kFactory.root(this.model);\n\n          this.model.addModelTreeListener(this.modelListener);\n\n          ui.setModel(model);\n\n          this.invokeNewModelListeners();\n        } catch (err) {\n          error = err;\n        } finally {\n          if (error) {\n            console.error('[editor.factory.setModel()] Error setting model'); // eslint-disable-line\n            console.error(error.stack); // eslint-disable-line\n          }\n          this.postSetModelHandler.forEach(function (handler) {\n            handler();\n          });\n          if (callback) {\n            $timeout(angular.noop, 100).then(function () {\n              callback(error);\n            });\n          }\n        }\n      }.bind(this), 20);\n    },\n\n    /**\n     *\n     * @param model\n     */\n    merge: function (model) {\n      this.model.removeModelTreeListener(this.modelListener);\n      var compare = kFactory.createModelCompare();\n      compare.merge(this.model, model).applyOn(this.model);\n      kFactory.root(this.model);\n      this.model.addModelTreeListener(this.modelListener);\n      ui.setModel(this.model);\n      this.drawModel();\n    },\n\n    addPreSetModelHandler: function (handler) {\n      var index = this.preSetModelHandler.push(handler) - 1;\n      return function () {\n        this.preSetModelHandler.splice(index, 1);\n      }.bind(this);\n    },\n\n    addPostSetModelHandler: function (handler) {\n      var index = this.postSetModelHandler.push(handler) - 1;\n      return function () {\n        this.postSetModelHandler.splice(index, 1);\n      }.bind(this);\n    },\n\n    /**\n     * Add a listener that will be invoked each time a new model is set\n     * @param {string} id\n     * @param {Function} listener\n     * @returns {Function} unregister listener\n     */\n    addNewModelListener: function (id, listener) {\n      if (!this.newModelListeners[id]) {\n        this.newModelListeners[id] = [];\n      }\n      this.newModelListeners[id].push(listener);\n\n      return function () {\n        if (this.newModelListeners[id]) {\n          this.newModelListeners[id].splice(this.newModelListeners[id].indexOf(listener), 1);\n        }\n      }.bind(this);\n    },\n\n    /**\n     * Add listener that will be invoked on each update of the model\n     * @param {string} id\n     * @param {Function} listener\n     * @param {boolean} strict optional flag that will prevent this\n     *                  listener to be called unless the invoke method\n     *                  is called using this precise id as event name\n     * @returns {Function} unregister listener\n     */\n    addModelUpdateListener: function (id, listener, strict) {\n      if (!this.modelUpdateListeners[id]) {\n        this.modelUpdateListeners[id] = [];\n      }\n      var item = {\n        strict: strict,\n        listener: listener\n      };\n      this.modelUpdateListeners[id].push(item);\n\n      return function () {\n        if (this.modelUpdateListeners[id]) {\n          this.modelUpdateListeners[id].splice(this.modelUpdateListeners[id].indexOf(item), 1);\n        }\n      }.bind(this);\n    },\n\n    /**\n     * @param [string] optional event\n     */\n    invokeModelUpdateListeners: function (event) {\n      if (this.modelUpdateListenersEnabled) {\n        Object.keys(this.modelUpdateListeners).forEach(function (id) {\n          this.modelUpdateListeners[id].forEach(function (item) {\n            if (item.strict) {\n              if (id === event) {\n                item.listener();\n              }\n            } else {\n              item.listener();\n            }\n          });\n        }.bind(this));\n      }\n    },\n\n    invokeNewModelListeners: function () {\n      Object.keys(this.newModelListeners).forEach(function (id) {\n        this.newModelListeners[id].forEach(function (listener) {\n          listener();\n        });\n      }.bind(this));\n    },\n\n    disableModelUpdateListeners: function () {\n      this.modelUpdateListenersEnabled = false;\n    },\n\n    enableModelUpdateListeners: function () {\n      this.modelUpdateListenersEnabled = true;\n    },\n\n    removeAllListeners: function () {\n      var id;\n      for (id in this.modelUpdateListeners) {\n        delete this.modelUpdateListeners[id];\n      }\n      for (id in this.newModelListeners) {\n        delete this.newModelListeners[id];\n      }\n    },\n\n    removeModelUpdateListeners: function (id) {\n      delete this.modelUpdateListeners[id];\n    },\n\n    removeNewModelListeners: function (id) {\n      delete this.newModelListeners[id];\n    },\n\n    /**\n     * Try to find a better position for each instances in order to prevent\n     * UI overlapping in editor\n     */\n    fixOverlapping: function () {\n      function relocate(instance, pos) {\n        var meta = instance.findMetaDataByID(KWE_POSITION);\n        if (!meta) {\n          meta = kFactory.createValue();\n          meta.name = KWE_POSITION;\n          meta.value = JSON.stringify(pos);\n          instance.addMetaData(meta);\n        } else {\n          meta.value = JSON.stringify(pos);\n        }\n      }\n\n      var groupX = GROUP_RADIUS + 20;\n      this.model.groups.array.forEach(function (group) {\n        relocate(group, {\n          x: groupX,\n          y: GROUP_RADIUS + 20\n        });\n        groupX += GROUP_RADIUS * 2 + 20;\n      });\n\n      var chanX = CHANNEL_RADIUS + 20;\n      this.model.hubs.array.forEach(function (hub) {\n        relocate(hub, {\n          x: chanX,\n          y: 180\n        });\n        chanX += CHANNEL_RADIUS * 2 + 20;\n      });\n\n      var nodeX = 25;\n      this.model.nodes.array.forEach(function (node) {\n        if (!node.host) {\n          // root node (= no parent)\n          var height = kModelHelper.getNodeTreeHeight(node);\n          relocate(node, {\n            x: nodeX,\n            y: 220\n          });\n          nodeX += 230 + (height * 20);\n        }\n      });\n    },\n\n    /**\n     * Create svg UIs based on current model\n     */\n    drawModel: function () {\n      if (ui.editor) {\n        this.model.hubs.array.forEach(function (instance) {\n          ui.createChannel(instance);\n        });\n\n        this.model.nodes.array.sort(function (a, b) {\n          // TODO optimize this to loop only once to create node tree heights\n          return kModelHelper.getNodeTreeHeight(b) - kModelHelper.getNodeTreeHeight(a);\n        }).forEach(function (instance) {\n          ui.createNode(instance);\n          instance.components.array.forEach(function (instance) {\n            ui.createComponent(instance);\n          });\n        });\n\n        this.model.groups.array.forEach(function (instance) {\n          ui.createGroup(instance);\n          instance.subNodes.array.forEach(function (node) {\n            ui.createGroupWire(instance, node);\n          });\n        });\n\n        this.model.mBindings.array.forEach(function (binding) {\n          ui.createBinding(binding);\n        });\n\n        ui.order();\n        this.model.select('**/metaData[name=' + KWE_FOLDED + ']').array.forEach(function (meta) {\n          ui.toggleFold(meta.eContainer(), kModelHelper.isFolded(meta.eContainer()));\n        });\n      }\n    },\n\n    /**\n     * @returns {boolean} true if model has errors\n     */\n    modelHasErrors: function () {\n      // TODO\n      return false;\n    }\n  };\n\n  return new KevoreeEditor();\n});\n","'use strict';\n\nangular.module('editorApp')\n  .directive('kdic', function () {\n    return {\n      restrict: 'E',\n      scope: {\n        name: '=',\n        attrs: '=',\n        dictionary: '=',\n        fragment: '='\n      },\n      templateUrl: 'app/components/kevoree/dictionary.html',\n      controller: function ($scope) {\n        $scope.isTruish = function (val) {\n          return (val === 'true' || val === true || val > 0);\n        };\n\n        $scope.isReadOnly = function () {\n          if ($scope.dictionary && $scope.dictionary.eContainer()) {\n            var val = $scope.dictionary.eContainer().findMetaDataByID('access_mode');\n            return (val && val.value === 'read-only');\n          }\n          return false;\n        };\n      }\n    };\n  });\n","(function () {\n  'use strict';\n\n  angular.module('editorApp')\n    .component('dusList', {\n      templateUrl: 'app/components/deploy-unit/list/dus-list.html',\n      bindings: { dus: '<' },\n      controller: DusListController,\n    });\n\n  DusListController.$inject = ['kRegistry'];\n\n  function DusListController(kRegistry) {\n    var ctrl = this;\n\n    ctrl.baseUrl = kRegistry.getUrl();\n    ctrl.platform = platform;\n\n    function platform(du) {\n      if (du.platform) {\n        if (du.platform === 'js') {\n          return 'javascript';\n        } else {\n          return du.platform;\n        }\n      } else {\n        if (du.findFiltersByID) {\n          var platform = du.findFiltersByID('platform').value;\n          if (platform === 'js') {\n            return 'javascript';\n          } else {\n            return platform;\n          }\n        }\n      }\n    }\n  }\n})();\n","angular.module('editorApp')\n  .run(function () {\n    CodeMirror.defineMode('kevscript', function () {\n      var STATES = {\n        start: [\n          { regex: /\\/\\/.*/, token: 'comment' },\n          {\n            regex: /add/,\n            token: 'statement',\n            push: 'addStmt',\n            process: function (state) {\n              state.stmt = 'add';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /set/,\n            token: 'statement',\n            push: 'setStmt',\n            process: function (state) {\n              state.stmt = 'set';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /attach/,\n            token: 'statement',\n            push: 'attachStmt',\n            process: function (state) {\n              state.stmt = 'attach';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /detach/,\n            token: 'statement',\n            push: 'detachStmt',\n            process: function (state) {\n              state.stmt = 'detach';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /move/,\n            token: 'statement',\n            push: 'moveStmt',\n            process: function (state) {\n              state.stmt = 'move';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /start/,\n            token: 'statement',\n            push: 'startStmt',\n            process: function (state) {\n              state.stmt = 'start';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /stop/,\n            token: 'statement',\n            push: 'stopStmt',\n            process: function (state) {\n              state.stmt = 'stop';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /pause/,\n            token: 'statement',\n            push: 'pauseStmt',\n            process: function (state) {\n              state.stmt = 'pause';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /remove/,\n            token: 'statement',\n            push: 'removeStmt',\n            process: function (state) {\n              state.stmt = 'remove';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /bind/,\n            token: 'statement',\n            push: 'bindStmt',\n            process: function (state) {\n              state.stmt = 'bind';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /unbind/,\n            token: 'statement',\n            push: 'unbindStmt',\n            process: function (state) {\n              state.stmt = 'unbind';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /repo/,\n            token: 'statement',\n            push: 'repoStmt',\n            process: function (state) {\n              state.stmt = 'repo';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /include/,\n            token: 'statement',\n            push: 'includeStmt',\n            process: function (state) {\n              state.stmt = 'include';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /network/,\n            token: 'statement',\n            push: 'networkStmt',\n            process: function (state) {\n              state.stmt = 'network';\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /[a-z]+/\n          }\n        ],\n        addStmt: [\n          {\n            regex: /,/,\n            token: 'delimiter'\n          },\n          {\n            regex: /:/,\n            token: 'delimiter',\n            next: 'typedef'\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n        ],\n        setStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /=/,\n            token: 'delimiter',\n            next: 'value'\n          }\n        ],\n        repoStmt: [\n          {\n            regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/,\n            token: 'string',\n            pop: true\n          },\n          {\n            regex: /'(?:[^\\\\]|\\\\.)*?(?:'|$)/,\n            token: 'string',\n            pop: true\n          }\n        ],\n        includeStmt: [\n          {\n            regex: /([a-zA-Z0-9_-]+)(:)([a-zA-Z0-9.:%@_-]+$)/,\n            token: ['version', 'delimiter', 'network'],\n            pop: true\n          },\n        ],\n        networkStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'network'\n          }\n        ],\n        attachStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelistInstancepath',\n          }\n        ],\n        detachStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelistInstancepath'\n          }\n        ],\n        moveStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelistInstancepath'\n          }\n        ],\n        removeStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelist'\n          }\n        ],\n        startStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelist'\n          }\n        ],\n        stopStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelist'\n          }\n        ],\n        pauseStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'namelist'\n          }\n        ],\n        bindStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'instancepathInstancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          }\n        ],\n        unbindStmt: [\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'instancepathInstancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          }\n        ],\n        typedef: [\n          {\n            regex: /([A-Z][a-zA-Z0-9]*)([/])/,\n            token: ['typedef', 'delimiter'],\n            next: 'tdefversion',\n            process: function (state, matches) {\n              state.typedef = matches[1];\n            }\n          },\n          {\n            regex: /[A-Z][a-zA-Z0-9]*/,\n            token: 'typedef',\n            pop: true\n          },\n          {\n            regex: /[a-z0-9]+/,\n            token: 'namespace',\n            process: function (state, matches) {\n              state.namespace = matches[0];\n            }\n          },\n          {\n            regex: /\\./,\n            token: 'delimiter'\n          },\n        ],\n        tdefversion: [\n          {\n            regex: /(LATEST)([/])/,\n            token: ['constant', 'delimiter'],\n            next: 'duversion'\n          },\n          {\n            regex: /([0-9]+)([/])/,\n            token: ['version', 'delimiter'],\n            next: 'duversion'\n          },\n          {\n            regex: /(%)([a-zA-Z0-9_-]+)(%)([/])/,\n            token: ['ctxvarbracket', 'ctxvar', 'ctxvarbracket', 'delimiter'],\n            next: 'duversion'\n          },\n          {\n            regex: /(%%)([a-zA-Z0-9_-]+)(%%)([/])/,\n            token: ['ctxvarbracket', 'ctxvar', 'ctxvarbracket', 'delimiter'],\n            next: 'duversion'\n          },\n          {\n            regex: /LATEST/,\n            token: 'constant',\n            pop: true\n          },\n          {\n            regex: /[0-9]+/,\n            token: 'version',\n            pop: true\n          },\n          {\n            regex: /(%)([a-zA-Z0-9_-]+)(%)/,\n            token: ['ctxvarbracket', 'ctxvar', 'ctxvarbracket'],\n            pop: true\n          },\n          {\n            regex: /(%%)([a-zA-Z0-9_-]+)(%%)/,\n            token: ['ctxvarbracket', 'ctxvar', 'ctxvarbracket'],\n            pop: true\n          },\n          {\n            regex: /[A-Z]+/\n          }\n        ],\n        duversion: [\n          {\n            regex: /LATEST|RELEASE/,\n            token: 'constant',\n            pop: true\n          },\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            next: 'genctxvar'\n          },\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            next: 'ctxvar'\n          },\n          {\n            regex: /{/,\n            token: 'bracket',\n            next: 'versionDecl'\n          },\n          {\n            regex: /[A-Z]+/\n          }\n        ],\n        versionDecl: [\n          {\n            regex: /}/,\n            token: 'bracket',\n            pop: true\n          },\n          {\n            regex: /[a-zA-Z0-9_-]+/,\n            token: 'platform'\n          },\n          {\n            regex: /LATEST|RELEASE/,\n            token: 'constant',\n            pop: true\n          },\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            next: 'genctxvar'\n          },\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            next: 'ctxvar'\n          },\n          {\n            regex: /'[^']*'/,\n            token: 'string',\n          },\n          {\n            regex: /\"[^\"]*\"/,\n            token: 'string',\n          },\n        ],\n        version: [\n          {\n            regex: /[/]/,\n            token: 'delimiter'\n          },\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            push: 'genctxvar',\n            pop: true\n          },\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            push: 'ctxvar',\n            pop: true\n          },\n          {\n            regex: /[0-9]+/,\n            token: 'version',\n            pop: true\n          },\n          {\n            regex: /LATEST|RELEASE/,\n            token: 'constant',\n            pop: true\n          },\n        ],\n        value: [\n          {\n            regex: /'/,\n            token: 'string',\n            next: 'singlequote'\n          },\n          {\n            regex: /\"/,\n            token: 'string',\n            next: 'doublequote'\n          },\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            next: 'genctxvar'\n          },\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            next: 'ctxvar'\n          }\n        ],\n        ctxvar: [\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            pop: true\n          },\n          {\n            regex: /[a-zA-Z0-9_-]+/,\n            token: 'ctxvar'\n          }\n        ],\n        genctxvar: [\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            pop: true\n          },\n          {\n            regex: /[a-zA-Z0-9_-]+/,\n            token: 'ctxvar'\n          }\n        ],\n        singlequote: [\n          {\n            regex: /\\\\./,\n            token: 'escaped'\n          },\n          {\n            regex: /'/,\n            token: 'string',\n            pop: true\n          },\n          {\n            regex: /[^\\\\']*/,\n            token: 'string'\n          }\n        ],\n        doublequote: [\n          {\n            regex: /\\\\./,\n            token: 'escaped'\n          },\n          {\n            regex: /\"/,\n            token: 'string',\n            pop: true\n          },\n          {\n            regex: /[^\\\\\"]*/,\n            token: 'string'\n          }\n        ],\n        namelist: [\n          {\n            regex: /,/,\n            token: 'delimiter'\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-]*[ \\t\\n]*,)/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n        ],\n        namelistInstancepath: [\n          {\n            regex: /,/,\n            token: 'delimiter'\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-]*[ \\t\\n]*,)/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            next: 'instancepathInstancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n        ],\n        instancepathInstancepath: [\n          {\n            regex: /[ \\t\\n]+/,\n            next: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n          {\n            regex: /(?=[^ \\t\\n])/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          }\n        ],\n        instancepath: [\n          {\n            regex: /([*])([./])/,\n            token: ['wildcard', 'delimiter']\n          },\n          {\n            regex: /(%%)(?=[^ ]*%%[./])/,\n            token: 'ctxvarbracket',\n            push: 'genctxvar'\n          },\n          {\n            regex: /(%)(?=[^ ]*%[./])/,\n            token: 'ctxvarbracket',\n            push: 'ctxvar'\n          },\n          {\n            regex: /([a-zA-Z0-9_-]+)([./])/,\n            token: ['identifier', 'delimiter'],\n            process: function (state, matches) {\n              state.instancePath.push(matches[1]);\n            }\n          },\n          {\n            regex: /%%/,\n            token: 'ctxvarbracket',\n            next: 'genctxvar'\n          },\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            next: 'ctxvar'\n          },\n          {\n            regex: /[*]/,\n            token: 'wildcard',\n            pop: true\n          },\n          {\n            regex: /[a-zA-Z0-9_-]+/,\n            token: 'identifier',\n            process: function (state, matches) {\n              state.instancePath.push(matches[0]);\n            },\n            pop: true\n          },\n        ],\n        network: [\n          {\n            regex: /[ \\t\\n]+/,\n            next: 'networkVal'\n          },\n          {\n            regex: /(?=[a-zA-Z0-9%*_-])/,\n            push: 'instancepath',\n            process: function (state) {\n              state.instancePath = [];\n            }\n          },\n        ],\n        networkVal: [\n          {\n            regex: /%/,\n            token: 'ctxvarbracket',\n            next: 'ctxvar'\n          },\n          {\n            regex: /[a-zA-Z0-9.:%@_-]+/,\n            token: 'network',\n            pop: true\n          },\n        ],\n        meta: {\n          lineComment: '//'\n        }\n      };\n\n      return {\n        startState: function () {\n          return {\n            state: 'start',\n            stack: [],\n          };\n        },\n        token: function (stream, state) {\n          if (state.pending) {\n            var pend = state.pending.shift();\n            if (state.pending.length === 0) {\n              state.pending = null;\n            }\n            stream.pos += pend.text.length;\n            return pend.token;\n          }\n\n          var rules = STATES[state.state];\n          if (rules) {\n            for (var i = 0; i < rules.length; i++) {\n              var rule = rules[i];\n              if (rule) {\n                var matches = stream.match(rule.regex);\n                if (matches) {\n                  if (rule.next) {\n                    state.state = rule.next;\n                  } else if (rule.pop && state.stack.length > 0) {\n                    var item = state.stack.pop();\n                    state.state = item.state;\n                    if (typeof item.onPop === 'function') {\n                      item.onPop(state);\n                    }\n                  } else if (rule.push) {\n                    // push current state on the stack\n                    state.stack.push({\n                      state: state.state,\n                      onPop: rule.onPop\n                    });\n                    // replace current state with given state to 'push'\n                    state.state = rule.push;\n                  }\n\n                  if (typeof rule.process === 'function') {\n                    rule.process(state, matches);\n                  }\n\n                  if (rule.token) {\n                    if (matches.length > 2) {\n                      state.pending = [];\n                      for (var j = 2; j < matches.length; j++) {\n                        if (matches[j]) {\n                          state.pending.push({\n                            text: matches[j],\n                            token: rule.token[j - 1]\n                          });\n                        }\n                      }\n                      stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n                      return rule.token[0];\n                    }\n                    if (typeof rule.token.join === 'function') {\n                      // rule.token is an array\n                      return rule.token.join(' ');\n                    } else {\n                      // rule.token is a string\n                      return rule.token;\n                    }\n                  }\n                  // no style given\n                  return null;\n                }\n              }\n            }\n          }\n\n          // unable to match any rule, advance stream and return no style\n          stream.next();\n          return null;\n        },\n        copyState: function (state) {\n          var s = {\n            stmt: state.stmt,\n            state: state.state,\n            stack: state.stack.slice(),\n          };\n          if (state.pending) {\n            s.pending = state.pending.slice();\n          }\n          if (state.instancePath) {\n            s.instancePath = state.instancePath.slice();\n          }\n          if (state.namespace) {\n            s.namespace = state.namespace;\n          }\n          if (state.typedef) {\n            s.typedef = state.typedef;\n          }\n          return s;\n        }\n      };\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .run(function (kScript, kEditor) {\n    var tokens = ['repoToken', 'includeToken', 'addToken', 'removeToken', 'moveToken',\n      'setToken', 'attachToken', 'detachToken', 'networkToken', 'bindToken',\n      'unbindToken', 'namespaceToken', 'startToken', 'stopToken',\n      'pauseToken', 'comment'];\n\n    function findLine(pos, lines) {\n      var line = -1;\n      for (var i = 0; i < lines.length; i++) {\n        if ((pos[0] >= lines[i].start) && (pos[1] <= lines[i].end)) {\n          line = lines[i].line;\n          break;\n        }\n      }\n      return line;\n    }\n\n    function relativeToLine(ch, lines) {\n      var val = 0;\n      for (var i = 0; i < lines.length; i++) {\n        var tmp = val + (lines[i].end - lines[i].start) + 1; // + 1 is for \\n\n        if (tmp > ch) {\n          return ch - val;\n        } else {\n          val = tmp;\n        }\n      }\n      return ch - val;\n    }\n\n    CodeMirror.registerHelper('lint', 'kevscript', function (ctxVars) {\n      return function (text, updateLinting, options, cm) {\n        CodeMirror.signal(cm, 'lintStart');\n        var start = 0;\n        var lines = text.split('\\n').map(function (line, i) {\n          var obj = {\n            start: start,\n            end: start + line.length,\n            line: i\n          };\n          start += line.length + 1;\n          return obj;\n        });\n\n        kScript.parse(text, kEditor.getModel(), ctxVars, function (err, model, warnings) {\n          var error;\n          var lintErrors = [];\n          if (err) {\n            if (err.nt) {\n              var message = 'Unable to match \\'' + err.nt + '\\'';\n              if (err.nt === 'ws') {\n                message = 'Unable to match \\'whitespace\\'';\n              } else if (err.nt === 'kevScript') {\n                message = 'A line must start with a statement (add, attach, set, etc.)';\n              } else if (tokens.indexOf(err.nt) >= 0) {\n                message = 'Expected statement or comment (do you mean \\'' + (err.nt.split('Token').shift()) + '\\'?)';\n              }\n              lintErrors.push({\n                severity: 'error',\n                message: message,\n                from: CodeMirror.Pos(err.line - 1, (err.col === 0) ? 0 : err.col - 1),\n                to: CodeMirror.Pos(err.line - 1, (err.col === 0) ? 1 : err.col)\n              });\n            } else {\n              if (err.pos) {\n                var line = findLine(err.pos, lines);\n                lintErrors.push({\n                  severity: 'error',\n                  message: err.message,\n                  from: CodeMirror.Pos(line, relativeToLine(err.pos[0], lines)),\n                  to: CodeMirror.Pos(line, relativeToLine(err.pos[1], lines))\n                });\n              } else {\n                error = err;\n              }\n            }\n          } else {\n            options.lintedModel = model;\n          }\n\n          warnings.forEach(function (warning) {\n            var line = findLine(warning.pos, lines);\n            lintErrors.push({\n              severity: 'warning',\n              message: warning.message,\n              from: CodeMirror.Pos(line, relativeToLine(warning.pos[0], lines)),\n              to: CodeMirror.Pos(line, relativeToLine(warning.pos[1], lines))\n            });\n          });\n\n          CodeMirror.signal(cm, 'lintDone', error, lintErrors, model);\n          updateLinting(cm, lintErrors);\n        });\n      };\n    });\n  });\n","'use strict';\n\nangular.module('editorApp')\n  .run(function (kModelHelper) {\n    CodeMirror.registerHelper('hint', 'kevscript', function (cm, callback) {\n      var HINT_TPL = document.querySelector('#kevscript-hint-popup')\n        .innerHTML;\n\n      var cursor = cm.getCursor();\n      var token = cm.getTokenAt(cursor);\n      var cur = token.string;\n      var start = token.start;\n      var end = token.end;\n      var list = [];\n      var tmp;\n\n      // console.log({\n      // \tstate: token.state.state,\n      // \tstmt: token.state.stmt,\n      // \tstring: token.string,\n      // \ttype: token.type,\n      // \tinstancePath: token.state.instancePath\n      // });\n\n      function model() {\n        return cm.options.lint.lintedModel;\n      }\n\n      function rootInstances() {\n        return model()\n          .nodes.array\n          .concat(model()\n            .groups.array)\n          .concat(model()\n            .hubs.array);\n      }\n\n      function findRootInstance(name) {\n        return rootInstances()\n          .find(function (i) {\n            return i.name === name;\n          });\n      }\n\n      function getType(model) {\n        if (model.class.startsWith('org.kevoree.ComponentType')) {\n          return 'component';\n        } else if (model.class.startsWith('org.kevoree.ChannelType')) {\n          return 'channel';\n        } else if (model.class.startsWith('org.kevoree.GroupType')) {\n          return 'group';\n        } else if (model.class.startsWith('org.kevoree.NodeType')) {\n          return 'node';\n        }\n        return 'tdef';\n      }\n\n      function getPlatforms(tdef) {\n        var platforms = [];\n        tdef.deployUnits.forEach(function (du) {\n          if (platforms.indexOf(du.platform) === -1) {\n            platforms.push(du.platform);\n          }\n        });\n        return platforms;\n      }\n\n      function spaceHelper() {\n        cm.doc.replaceSelection(' ');\n      }\n\n      if (token.type === 'typedef' || token.state.state === 'typedef') {\n        if (token.type === 'namespace') {\n          tmp = cur;\n          cur = tmp.trim();\n          start += tmp.length - cur.length;\n\n          // show namespace list\n          return KevoreeRegistryClient.ns.all()\n            .then(function (namespaces) {\n              callback({\n                list: namespaces\n                  .filter(function (ns) {\n                    return cur.trim()\n                      .length === 0 || ns.name.startsWith(cur);\n                  })\n                  .sort(function (ns0, ns1) {\n                    return ns0.name.localeCompare(ns1.name);\n                  })\n                  .map(function (ns) {\n                    return {\n                      type: 'namespace',\n                      typeText: 'n',\n                      text: ns.name,\n                      bufferText: ns.name + '.'\n                    };\n                  })\n                  .map(function (data) {\n                    return {\n                      text: data.bufferText,\n                      className: 'cm-kevs-hint-elem',\n                      render: function (elem) {\n                        elem = jQuery(elem);\n                        var renderedTpl = Mustache.render(HINT_TPL, data);\n                        var child = jQuery(renderedTpl);\n                        elem.append(child);\n                      }\n                    };\n                  }),\n                from: CodeMirror.Pos(cursor.line, start),\n                to: CodeMirror.Pos(cursor.line, end)\n              });\n            });\n        } else {\n          start = (cur === '.') ? token.end : token.start;\n          var ns = (cur === '.') ? token.state.namespace : 'kevoree';\n          return KevoreeRegistryClient.tdef.getAllByNamespace(ns)\n            .then(function (tdefs) {\n              callback({\n                list: tdefs\n                  .filter(function (tdef) {\n                    if (cur === '.' || cur.trim().length === 0) {\n                      return true;\n                    } else {\n                      return tdef.name.startsWith(cur);\n                    }\n                  })\n                  .sort(function (tdef0, tdef1) {\n                    return tdef0.name.localeCompare(tdef1.name);\n                  })\n                  .map(function (tdef) {\n                    var model = JSON.parse(tdef.model);\n                    var type = getType(model);\n                    var platforms = getPlatforms(tdef);\n                    return {\n                      type: type,\n                      typeText: type.substr(0, 1),\n                      text: tdef.name + '/' + tdef.version,\n                      bufferText: tdef.name,\n                      desc: 'platforms=' + platforms.join(','),\n                      from: CodeMirror.Pos(cursor.line, start)\n                    };\n                  })\n                  .map(function (data) {\n                    return {\n                      text: data.bufferText,\n                      className: 'cm-kevs-hint-elem',\n                      render: function (elem) {\n                        elem = jQuery(elem);\n                        var renderedTpl = Mustache.render(HINT_TPL, data);\n                        var child = jQuery(renderedTpl);\n                        elem.append(child);\n                      },\n                      from: data.from,\n                      to: data.to\n                    };\n                  }),\n                from: CodeMirror.Pos(cursor.line, token.end),\n                to: CodeMirror.Pos(cursor.line, token.end)\n              });\n            });\n        }\n      }\n\n      switch (token.state.state) {\n        case 'start':\n          if (token.type === 'identifier') {\n            if (token.state.stmt === 'attach' || token.state.stmt === 'detach') {\n              // show groups\n              list = model().groups.array\n                .map(function (group) {\n                  return {\n                    type: 'group',\n                    text: group.name,\n                    desc: group.typeDefinition.name + '/' + group.typeDefinition.version\n                  };\n                })\n                .filter(function (item) {\n                  return cur.length === 0 || item.text.startsWith(cur);\n                });\n            } else if (token.state.stmt === 'bind' || token.state.stmt === 'unbind') {\n              // show channels\n              list = model().hubs.array\n                .map(function (chan) {\n                  return {\n                    type: 'channel',\n                    text: chan.name,\n                    desc: chan.typeDefinition.name + '/' + chan.typeDefinition.version\n                  };\n                })\n                .filter(function (item) {\n                  return cur.length === 0 || item.text.startsWith(cur);\n                });\n            }\n          } else {\n            tmp = cur;\n            cur = tmp.trim();\n            start += tmp.length - cur.length;\n            list = [\n                { text: 'add', desc: 'create an instance' },\n                { text: 'remove', desc: 'remove an instance' },\n                { text: 'set', desc: 'change a param value' },\n                { text: 'bind', desc: 'connect a port to a chan' },\n                { text: 'unbind', desc: 'disconnect a port from a chan' },\n                { text: 'attach', desc: 'connect a node to a group' },\n                { text: 'detach', desc: 'disconnect a node from a group' },\n                { text: 'network', desc: 'define a node network value' },\n                { text: 'start', desc: 'start an instance' },\n                { text: 'stop', desc: 'stop an instance' },\n                { text: 'move', desc: 'move an instance to another node' },\n            ]\n              .map(function (stmt) {\n                stmt.type = 'stmt';\n                stmt.bufferText = stmt.text + ' ';\n                return stmt;\n              })\n              .filter(function (item) {\n                return cur.length === 0 || item.text.startsWith(cur);\n              })\n              .sort(function (item0, item1) {\n                return item0.text.localeCompare(item1.text);\n              });\n          }\n          break;\n\n        case 'addStmt':\n        case 'bindStmt':\n        case 'unbindStmt':\n          if (cur === 'add' || cur === 'set' || cur === 'bind' || cur === 'unbind') {\n            spaceHelper();\n          } else {\n            tmp = cur;\n            cur = tmp.trim();\n            start += tmp.length - cur.length;\n            // hint with node instances\n            list = model()\n              .nodes.array.map(function (node) {\n                return {\n                  type: 'node',\n                  text: node.name,\n                  desc: node.typeDefinition.name + '/' + node.typeDefinition.version,\n                  bufferText: node.name + '.'\n                };\n              });\n\n            if (cur.length > 0) {\n              // there is already some text in the buffer => filter using it\n              list = list.filter(function (item) {\n                return item.text.startsWith(cur);\n              });\n            }\n          }\n          break;\n\n        case 'setStmt':\n          if (cur === 'set') {\n            spaceHelper();\n          } else {\n            if (token.state.instancePath.length === 3) {\n              // show nodes for fragment\n              list = model().nodes.array\n                .map(function (node) {\n                  return {\n                    type: 'node',\n                    text: node.name,\n                    bufferText: node.name + ' = \\'\\'',\n                    desc: node.typeDefinition.name + '/' + node.typeDefinition.version\n                  };\n                })\n                .filter(function (item) {\n                  return item.text.startsWith(cur);\n                });\n            } else if (token.state.instancePath.length === 2) {\n              tmp = findRootInstance(token.state.instancePath[0]);\n              if (tmp) {\n                // show attributes\n                list = tmp.typeDefinition.dictionaryType.attributes.array\n                  .map(function (attr) {\n                    return {\n                      type: 'attr',\n                      text: attr.name + (attr.fragmentDependant ? '/<node>' : ''),\n                      bufferText: attr.fragmentDependant ? attr.name + '/' : attr.name,\n                      desc: (attr.optional ? 'optional ' : '') + '\"' + attr.datatype.toString().toLowerCase() + '\"'\n                    };\n                  });\n                // show also components if it's a node\n                if (tmp.metaClassName() === 'org.kevoree.ContainerNode') {\n                  list = list\n                    .concat(tmp.components.array\n                      .map(function (comp) {\n                        return {\n                          type: 'component',\n                          text: comp.name,\n                          bufferText: comp.name + '.',\n                          desc: comp.typeDefinition.name + '/' + comp.typeDefinition.version\n                        };\n                      })\n                    );\n                }\n\n                list = list.filter(function (item) {\n                  return item.text.startsWith(cur);\n                });\n              }\n            } else {\n              tmp = cur;\n              cur = tmp.trim();\n              start += tmp.length - cur.length;\n              list = rootInstances()\n                .map(function (instance) {\n                  return {\n                    type: kModelHelper.getTypeDefinitionType(instance.typeDefinition),\n                    text: instance.name,\n                    desc: instance.typeDefinition.name + '/' + instance.typeDefinition.version,\n                    bufferText: instance.name + '.'\n                  };\n                });\n\n              if (cur.length > 0) {\n                list = list.filter(function (elem) {\n                  return elem.text.startsWith(cur);\n                });\n              }\n            }\n          }\n          break;\n\n        case 'attachStmt':\n        case 'detachStmt':\n          if (cur === 'attach' || cur === 'detach') {\n            spaceHelper();\n          } else {\n            tmp = cur;\n            cur = tmp.trim();\n            start += tmp.length - cur.length;\n            list = model()\n              .nodes.array.map(function (node) {\n                return {\n                  type: 'node',\n                  text: node.name,\n                  desc: node.typeDefinition.name + '/' + node.typeDefinition.version\n                };\n              });\n\n            if (cur.length > 0) {\n              list = list.filter(function (elem) {\n                return elem.text.startsWith(cur);\n              });\n            }\n          }\n          break;\n\n        case 'network':\n          if (cur === 'network') {\n            spaceHelper();\n          } else {\n            tmp = cur;\n            cur = tmp.trim();\n            start += tmp.length - cur.length;\n            list = model()\n              .nodes.array.map(function (node) {\n                return {\n                  type: 'node',\n                  text: node.name,\n                  desc: node.typeDefinition.name + '/' + node.typeDefinition.version,\n                  bufferText: node.name + '.'\n                };\n              });\n\n            if (cur.length > 0) {\n              list = list.filter(function (elem) {\n                return elem.text.startsWith(cur);\n              });\n            }\n          }\n          break;\n\n        case 'networkStmt':\n          cur = '';\n          start += 1;\n          list = model().nodes.array.map(function (node) {\n            return {\n              type: 'node',\n              text: node.name,\n              bufferText: node.name + '.',\n              desc: node.typeDefinition.name + '/' + node.typeDefinition.version\n            };\n          });\n          break;\n\n        case 'tdefversion':\n          if (cur === '/') {\n            cur = '';\n            start = token.end;\n            end += 1;\n          }\n          list = [{\n            type: 'version',\n            text: 'LATEST',\n            desc: 'the latest available version',\n          }].concat(model()\n            .select('packages[' + (token.state.namespace || 'kevoree') + ']/typeDefinitions[name=' + token.state.typedef + ']')\n            .array\n            .map(function (tdef) {\n              return {\n                type: 'version',\n                text: tdef.version,\n                desc: tdef.eContainer()\n                  .name + '.' + tdef.name\n              };\n            }));\n\n          if (cur.length > 0) {\n            list = list.filter(function (item) {\n              return item.text.startsWith(cur);\n            });\n          }\n          break;\n\n        case 'duversion':\n          if (cur === '/') {\n            cur = '';\n            start = token.end;\n            end += 1;\n          }\n          list = [\n            {\n              type: 'version',\n              text: 'LATEST',\n              desc: 'the latest available deploy unit',\n            },\n            {\n              type: 'version',\n              text: 'RELEASE',\n              desc: 'the latest available deploy unit (stable)',\n            }\n          ];\n\n          if (cur.length > 0) {\n            list = list.filter(function (item) {\n              return item.text.startsWith(cur);\n            });\n          }\n          break;\n\n        case 'instancepath':\n        case 'instancepathInstancepath':\n        case 'namelistInstancepath':\n          if (token.state.stmt === 'set') {\n            // we need to show components + attributes\n            var rootInstance = findRootInstance(token.state.instancePath[0]);\n            if (rootInstance) {\n              if (token.state.instancePath.length === 1) {\n                list = rootInstance.typeDefinition.dictionaryType.attributes.array\n                  .map(function (attr) {\n                    return {\n                      type: 'attr',\n                      text: attr.name + (attr.fragmentDependant ? '/<node>' : ''),\n                      bufferText: attr.name + (attr.fragmentDependant ? '/' : ' = \\'\\''),\n                      desc: (attr.optional ? 'optional ' : '') + '\"' + attr.datatype.toString()\n                        .toLowerCase() + '\"',\n                      from: CodeMirror.Pos(cursor.line, token.end)\n                    };\n                  });\n                if (rootInstance.components) {\n                  // rootInstance is a node: add components\n                  list = list.concat(rootInstance.components.array\n                    .map(function (comp) {\n                      return {\n                        type: 'component',\n                        text: comp.name,\n                        bufferText: comp.name + '.',\n                        desc: comp.typeDefinition.name + '/' + comp.typeDefinition.version,\n                        from: CodeMirror.Pos(cursor.line, token.end)\n                      };\n                    }));\n                }\n              } else if (token.state.instancePath.length === 2) {\n                if (token.type === 'delimiter' && token.string === '/') {\n                  cur = '';\n                  start += 1;\n                  // fragment attribute part: show node list\n                  if (rootInstance.subNodes) {\n                    // this is a group: we are fine\n                    list = rootInstance.subNodes.array.map(function (node) {\n                      return {\n                        type: 'node',\n                        text: node.name,\n                        bufferText: node.name + ' = \\'\\'',\n                        desc: node.typeDefinition.name + '/' + node.typeDefinition.version\n                      };\n                    });\n                  }\n                }\n                if (rootInstance.components) {\n                  // looking for attrs in comp\n                  tmp = rootInstance.findComponentsByID(token.state.instancePath[1]);\n                  if (tmp) {\n                    list = tmp.typeDefinition.dictionaryType.attributes.array\n                      .map(function (attr) {\n                        return {\n                          type: 'attr',\n                          text: attr.name,\n                          bufferText: attr.name + ' = \\'\\'',\n                          desc: (attr.optional ? 'optional ' : '') + '\"' + attr.datatype.toString()\n                            .toLowerCase() + '\"',\n                          from: CodeMirror.Pos(cursor.line, token.end)\n                        };\n                      });\n                  }\n                }\n              }\n            }\n          } else if (token.state.stmt === 'bind' || token.state.stmt === 'unbind') {\n            if (token.state.instancePath.length === 0) {\n              // show channels\n              list = model()\n                .hubs.array.map(function (chan) {\n                  return {\n                    type: 'channel',\n                    text: chan.name,\n                    desc: chan.typeDefinition.name + '/' + chan.typeDefinition.version,\n                    from: CodeMirror.Pos(cursor.line, token.end)\n                  };\n                });\n            } else if (token.state.instancePath.length === 1) {\n              if (token.type === 'delimiter' && token.string === '.') {\n                // now show components\n                tmp = model()\n                  .findNodesByID(token.state.instancePath[0]);\n                if (tmp) {\n                  list = tmp.components.array.map(function (comp) {\n                    return {\n                      type: 'component',\n                      text: comp.name,\n                      desc: comp.typeDefinition.name + '/' + comp.typeDefinition.version,\n                      bufferText: comp.name + '.',\n                      from: CodeMirror.Pos(cursor.line, token.end)\n                    };\n                  });\n                }\n              } else {\n                list = model()\n                  .nodes.array.map(function (node) {\n                    return {\n                      type: 'node',\n                      text: node.name,\n                      desc: node.typeDefinition.name + '/' + node.typeDefinition.version,\n                      bufferText: node.name + '.'\n                    };\n                  });\n\n                if (cur.length > 0) {\n                  list = list.filter(function (item) {\n                    return item.text.startsWith(cur);\n                  });\n                }\n              }\n            } else if (token.state.instancePath.length === 2) {\n              if (token.type === 'delimiter' && token.string === '.') {\n                // now show components\n                tmp = model()\n                  .findNodesByID(token.state.instancePath[0]);\n                if (tmp) {\n                  var comp = tmp.findComponentsByID(token.state.instancePath[1]);\n                  if (comp) {\n                    list = comp.typeDefinition.provided.array\n                      .map(function (port) {\n                        return {\n                          type: 'input',\n                          text: port.name,\n                          from: CodeMirror.Pos(cursor.line, token.end)\n                        };\n                      })\n                      .concat(comp.typeDefinition.required.array\n                        .map(function (port) {\n                          return {\n                            type: 'output',\n                            text: port.name,\n                            from: CodeMirror.Pos(cursor.line, token.end)\n                          };\n                        }));\n                  }\n                }\n              }\n            }\n          } else if (token.state.stmt === 'attach' || token.state.stmt === 'detach') {\n            if (token.state.instancePath.length === 0 && token.type !== 'wildcard') {\n              // show groups\n              list = model()\n                .groups.array\n                .map(function (grp) {\n                  return {\n                    type: 'group',\n                    text: grp.name,\n                    desc: grp.typeDefinition.name + '/' + grp.typeDefinition.version,\n                    from: CodeMirror.Pos(cursor.line, token.end)\n                  };\n                });\n            } else if (token.state.instancePath.length === 1) {\n              if (token.type === 'delimiter' && token.string === '.') {\n                // now show components\n                tmp = model()\n                  .findNodesByID(token.state.instancePath[0]);\n                if (tmp) {\n                  list = tmp.components.array.map(function (comp) {\n                    return {\n                      type: 'component',\n                      text: comp.name,\n                      desc: comp.typeDefinition.name + '/' + comp.typeDefinition.version,\n                      bufferText: comp.name + '.',\n                      from: CodeMirror.Pos(cursor.line, token.end)\n                    };\n                  });\n                }\n              } else {\n                if (cur === ' ') {\n                  cur = '';\n                  start += 1;\n                }\n                list = model()\n                  .nodes.array.map(function (node) {\n                    return {\n                      type: 'node',\n                      text: node.name,\n                      desc: node.typeDefinition.name + '/' + node.typeDefinition.version\n                    };\n                  });\n\n                if (cur.length > 0) {\n                  list = list.filter(function (item) {\n                    return item.text.startsWith(cur);\n                  });\n                }\n              }\n            }\n          }\n          break;\n\n        default:\n          list = [];\n          break;\n      }\n\n      return callback({\n        list: list\n          .map(function (data) {\n            data.bufferText = data.bufferText || data.text;\n            data.typeText = function () {\n              return data.type.substr(0, 1);\n            };\n            return data;\n          })\n          .map(function (data) {\n            return {\n              text: data.bufferText,\n              className: 'cm-kevs-hint-elem',\n              render: function (elem) {\n                elem = jQuery(elem);\n                var renderedTpl = Mustache.render(HINT_TPL, data);\n                var child = jQuery(renderedTpl);\n                elem.append(child);\n              },\n              from: data.from,\n              to: data.to\n            };\n          }),\n        from: CodeMirror.Pos(cursor.line, start),\n        to: CodeMirror.Pos(cursor.line, end)\n      });\n    });\n  });\n","// DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\nangular\n\t.module('editorApp')\n\t\t.constant('VERSION', \"5.14.0\")\n\t\t.constant('APP_NAME', \"Kevoree Web Editor\")\n\t\t.constant('KWE_POSITION', \"kwe_position\")\n\t\t.constant('KWE_FOLDED', \"kwe_folded\")\n\t\t.constant('KWE_TAG', \"kwe_tag\")\n\t\t.constant('KWE_SELECTED', \"kwe_selected\")\n\t\t.constant('KEVOREE_REGISTRY_URL', \"https://registry.kevoree.org\")\n;\n","angular.module('editorApp')\n\t.config(function ($stateProvider, $urlRouterProvider, hotkeysProvider, hljsServiceProvider, NotificationProvider) {\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider\n\t\t\t.state('app', {\n  abstract: true,\n  url: '?host&port&path',\n  views: {\n    'navbar@': {\n      templateUrl: 'app/navbar/navbar.html',\n      controller: 'NavBarCtrl'\n    }\n  }\n});\n\n  hotkeysProvider.template = '<div class=\"editor-shortcuts\" ng-include src=\"\\'app/components/util/hotkeys.html\\'\" data-ng-if=\"helpVisible\"></div>';\n\n  hljsServiceProvider.setOptions({\n    tabReplace: '  '\n  });\n\n  NotificationProvider.setOptions({\n    startTop: 90,\n    replaceMessage: true,\n    delay: 5000\n  });\n\n  TinyConf.set('cache', {\n    root: 'kevs-cache-',\n    ttl: 1000 * 60 * 60 * 24 // 24 hours\n  });\n});\n"],"sourceRoot":"/source/"}